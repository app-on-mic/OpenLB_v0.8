
Begin optimization report for: olb::Dynamics<double, olb::descriptors::MRTD2Q9Descriptor>::iniEquilibrium(olb::Dynamics<double, olb::descriptors::MRTD2Q9Descriptor> *, olb::Cell<double, olb::descriptors::MRTD2Q9Descriptor> &, double, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(92,3) inlined into ../../src/core/dynamics.hh(52,12)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.640 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(53,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END
===========================================================================

Begin optimization report for: olb::Dynamics<double, olb::descriptors::MRTD2Q9Descriptor>::computePopulations(const olb::Dynamics<double, olb::descriptors::MRTD2Q9Descriptor> *, const olb::Cell<double, olb::descriptors::MRTD2Q9Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/dynamics.hh(45,3)
<Peeled, Multiversioned v1>
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(45,3)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15467: unmasked aligned streaming stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 2.000 
   remark #15478: estimated potential speedup: 1.320 
   remark #15479: lightweight vector operations: 1 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(45,3)
<Remainder, Multiversioned v1>
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(45,3)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END
===========================================================================

Begin optimization report for: olb::Dynamics<double, olb::descriptors::MRTD2Q9Descriptor>::computeExternalField(const olb::Dynamics<double, olb::descriptors::MRTD2Q9Descriptor> *, const olb::Cell<double, olb::descriptors::MRTD2Q9Descriptor> &, int, int, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/dynamics.hh(63,3)
<Peeled, Multiversioned v1>
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(63,3)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15467: unmasked aligned streaming stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 8 
   remark #15477: vector loop cost: 1.250 
   remark #15478: estimated potential speedup: 5.780 
   remark #15479: lightweight vector operations: 3 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(63,3)
<Multiversioned v1>
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(63,3)
<Remainder, Multiversioned v1>
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(63,3)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(63,3)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: olb::Dynamics<double, olb::descriptors::MRTD2Q9Descriptor>::definePopulations(olb::Dynamics<double, olb::descriptors::MRTD2Q9Descriptor> *, olb::Cell<double, olb::descriptors::MRTD2Q9Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/dynamics.hh(71,3)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 3.250 
   remark #15478: estimated potential speedup: 1.210 
   remark #15479: lightweight vector operations: 1 
   remark #15480: medium-overhead vector operations: 1 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(71,3)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(71,3)
<Remainder, Multiversioned v1>
LOOP END
===========================================================================

Begin optimization report for: olb::Dynamics<double, olb::descriptors::MRTD2Q9Descriptor>::defineExternalField(olb::Dynamics<double, olb::descriptors::MRTD2Q9Descriptor> *, olb::Cell<double, olb::descriptors::MRTD2Q9Descriptor> &, int, int, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/dynamics.hh(82,3)
<Peeled, Multiversioned v1>
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(82,3)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15467: unmasked aligned streaming stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 8 
   remark #15477: vector loop cost: 2.250 
   remark #15478: estimated potential speedup: 3.370 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(82,3)
<Multiversioned v1>
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(82,3)
<Remainder, Multiversioned v1>
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(82,3)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(82,3)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: olb::MRTdynamics<double, olb::descriptors::MRTD2Q9Descriptor>::MRTdynamics(olb::MRTdynamics<double, olb::descriptors::MRTD2Q9Descriptor> *, double, olb::Momenta<double, olb::descriptors::MRTD2Q9Descriptor> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at mrtDynamics.hh(50,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15467: unmasked aligned streaming stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 0.750 
   remark #15478: estimated potential speedup: 3.600 
   remark #15479: lightweight vector operations: 3 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at mrtDynamics.hh(54,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15459: masked indexed (or scatter) stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.710 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at mrtDynamics.hh(58,3)
<Distributed chunk1>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15462: unmasked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 3.000 
   remark #15478: estimated potential speedup: 1.280 
   remark #15479: lightweight vector operations: 3 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---

   LOOP BEGIN at mrtDynamics.hh(60,5)
   <Distributed chunk1>
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15467: unmasked aligned streaming stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 1.500 
      remark #15478: estimated potential speedup: 1.380 
      remark #15479: lightweight vector operations: 2 
      remark #15480: medium-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at mrtDynamics.hh(60,5)
   <Distributed chunk1>
   LOOP END

   LOOP BEGIN at mrtDynamics.hh(60,5)
   <Distributed chunk1>
   LOOP END

   LOOP BEGIN at mrtDynamics.hh(60,5)
   <Distributed chunk1>
   LOOP END

   LOOP BEGIN at mrtDynamics.hh(60,5)
   <Distributed chunk1>
   LOOP END

   LOOP BEGIN at mrtDynamics.hh(60,5)
   <Distributed chunk1>
   LOOP END

   LOOP BEGIN at mrtDynamics.hh(60,5)
   <Distributed chunk1>
   LOOP END

   LOOP BEGIN at mrtDynamics.hh(60,5)
   <Distributed chunk1>
   LOOP END

   LOOP BEGIN at mrtDynamics.hh(60,5)
   <Distributed chunk1>
   LOOP END
LOOP END

LOOP BEGIN at mrtDynamics.hh(50,3)
<Remainder>
LOOP END

LOOP BEGIN at mrtDynamics.hh(58,3)
<Distributed chunk2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at mrtDynamics.hh(63,7)
   <Distributed chunk2>
      remark #15301: PARTIAL LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15456: masked unaligned unit stride loads: 1 
      remark #15457: masked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 21 
      remark #15477: vector loop cost: 10.250 
      remark #15478: estimated potential speedup: 1.530 
      remark #15479: lightweight vector operations: 21 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at mrtDynamics.hh(63,7)
   <Remainder, Distributed chunk2>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::MRTdynamics<double, olb::descriptors::MRTD2Q9Descriptor>::MRTdynamics(olb::MRTdynamics<double, olb::descriptors::MRTD2Q9Descriptor> *const, double, olb::Momenta<double, olb::descriptors::MRTD2Q9Descriptor> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at mrtDynamics.hh(50,3) inlined into mrtDynamics.hh(45,25)
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15467: unmasked aligned streaming stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 0.750 
   remark #15478: estimated potential speedup: 3.600 
   remark #15479: lightweight vector operations: 3 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at mrtDynamics.hh(54,3) inlined into mrtDynamics.hh(45,25)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15459: masked indexed (or scatter) stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.710 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at mrtDynamics.hh(58,3) inlined into mrtDynamics.hh(45,25)
<Distributed chunk1>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15462: unmasked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 3.000 
   remark #15478: estimated potential speedup: 1.280 
   remark #15479: lightweight vector operations: 3 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---

   LOOP BEGIN at mrtDynamics.hh(60,5) inlined into mrtDynamics.hh(45,25)
   <Distributed chunk1>
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15467: unmasked aligned streaming stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 1.500 
      remark #15478: estimated potential speedup: 1.380 
      remark #15479: lightweight vector operations: 2 
      remark #15480: medium-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at mrtDynamics.hh(60,5) inlined into mrtDynamics.hh(45,25)
   <Distributed chunk1>
   LOOP END

   LOOP BEGIN at mrtDynamics.hh(60,5) inlined into mrtDynamics.hh(45,25)
   <Distributed chunk1>
   LOOP END

   LOOP BEGIN at mrtDynamics.hh(60,5) inlined into mrtDynamics.hh(45,25)
   <Distributed chunk1>
   LOOP END

   LOOP BEGIN at mrtDynamics.hh(60,5) inlined into mrtDynamics.hh(45,25)
   <Distributed chunk1>
   LOOP END

   LOOP BEGIN at mrtDynamics.hh(60,5) inlined into mrtDynamics.hh(45,25)
   <Distributed chunk1>
   LOOP END

   LOOP BEGIN at mrtDynamics.hh(60,5) inlined into mrtDynamics.hh(45,25)
   <Distributed chunk1>
   LOOP END

   LOOP BEGIN at mrtDynamics.hh(60,5) inlined into mrtDynamics.hh(45,25)
   <Distributed chunk1>
   LOOP END

   LOOP BEGIN at mrtDynamics.hh(60,5) inlined into mrtDynamics.hh(45,25)
   <Distributed chunk1>
   LOOP END
LOOP END

LOOP BEGIN at mrtDynamics.hh(50,3) inlined into mrtDynamics.hh(45,25)
<Remainder>
LOOP END

LOOP BEGIN at mrtDynamics.hh(58,3) inlined into mrtDynamics.hh(45,25)
<Distributed chunk2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at mrtDynamics.hh(63,7) inlined into mrtDynamics.hh(45,25)
   <Distributed chunk2>
      remark #15301: PARTIAL LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15456: masked unaligned unit stride loads: 1 
      remark #15457: masked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 21 
      remark #15477: vector loop cost: 10.250 
      remark #15478: estimated potential speedup: 1.530 
      remark #15479: lightweight vector operations: 21 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at mrtDynamics.hh(63,7) inlined into mrtDynamics.hh(45,25)
   <Remainder, Distributed chunk2>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::MRTdynamics<double, olb::descriptors::MRTD2Q9Descriptor>::collide(olb::MRTdynamics<double, olb::descriptors::MRTD2Q9Descriptor> *, olb::Cell<double, olb::descriptors::MRTD2Q9Descriptor> &, olb::LatticeStatistics<double> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(92,3) inlined into mrtDynamics.hh(99,12)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 8 
   remark #15477: vector loop cost: 3.500 
   remark #15478: estimated potential speedup: 0.610 
   remark #15479: lightweight vector operations: 6 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::MRTdynamics<double, olb::descriptors::MRTD2Q9Descriptor>::staticCollide(olb::MRTdynamics<double, olb::descriptors::MRTD2Q9Descriptor> *, olb::Cell<double, olb::descriptors::MRTD2Q9Descriptor> &, const double *, olb::LatticeStatistics<double> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(92,3) inlined into mrtDynamics.hh(116,12)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.640 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BulkMomenta<double, olb::descriptors::MRTD2Q9Descriptor>::defineRho(olb::BulkMomenta<double, olb::descriptors::MRTD2Q9Descriptor> *, olb::Cell<double, olb::descriptors::MRTD2Q9Descriptor> &, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(92,3) inlined into ../../src/core/dynamics.hh(777,12)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 8 
   remark #15477: vector loop cost: 3.500 
   remark #15478: estimated potential speedup: 0.610 
   remark #15479: lightweight vector operations: 6 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/lbHelpers2D.h(56,18) inlined into ../../src/core/dynamics.hh(779,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 3 
   remark #15460: masked strided loads: 2 
   remark #15467: unmasked aligned streaming stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 47 
   remark #15477: vector loop cost: 12.000 
   remark #15478: estimated potential speedup: 2.530 
   remark #15479: lightweight vector operations: 33 
   remark #15480: medium-overhead vector operations: 1 
   remark #15487: type converts: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/lbHelpers2D.h(56,18) inlined into ../../src/core/dynamics.hh(779,3)
<Remainder>
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(780,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15450: unmasked unaligned unit stride loads: 2 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15460: masked strided loads: 2 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 46 
   remark #15477: vector loop cost: 11.500 
   remark #15478: estimated potential speedup: 2.550 
   remark #15479: lightweight vector operations: 33 
   remark #15480: medium-overhead vector operations: 1 
   remark #15487: type converts: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(780,3)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::BulkMomenta<double, olb::descriptors::MRTD2Q9Descriptor>::defineU(olb::BulkMomenta<double, olb::descriptors::MRTD2Q9Descriptor> *, olb::Cell<double, olb::descriptors::MRTD2Q9Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(92,3) inlined into ../../src/core/dynamics.hh(793,12)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.640 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/lbHelpers2D.h(56,18) inlined into ../../src/core/dynamics.hh(795,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 3 
   remark #15460: masked strided loads: 2 
   remark #15467: unmasked aligned streaming stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 47 
   remark #15477: vector loop cost: 12.000 
   remark #15478: estimated potential speedup: 2.530 
   remark #15479: lightweight vector operations: 33 
   remark #15480: medium-overhead vector operations: 1 
   remark #15487: type converts: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/lbHelpers2D.h(56,18) inlined into ../../src/core/dynamics.hh(795,3)
<Remainder>
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(796,16)
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15450: unmasked unaligned unit stride loads: 2 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15460: masked strided loads: 2 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 46 
   remark #15477: vector loop cost: 11.500 
   remark #15478: estimated potential speedup: 2.550 
   remark #15479: lightweight vector operations: 33 
   remark #15480: medium-overhead vector operations: 1 
   remark #15487: type converts: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(796,16)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::BulkMomenta<double, olb::descriptors::MRTD2Q9Descriptor>::defineRhoU(olb::BulkMomenta<double, olb::descriptors::MRTD2Q9Descriptor> *, olb::Cell<double, olb::descriptors::MRTD2Q9Descriptor> &, double, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(92,3) inlined into ../../src/core/dynamics.hh(810,12)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.640 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/lbHelpers2D.h(56,18) inlined into ../../src/core/dynamics.hh(812,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 3 
   remark #15460: masked strided loads: 2 
   remark #15467: unmasked aligned streaming stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 47 
   remark #15477: vector loop cost: 12.000 
   remark #15478: estimated potential speedup: 2.530 
   remark #15479: lightweight vector operations: 33 
   remark #15480: medium-overhead vector operations: 1 
   remark #15487: type converts: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/lbHelpers2D.h(56,18) inlined into ../../src/core/dynamics.hh(812,3)
<Remainder>
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(813,16)
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15450: unmasked unaligned unit stride loads: 2 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15460: masked strided loads: 2 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 46 
   remark #15477: vector loop cost: 11.500 
   remark #15478: estimated potential speedup: 2.550 
   remark #15479: lightweight vector operations: 33 
   remark #15480: medium-overhead vector operations: 1 
   remark #15487: type converts: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(813,16)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::BulkMomenta<double, olb::descriptors::MRTD2Q9Descriptor>::defineAllMomenta(olb::BulkMomenta<double, olb::descriptors::MRTD2Q9Descriptor> *, olb::Cell<double, olb::descriptors::MRTD2Q9Descriptor> &, double, const double *, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(92,3) inlined into ../../src/core/dynamics.hh(825,12)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.640 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/firstOrderLbHelpers.h(70,23) inlined into ../../src/core/dynamics.hh(828,18)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between pi line 75 and cell line 827

   LOOP BEGIN at ../../src/core/firstOrderLbHelpers.h(66,5) inlined into ../../src/core/dynamics.hh(828,18)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between iPi line 75 and iPi line 67

      LOOP BEGIN at ../../src/core/firstOrderLbHelpers.h(67,7) inlined into ../../src/core/dynamics.hh(828,18)
         remark #15315: loop was not vectorized: low trip count
         remark #15450: unmasked unaligned unit stride loads: 2 
         remark #15475: --- begin vector loop cost summary ---
         remark #15479: lightweight vector operations: 35 
         remark #15480: medium-overhead vector operations: 1 
         remark #15481: heavy-overhead vector operations: 1 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../../src/core/firstOrderLbHelpers.h(67,7) inlined into ../../src/core/dynamics.hh(828,18)
      <Remainder>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BounceBack<double, olb::descriptors::MRTD2Q9Descriptor>::collide(olb::BounceBack<double, olb::descriptors::MRTD2Q9Descriptor> *, olb::Cell<double, olb::descriptors::MRTD2Q9Descriptor> &, olb::LatticeStatistics<double> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/dynamics.hh(965,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __a line 81 and __b line 83
LOOP END
===========================================================================

Begin optimization report for: olb::BounceBack<double, olb::descriptors::MRTD2Q9Descriptor>::computeU(const olb::BounceBack<double, olb::descriptors::MRTD2Q9Descriptor> *, const olb::Cell<double, olb::descriptors::MRTD2Q9Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/dynamics.hh(992,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 3.000 
   remark #15478: estimated potential speedup: 1.110 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BounceBack<double, olb::descriptors::MRTD2Q9Descriptor>::computeJ(const olb::BounceBack<double, olb::descriptors::MRTD2Q9Descriptor> *, const olb::Cell<double, olb::descriptors::MRTD2Q9Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/dynamics.hh(1002,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 3.000 
   remark #15478: estimated potential speedup: 1.110 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BounceBack<double, olb::descriptors::MRTD2Q9Descriptor>::computeStress(const olb::BounceBack<double, olb::descriptors::MRTD2Q9Descriptor> *, const olb::Cell<double, olb::descriptors::MRTD2Q9Descriptor> &, double, const double *, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/dynamics.hh(1013,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 3.000 
   remark #15478: estimated potential speedup: 1.070 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(1013,3)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::NoDynamics<double, olb::descriptors::MRTD2Q9Descriptor>::computeU(const olb::NoDynamics<double, olb::descriptors::MRTD2Q9Descriptor> *, const olb::Cell<double, olb::descriptors::MRTD2Q9Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/dynamics.hh(1106,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 3.000 
   remark #15478: estimated potential speedup: 1.110 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::NoDynamics<double, olb::descriptors::MRTD2Q9Descriptor>::computeJ(const olb::NoDynamics<double, olb::descriptors::MRTD2Q9Descriptor> *, const olb::Cell<double, olb::descriptors::MRTD2Q9Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/dynamics.hh(1116,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 3.000 
   remark #15478: estimated potential speedup: 1.110 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::NoDynamics<double, olb::descriptors::MRTD2Q9Descriptor>::computeStress(const olb::NoDynamics<double, olb::descriptors::MRTD2Q9Descriptor> *, const olb::Cell<double, olb::descriptors::MRTD2Q9Descriptor> &, double, const double *, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/dynamics.hh(1127,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 3.000 
   remark #15478: estimated potential speedup: 1.070 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(1127,3)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::Dynamics<double, olb::descriptors::MRTD3Q19Descriptor>::iniEquilibrium(olb::Dynamics<double, olb::descriptors::MRTD3Q19Descriptor> *, olb::Cell<double, olb::descriptors::MRTD3Q19Descriptor> &, double, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(92,3) inlined into ../../src/core/dynamics.hh(52,12)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.730 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(53,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
LOOP END
===========================================================================

Begin optimization report for: olb::Dynamics<double, olb::descriptors::MRTD3Q19Descriptor>::computePopulations(const olb::Dynamics<double, olb::descriptors::MRTD3Q19Descriptor> *, const olb::Cell<double, olb::descriptors::MRTD3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/dynamics.hh(45,3)
<Peeled, Multiversioned v1>
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(45,3)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15467: unmasked aligned streaming stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 1.250 
   remark #15478: estimated potential speedup: 1.970 
   remark #15479: lightweight vector operations: 3 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(45,3)
<Remainder, Multiversioned v1>
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(45,3)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END
===========================================================================

Begin optimization report for: olb::Dynamics<double, olb::descriptors::MRTD3Q19Descriptor>::computeExternalField(const olb::Dynamics<double, olb::descriptors::MRTD3Q19Descriptor> *, const olb::Cell<double, olb::descriptors::MRTD3Q19Descriptor> &, int, int, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/dynamics.hh(63,3)
<Peeled, Multiversioned v1>
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(63,3)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15467: unmasked aligned streaming stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 8 
   remark #15477: vector loop cost: 1.250 
   remark #15478: estimated potential speedup: 5.780 
   remark #15479: lightweight vector operations: 3 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(63,3)
<Multiversioned v1>
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(63,3)
<Remainder, Multiversioned v1>
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(63,3)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(63,3)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: olb::Dynamics<double, olb::descriptors::MRTD3Q19Descriptor>::definePopulations(olb::Dynamics<double, olb::descriptors::MRTD3Q19Descriptor> *, olb::Cell<double, olb::descriptors::MRTD3Q19Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/dynamics.hh(71,3)
<Peeled, Multiversioned v1>
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(71,3)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15467: unmasked aligned streaming stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.500 
   remark #15479: lightweight vector operations: 1 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(71,3)
<Remainder, Multiversioned v1>
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(71,3)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END
===========================================================================

Begin optimization report for: olb::Dynamics<double, olb::descriptors::MRTD3Q19Descriptor>::defineExternalField(olb::Dynamics<double, olb::descriptors::MRTD3Q19Descriptor> *, olb::Cell<double, olb::descriptors::MRTD3Q19Descriptor> &, int, int, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/dynamics.hh(82,3)
<Peeled, Multiversioned v1>
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(82,3)
<Multiversioned v1>
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15467: unmasked aligned streaming stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 8 
   remark #15477: vector loop cost: 2.250 
   remark #15478: estimated potential speedup: 3.370 
   remark #15479: lightweight vector operations: 2 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(82,3)
<Multiversioned v1>
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(82,3)
<Remainder, Multiversioned v1>
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(82,3)
<Multiversioned v2>
   remark #15304: loop was not vectorized: non-vectorizable loop instance from multiversioning
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(82,3)
<Remainder, Multiversioned v2>
LOOP END
===========================================================================

Begin optimization report for: olb::MRTdynamics<double, olb::descriptors::MRTD3Q19Descriptor>::MRTdynamics(olb::MRTdynamics<double, olb::descriptors::MRTD3Q19Descriptor> *, double, olb::Momenta<double, olb::descriptors::MRTD3Q19Descriptor> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at mrtDynamics.hh(50,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15467: unmasked aligned streaming stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 0.750 
   remark #15478: estimated potential speedup: 3.160 
   remark #15479: lightweight vector operations: 3 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at mrtDynamics.hh(54,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15459: masked indexed (or scatter) stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.890 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at mrtDynamics.hh(50,3)
<Remainder>
LOOP END

LOOP BEGIN at mrtDynamics.hh(58,3)
<Distributed chunk1>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at mrtDynamics.hh(60,5)
   <Peeled, Distributed chunk1>
   LOOP END

   LOOP BEGIN at mrtDynamics.hh(60,5)
   <Distributed chunk1>
      remark #15301: PARTIAL LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15467: unmasked aligned streaming stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 0.750 
      remark #15478: estimated potential speedup: 2.230 
      remark #15479: lightweight vector operations: 3 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at mrtDynamics.hh(60,5)
   <Remainder, Distributed chunk1>
   LOOP END
LOOP END

LOOP BEGIN at mrtDynamics.hh(58,3)
<Distributed chunk2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at mrtDynamics.hh(63,7)
   <Peeled, Distributed chunk2>
   LOOP END

   LOOP BEGIN at mrtDynamics.hh(63,7)
   <Distributed chunk2>
      remark #15399: vectorization support: unroll factor set to 2
      remark #15301: PARTIAL LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15454: masked aligned unit stride loads: 1 
      remark #15455: masked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 21 
      remark #15477: vector loop cost: 8.620 
      remark #15478: estimated potential speedup: 1.690 
      remark #15479: lightweight vector operations: 21 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at mrtDynamics.hh(63,7)
   <Remainder, Distributed chunk2>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::MRTdynamics<double, olb::descriptors::MRTD3Q19Descriptor>::MRTdynamics(olb::MRTdynamics<double, olb::descriptors::MRTD3Q19Descriptor> *const, double, olb::Momenta<double, olb::descriptors::MRTD3Q19Descriptor> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at mrtDynamics.hh(50,3) inlined into mrtDynamics.hh(45,25)
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15467: unmasked aligned streaming stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 0.750 
   remark #15478: estimated potential speedup: 3.160 
   remark #15479: lightweight vector operations: 3 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at mrtDynamics.hh(54,3) inlined into mrtDynamics.hh(45,25)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15459: masked indexed (or scatter) stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.890 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at mrtDynamics.hh(50,3) inlined into mrtDynamics.hh(45,25)
<Remainder>
LOOP END

LOOP BEGIN at mrtDynamics.hh(58,3) inlined into mrtDynamics.hh(45,25)
<Distributed chunk1>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at mrtDynamics.hh(60,5) inlined into mrtDynamics.hh(45,25)
   <Peeled, Distributed chunk1>
   LOOP END

   LOOP BEGIN at mrtDynamics.hh(60,5) inlined into mrtDynamics.hh(45,25)
   <Distributed chunk1>
      remark #15301: PARTIAL LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15467: unmasked aligned streaming stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 0.750 
      remark #15478: estimated potential speedup: 2.230 
      remark #15479: lightweight vector operations: 3 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at mrtDynamics.hh(60,5) inlined into mrtDynamics.hh(45,25)
   <Remainder, Distributed chunk1>
   LOOP END
LOOP END

LOOP BEGIN at mrtDynamics.hh(58,3) inlined into mrtDynamics.hh(45,25)
<Distributed chunk2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at mrtDynamics.hh(63,7) inlined into mrtDynamics.hh(45,25)
   <Peeled, Distributed chunk2>
   LOOP END

   LOOP BEGIN at mrtDynamics.hh(63,7) inlined into mrtDynamics.hh(45,25)
   <Distributed chunk2>
      remark #15399: vectorization support: unroll factor set to 2
      remark #15301: PARTIAL LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15454: masked aligned unit stride loads: 1 
      remark #15455: masked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 21 
      remark #15477: vector loop cost: 8.620 
      remark #15478: estimated potential speedup: 1.690 
      remark #15479: lightweight vector operations: 21 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at mrtDynamics.hh(63,7) inlined into mrtDynamics.hh(45,25)
   <Remainder, Distributed chunk2>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::MRTdynamics<double, olb::descriptors::MRTD3Q19Descriptor>::collide(olb::MRTdynamics<double, olb::descriptors::MRTD3Q19Descriptor> *, olb::Cell<double, olb::descriptors::MRTD3Q19Descriptor> &, olb::LatticeStatistics<double> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(92,3) inlined into mrtDynamics.hh(99,12)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 8 
   remark #15477: vector loop cost: 3.500 
   remark #15478: estimated potential speedup: 0.700 
   remark #15479: lightweight vector operations: 6 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::MRTdynamics<double, olb::descriptors::MRTD3Q19Descriptor>::staticCollide(olb::MRTdynamics<double, olb::descriptors::MRTD3Q19Descriptor> *, olb::Cell<double, olb::descriptors::MRTD3Q19Descriptor> &, const double *, olb::LatticeStatistics<double> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(92,3) inlined into mrtDynamics.hh(116,12)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.730 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BulkMomenta<double, olb::descriptors::MRTD3Q19Descriptor>::defineRho(olb::BulkMomenta<double, olb::descriptors::MRTD3Q19Descriptor> *, olb::Cell<double, olb::descriptors::MRTD3Q19Descriptor> &, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(92,3) inlined into ../../src/core/dynamics.hh(777,12)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 8 
   remark #15477: vector loop cost: 3.500 
   remark #15478: estimated potential speedup: 0.700 
   remark #15479: lightweight vector operations: 6 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/lbHelpers3D.h(55,18) inlined into ../../src/core/dynamics.hh(779,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 2 
   remark #15460: masked strided loads: 3 
   remark #15467: unmasked aligned streaming stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 54 
   remark #15477: vector loop cost: 17.000 
   remark #15478: estimated potential speedup: 2.240 
   remark #15479: lightweight vector operations: 38 
   remark #15480: medium-overhead vector operations: 1 
   remark #15487: type converts: 3 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/lbHelpers3D.h(55,18) inlined into ../../src/core/dynamics.hh(779,3)
<Remainder>
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(780,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15460: masked strided loads: 3 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 53 
   remark #15477: vector loop cost: 16.500 
   remark #15478: estimated potential speedup: 2.250 
   remark #15479: lightweight vector operations: 38 
   remark #15480: medium-overhead vector operations: 1 
   remark #15487: type converts: 3 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(780,3)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::BulkMomenta<double, olb::descriptors::MRTD3Q19Descriptor>::defineU(olb::BulkMomenta<double, olb::descriptors::MRTD3Q19Descriptor> *, olb::Cell<double, olb::descriptors::MRTD3Q19Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(92,3) inlined into ../../src/core/dynamics.hh(793,12)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.730 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/lbHelpers3D.h(55,18) inlined into ../../src/core/dynamics.hh(795,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 2 
   remark #15460: masked strided loads: 3 
   remark #15467: unmasked aligned streaming stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 54 
   remark #15477: vector loop cost: 17.000 
   remark #15478: estimated potential speedup: 2.240 
   remark #15479: lightweight vector operations: 38 
   remark #15480: medium-overhead vector operations: 1 
   remark #15487: type converts: 3 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/lbHelpers3D.h(55,18) inlined into ../../src/core/dynamics.hh(795,3)
<Remainder>
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(796,16)
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15460: masked strided loads: 3 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 53 
   remark #15477: vector loop cost: 16.500 
   remark #15478: estimated potential speedup: 2.250 
   remark #15479: lightweight vector operations: 38 
   remark #15480: medium-overhead vector operations: 1 
   remark #15487: type converts: 3 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(796,16)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::BulkMomenta<double, olb::descriptors::MRTD3Q19Descriptor>::defineRhoU(olb::BulkMomenta<double, olb::descriptors::MRTD3Q19Descriptor> *, olb::Cell<double, olb::descriptors::MRTD3Q19Descriptor> &, double, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(92,3) inlined into ../../src/core/dynamics.hh(810,12)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.730 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/lbHelpers3D.h(55,18) inlined into ../../src/core/dynamics.hh(812,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15450: unmasked unaligned unit stride loads: 2 
   remark #15460: masked strided loads: 3 
   remark #15467: unmasked aligned streaming stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 54 
   remark #15477: vector loop cost: 17.000 
   remark #15478: estimated potential speedup: 2.240 
   remark #15479: lightweight vector operations: 38 
   remark #15480: medium-overhead vector operations: 1 
   remark #15487: type converts: 3 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/lbHelpers3D.h(55,18) inlined into ../../src/core/dynamics.hh(812,3)
<Remainder>
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(813,16)
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15460: masked strided loads: 3 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 53 
   remark #15477: vector loop cost: 16.500 
   remark #15478: estimated potential speedup: 2.250 
   remark #15479: lightweight vector operations: 38 
   remark #15480: medium-overhead vector operations: 1 
   remark #15487: type converts: 3 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(813,16)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::BulkMomenta<double, olb::descriptors::MRTD3Q19Descriptor>::defineAllMomenta(olb::BulkMomenta<double, olb::descriptors::MRTD3Q19Descriptor> *, olb::Cell<double, olb::descriptors::MRTD3Q19Descriptor> &, double, const double *, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(92,3) inlined into ../../src/core/dynamics.hh(825,12)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.730 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/firstOrderLbHelpers.h(70,23) inlined into ../../src/core/dynamics.hh(828,18)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between pi line 75 and cell line 827

   LOOP BEGIN at ../../src/core/firstOrderLbHelpers.h(66,5) inlined into ../../src/core/dynamics.hh(828,18)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between iPi line 75 and iPi line 67

      LOOP BEGIN at ../../src/core/firstOrderLbHelpers.h(67,7) inlined into ../../src/core/dynamics.hh(828,18)
         remark #15315: loop was not vectorized: low trip count
         remark #15450: unmasked unaligned unit stride loads: 2 
         remark #15475: --- begin vector loop cost summary ---
         remark #15479: lightweight vector operations: 35 
         remark #15480: medium-overhead vector operations: 1 
         remark #15481: heavy-overhead vector operations: 1 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../../src/core/firstOrderLbHelpers.h(67,7) inlined into ../../src/core/dynamics.hh(828,18)
      <Remainder>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BounceBack<double, olb::descriptors::MRTD3Q19Descriptor>::collide(olb::BounceBack<double, olb::descriptors::MRTD3Q19Descriptor> *, olb::Cell<double, olb::descriptors::MRTD3Q19Descriptor> &, olb::LatticeStatistics<double> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/dynamics.hh(965,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed ANTI dependence between __a line 81 and __b line 83
LOOP END
===========================================================================

Begin optimization report for: olb::BounceBack<double, olb::descriptors::MRTD3Q19Descriptor>::computeU(const olb::BounceBack<double, olb::descriptors::MRTD3Q19Descriptor> *, const olb::Cell<double, olb::descriptors::MRTD3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/dynamics.hh(992,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 3.000 
   remark #15478: estimated potential speedup: 1.070 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(992,3)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::BounceBack<double, olb::descriptors::MRTD3Q19Descriptor>::computeJ(const olb::BounceBack<double, olb::descriptors::MRTD3Q19Descriptor> *, const olb::Cell<double, olb::descriptors::MRTD3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/dynamics.hh(1002,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 3.000 
   remark #15478: estimated potential speedup: 1.070 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(1002,3)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::BounceBack<double, olb::descriptors::MRTD3Q19Descriptor>::computeStress(const olb::BounceBack<double, olb::descriptors::MRTD3Q19Descriptor> *, const olb::Cell<double, olb::descriptors::MRTD3Q19Descriptor> &, double, const double *, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/dynamics.hh(1013,3)
   remark #15399: vectorization support: unroll factor set to 3
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 9.000 
   remark #15478: estimated potential speedup: 1.420 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::NoDynamics<double, olb::descriptors::MRTD3Q19Descriptor>::computeU(const olb::NoDynamics<double, olb::descriptors::MRTD3Q19Descriptor> *, const olb::Cell<double, olb::descriptors::MRTD3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/dynamics.hh(1106,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 3.000 
   remark #15478: estimated potential speedup: 1.070 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(1106,3)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::NoDynamics<double, olb::descriptors::MRTD3Q19Descriptor>::computeJ(const olb::NoDynamics<double, olb::descriptors::MRTD3Q19Descriptor> *, const olb::Cell<double, olb::descriptors::MRTD3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/dynamics.hh(1116,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 3.000 
   remark #15478: estimated potential speedup: 1.070 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/dynamics.hh(1116,3)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::NoDynamics<double, olb::descriptors::MRTD3Q19Descriptor>::computeStress(const olb::NoDynamics<double, olb::descriptors::MRTD3Q19Descriptor> *, const olb::Cell<double, olb::descriptors::MRTD3Q19Descriptor> &, double, const double *, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/dynamics.hh(1127,3)
   remark #15399: vectorization support: unroll factor set to 3
   remark #15300: LOOP WAS VECTORIZED
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 9.000 
   remark #15478: estimated potential speedup: 1.420 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================
