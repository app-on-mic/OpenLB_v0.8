
Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>>::~BoundaryConditionInstantiator2D(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(103,59)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at boundaryInstantiator2D.h(106,57)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>>::~BoundaryConditionInstantiator2D(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(103,59) inlined into boundaryInstantiator2D.h(102,63)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at boundaryInstantiator2D.h(106,57) inlined into boundaryInstantiator2D.h(102,63)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>>::~BoundaryConditionInstantiator2D(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(103,59) inlined into boundaryInstantiator2D.h(102,63)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at boundaryInstantiator2D.h(106,57) inlined into boundaryInstantiator2D.h(102,63)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addVelocityBoundary0N(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(118,5) inlined into boundaryInstantiator2D.h(341,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(341,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator2D.h(117,3) inlined into boundaryInstantiator2D.h(341,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addVelocityBoundary0P(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(118,5) inlined into boundaryInstantiator2D.h(347,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(347,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator2D.h(117,3) inlined into boundaryInstantiator2D.h(347,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addVelocityBoundary1N(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(118,5) inlined into boundaryInstantiator2D.h(353,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(353,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator2D.h(117,3) inlined into boundaryInstantiator2D.h(353,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addVelocityBoundary1P(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(118,5) inlined into boundaryInstantiator2D.h(359,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(359,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator2D.h(117,3) inlined into boundaryInstantiator2D.h(359,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addPressureBoundary0N(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(149,5) inlined into boundaryInstantiator2D.h(365,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator2D.h(365,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator2D.h(148,3) inlined into boundaryInstantiator2D.h(365,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addPressureBoundary0P(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(149,5) inlined into boundaryInstantiator2D.h(371,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator2D.h(371,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator2D.h(148,3) inlined into boundaryInstantiator2D.h(371,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addPressureBoundary1N(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(149,5) inlined into boundaryInstantiator2D.h(377,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator2D.h(377,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator2D.h(148,3) inlined into boundaryInstantiator2D.h(377,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addPressureBoundary1P(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(149,5) inlined into boundaryInstantiator2D.h(383,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator2D.h(383,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator2D.h(148,3) inlined into boundaryInstantiator2D.h(383,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addInternalVelocityCornerNN(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(413,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(413,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addInternalVelocityCornerNP(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(419,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(419,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addInternalVelocityCornerPN(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(425,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(425,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addInternalVelocityCornerPP(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(431,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(431,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addVelocityBoundary(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, olb::BlockGeometryStatistics2D *, int, int, int, int, double, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(231,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator2D.h(230,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addVelocityBoundary<0, 1>(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(118,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(120,9)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator2D.h(117,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addVelocityBoundary<0, -1>(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(118,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(120,9)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator2D.h(117,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addVelocityBoundary<1, 1>(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(118,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(120,9)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator2D.h(117,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addVelocityBoundary<1, -1>(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(118,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(120,9)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator2D.h(117,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addInternalVelocityCorner<1, 1>(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(204,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(204,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addInternalVelocityCorner<1, -1>(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(204,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(204,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addInternalVelocityCorner<-1, 1>(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(204,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(204,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addInternalVelocityCorner<-1, -1>(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(204,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(204,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::vector<int>(std::vector<int, std::allocator<int>> *, int, int, const std::vector<int, std::allocator<int>>::allocator_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(757,7) inlined into /usr/include/c++/4.4.7/bits/stl_vector.h(303,4)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(757,7) inlined into /usr/include/c++/4.4.7/bits/stl_vector.h(303,4)
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15467: unmasked aligned streaming stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 0.750 
   remark #15478: estimated potential speedup: 2.460 
   remark #15479: lightweight vector operations: 3 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(757,7) inlined into /usr/include/c++/4.4.7/bits/stl_vector.h(303,4)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addPressureBoundary(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::RLBdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, olb::BlockGeometryStatistics2D *, int, int, int, int, double, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(310,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator2D.h(309,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::~BoundaryConditionInstantiator2D(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(103,59)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at boundaryInstantiator2D.h(106,57)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::~BoundaryConditionInstantiator2D(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(103,59) inlined into boundaryInstantiator2D.h(102,63)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at boundaryInstantiator2D.h(106,57) inlined into boundaryInstantiator2D.h(102,63)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::~BoundaryConditionInstantiator2D(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(103,59) inlined into boundaryInstantiator2D.h(102,63)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at boundaryInstantiator2D.h(106,57) inlined into boundaryInstantiator2D.h(102,63)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addVelocityBoundary0N(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(118,5) inlined into boundaryInstantiator2D.h(341,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(341,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator2D.h(117,3) inlined into boundaryInstantiator2D.h(341,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addVelocityBoundary0P(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(118,5) inlined into boundaryInstantiator2D.h(347,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(347,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator2D.h(117,3) inlined into boundaryInstantiator2D.h(347,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addVelocityBoundary1N(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(118,5) inlined into boundaryInstantiator2D.h(353,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(353,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator2D.h(117,3) inlined into boundaryInstantiator2D.h(353,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addVelocityBoundary1P(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(118,5) inlined into boundaryInstantiator2D.h(359,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(359,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator2D.h(117,3) inlined into boundaryInstantiator2D.h(359,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addPressureBoundary0N(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(149,5) inlined into boundaryInstantiator2D.h(365,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator2D.h(365,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator2D.h(148,3) inlined into boundaryInstantiator2D.h(365,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addPressureBoundary0P(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(149,5) inlined into boundaryInstantiator2D.h(371,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator2D.h(371,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator2D.h(148,3) inlined into boundaryInstantiator2D.h(371,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addPressureBoundary1N(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(149,5) inlined into boundaryInstantiator2D.h(377,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator2D.h(377,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator2D.h(148,3) inlined into boundaryInstantiator2D.h(377,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addPressureBoundary1P(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(149,5) inlined into boundaryInstantiator2D.h(383,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator2D.h(383,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator2D.h(148,3) inlined into boundaryInstantiator2D.h(383,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addInternalVelocityCornerNN(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(413,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(413,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addInternalVelocityCornerNP(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(419,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(419,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addInternalVelocityCornerPN(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(425,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(425,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addInternalVelocityCornerPP(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(431,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(431,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addVelocityBoundary(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, olb::BlockGeometryStatistics2D *, int, int, int, int, double, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(231,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator2D.h(230,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addVelocityBoundary<0, 1>(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(118,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(120,9)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator2D.h(117,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addVelocityBoundary<0, -1>(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(118,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(120,9)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator2D.h(117,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addVelocityBoundary<1, 1>(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(118,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(120,9)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator2D.h(117,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addVelocityBoundary<1, -1>(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(118,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(120,9)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator2D.h(117,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addInternalVelocityCorner<1, 1>(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(204,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(204,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addInternalVelocityCorner<1, -1>(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(204,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(204,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addInternalVelocityCorner<-1, 1>(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(204,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(204,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addInternalVelocityCorner<-1, -1>(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(204,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(204,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addPressureBoundary(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::InterpolationBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, olb::BlockGeometryStatistics2D *, int, int, int, int, double, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(310,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator2D.h(309,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::RegularizedBM<double, olb::descriptors::D2Q9Descriptor, 0, -1>::computeStress(const olb::RegularizedBM<double, olb::descriptors::D2Q9Descriptor, 0, -1> *, const olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, double, const double *, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(92,3) inlined into momentaOnBoundaries.hh(384,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.640 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(384,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(384,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at lbHelpers.h(372,50) inlined into momentaOnBoundaries.hh(384,3)
<Peeled>
LOOP END

LOOP BEGIN at lbHelpers.h(372,50) inlined into momentaOnBoundaries.hh(384,3)
   remark #15399: vectorization support: unroll factor set to 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 6 
   remark #15459: masked indexed (or scatter) stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 53 
   remark #15477: vector loop cost: 36.750 
   remark #15478: estimated potential speedup: 1.410 
   remark #15479: lightweight vector operations: 52 
   remark #15487: type converts: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at lbHelpers.h(372,50) inlined into momentaOnBoundaries.hh(384,3)
<Remainder>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at lbHelpers.h(372,50) inlined into momentaOnBoundaries.hh(384,3)
<Remainder>
LOOP END

LOOP BEGIN at lbHelpers.h(378,50) inlined into momentaOnBoundaries.hh(384,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between fNeq line 381 and fNeq line 384
LOOP END

LOOP BEGIN at lbHelpers.h(391,5) inlined into momentaOnBoundaries.hh(384,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at lbHelpers.h(392,7) inlined into momentaOnBoundaries.hh(384,3)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at lbHelpers.h(394,54) inlined into momentaOnBoundaries.hh(384,3)
      <Peeled>
      LOOP END

      LOOP BEGIN at lbHelpers.h(394,54) inlined into momentaOnBoundaries.hh(384,3)
         remark #15399: vectorization support: unroll factor set to 2
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15458: masked indexed (or gather) loads: 3 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 17 
         remark #15477: vector loop cost: 11.370 
         remark #15478: estimated potential speedup: 1.430 
         remark #15479: lightweight vector operations: 20 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at lbHelpers.h(394,54) inlined into momentaOnBoundaries.hh(384,3)
      <Remainder>
      LOOP END

      LOOP BEGIN at lbHelpers.h(400,54) inlined into momentaOnBoundaries.hh(384,3)
      <Peeled>
      LOOP END

      LOOP BEGIN at lbHelpers.h(400,54) inlined into momentaOnBoundaries.hh(384,3)
         remark #15399: vectorization support: unroll factor set to 2
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15458: masked indexed (or gather) loads: 3 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 21 
         remark #15477: vector loop cost: 12.120 
         remark #15478: estimated potential speedup: 1.650 
         remark #15479: lightweight vector operations: 23 
         remark #15487: type converts: 2 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at lbHelpers.h(400,54) inlined into momentaOnBoundaries.hh(384,3)
      <Remainder>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::VelocityBM<double, olb::descriptors::D2Q9Descriptor, 0, -1>::computeRho(const olb::VelocityBM<double, olb::descriptors::D2Q9Descriptor, 0, -1> *, const olb::Cell<double, olb::descriptors::D2Q9Descriptor> &) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(155,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(158,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::VelocityBM<double, olb::descriptors::D2Q9Descriptor, 0, -1>::computeU(const olb::VelocityBM<double, olb::descriptors::D2Q9Descriptor, 0, -1> *, const olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(201,3) inlined into momentaOnBoundaries.hh(181,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between u_ line 202 and this line 202
LOOP END
===========================================================================

Begin optimization report for: olb::VelocityBM<double, olb::descriptors::D2Q9Descriptor, 0, -1>::computeJ(const olb::VelocityBM<double, olb::descriptors::D2Q9Descriptor, 0, -1> *, const olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(191,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between j_ line 192 and this line 192
LOOP END
===========================================================================

Begin optimization report for: olb::VelocityBM<double, olb::descriptors::D2Q9Descriptor, 0, -1>::defineU(olb::VelocityBM<double, olb::descriptors::D2Q9Descriptor, 0, -1> *, olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries.hh(218,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u_ line 227
LOOP END
===========================================================================

Begin optimization report for: olb::RegularizedBM<double, olb::descriptors::D2Q9Descriptor, 0, 1>::computeStress(const olb::RegularizedBM<double, olb::descriptors::D2Q9Descriptor, 0, 1> *, const olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, double, const double *, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(92,3) inlined into momentaOnBoundaries.hh(384,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.640 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(384,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(384,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at lbHelpers.h(372,50) inlined into momentaOnBoundaries.hh(384,3)
<Peeled>
LOOP END

LOOP BEGIN at lbHelpers.h(372,50) inlined into momentaOnBoundaries.hh(384,3)
   remark #15399: vectorization support: unroll factor set to 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 6 
   remark #15459: masked indexed (or scatter) stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 53 
   remark #15477: vector loop cost: 36.750 
   remark #15478: estimated potential speedup: 1.410 
   remark #15479: lightweight vector operations: 52 
   remark #15487: type converts: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at lbHelpers.h(372,50) inlined into momentaOnBoundaries.hh(384,3)
<Remainder>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at lbHelpers.h(372,50) inlined into momentaOnBoundaries.hh(384,3)
<Remainder>
LOOP END

LOOP BEGIN at lbHelpers.h(378,50) inlined into momentaOnBoundaries.hh(384,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between fNeq line 381 and fNeq line 384
LOOP END

LOOP BEGIN at lbHelpers.h(391,5) inlined into momentaOnBoundaries.hh(384,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at lbHelpers.h(392,7) inlined into momentaOnBoundaries.hh(384,3)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at lbHelpers.h(394,54) inlined into momentaOnBoundaries.hh(384,3)
      <Peeled>
      LOOP END

      LOOP BEGIN at lbHelpers.h(394,54) inlined into momentaOnBoundaries.hh(384,3)
         remark #15399: vectorization support: unroll factor set to 2
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15458: masked indexed (or gather) loads: 3 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 17 
         remark #15477: vector loop cost: 11.370 
         remark #15478: estimated potential speedup: 1.430 
         remark #15479: lightweight vector operations: 20 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at lbHelpers.h(394,54) inlined into momentaOnBoundaries.hh(384,3)
      <Remainder>
      LOOP END

      LOOP BEGIN at lbHelpers.h(400,54) inlined into momentaOnBoundaries.hh(384,3)
      <Peeled>
      LOOP END

      LOOP BEGIN at lbHelpers.h(400,54) inlined into momentaOnBoundaries.hh(384,3)
         remark #15399: vectorization support: unroll factor set to 2
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15458: masked indexed (or gather) loads: 3 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 21 
         remark #15477: vector loop cost: 12.120 
         remark #15478: estimated potential speedup: 1.650 
         remark #15479: lightweight vector operations: 23 
         remark #15487: type converts: 2 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at lbHelpers.h(400,54) inlined into momentaOnBoundaries.hh(384,3)
      <Remainder>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::VelocityBM<double, olb::descriptors::D2Q9Descriptor, 0, 1>::computeRho(const olb::VelocityBM<double, olb::descriptors::D2Q9Descriptor, 0, 1> *, const olb::Cell<double, olb::descriptors::D2Q9Descriptor> &) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(155,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(158,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::VelocityBM<double, olb::descriptors::D2Q9Descriptor, 0, 1>::computeU(const olb::VelocityBM<double, olb::descriptors::D2Q9Descriptor, 0, 1> *, const olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(201,3) inlined into momentaOnBoundaries.hh(181,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between u_ line 202 and this line 202
LOOP END
===========================================================================

Begin optimization report for: olb::VelocityBM<double, olb::descriptors::D2Q9Descriptor, 0, 1>::computeJ(const olb::VelocityBM<double, olb::descriptors::D2Q9Descriptor, 0, 1> *, const olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(191,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between j_ line 192 and this line 192
LOOP END
===========================================================================

Begin optimization report for: olb::VelocityBM<double, olb::descriptors::D2Q9Descriptor, 0, 1>::defineU(olb::VelocityBM<double, olb::descriptors::D2Q9Descriptor, 0, 1> *, olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries.hh(218,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u_ line 227
LOOP END
===========================================================================

Begin optimization report for: olb::RegularizedBM<double, olb::descriptors::D2Q9Descriptor, 1, -1>::computeStress(const olb::RegularizedBM<double, olb::descriptors::D2Q9Descriptor, 1, -1> *, const olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, double, const double *, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(92,3) inlined into momentaOnBoundaries.hh(384,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.640 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(384,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(384,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at lbHelpers.h(372,50) inlined into momentaOnBoundaries.hh(384,3)
<Peeled>
LOOP END

LOOP BEGIN at lbHelpers.h(372,50) inlined into momentaOnBoundaries.hh(384,3)
   remark #15399: vectorization support: unroll factor set to 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 6 
   remark #15459: masked indexed (or scatter) stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 53 
   remark #15477: vector loop cost: 36.750 
   remark #15478: estimated potential speedup: 1.410 
   remark #15479: lightweight vector operations: 52 
   remark #15487: type converts: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at lbHelpers.h(372,50) inlined into momentaOnBoundaries.hh(384,3)
<Remainder>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at lbHelpers.h(372,50) inlined into momentaOnBoundaries.hh(384,3)
<Remainder>
LOOP END

LOOP BEGIN at lbHelpers.h(378,50) inlined into momentaOnBoundaries.hh(384,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between fNeq line 381 and fNeq line 384
LOOP END

LOOP BEGIN at lbHelpers.h(391,5) inlined into momentaOnBoundaries.hh(384,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at lbHelpers.h(392,7) inlined into momentaOnBoundaries.hh(384,3)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at lbHelpers.h(394,54) inlined into momentaOnBoundaries.hh(384,3)
      <Peeled>
      LOOP END

      LOOP BEGIN at lbHelpers.h(394,54) inlined into momentaOnBoundaries.hh(384,3)
         remark #15399: vectorization support: unroll factor set to 2
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15458: masked indexed (or gather) loads: 3 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 17 
         remark #15477: vector loop cost: 11.370 
         remark #15478: estimated potential speedup: 1.430 
         remark #15479: lightweight vector operations: 20 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at lbHelpers.h(394,54) inlined into momentaOnBoundaries.hh(384,3)
      <Remainder>
      LOOP END

      LOOP BEGIN at lbHelpers.h(400,54) inlined into momentaOnBoundaries.hh(384,3)
      <Peeled>
      LOOP END

      LOOP BEGIN at lbHelpers.h(400,54) inlined into momentaOnBoundaries.hh(384,3)
         remark #15399: vectorization support: unroll factor set to 2
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15458: masked indexed (or gather) loads: 3 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 21 
         remark #15477: vector loop cost: 12.120 
         remark #15478: estimated potential speedup: 1.650 
         remark #15479: lightweight vector operations: 23 
         remark #15487: type converts: 2 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at lbHelpers.h(400,54) inlined into momentaOnBoundaries.hh(384,3)
      <Remainder>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::VelocityBM<double, olb::descriptors::D2Q9Descriptor, 1, -1>::computeRho(const olb::VelocityBM<double, olb::descriptors::D2Q9Descriptor, 1, -1> *, const olb::Cell<double, olb::descriptors::D2Q9Descriptor> &) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(155,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(158,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::VelocityBM<double, olb::descriptors::D2Q9Descriptor, 1, -1>::computeU(const olb::VelocityBM<double, olb::descriptors::D2Q9Descriptor, 1, -1> *, const olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(201,3) inlined into momentaOnBoundaries.hh(181,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between u_ line 202 and this line 202
LOOP END
===========================================================================

Begin optimization report for: olb::VelocityBM<double, olb::descriptors::D2Q9Descriptor, 1, -1>::computeJ(const olb::VelocityBM<double, olb::descriptors::D2Q9Descriptor, 1, -1> *, const olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(191,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between j_ line 192 and this line 192
LOOP END
===========================================================================

Begin optimization report for: olb::VelocityBM<double, olb::descriptors::D2Q9Descriptor, 1, -1>::defineU(olb::VelocityBM<double, olb::descriptors::D2Q9Descriptor, 1, -1> *, olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries.hh(218,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u_ line 227
LOOP END
===========================================================================

Begin optimization report for: olb::RegularizedBM<double, olb::descriptors::D2Q9Descriptor, 1, 1>::computeStress(const olb::RegularizedBM<double, olb::descriptors::D2Q9Descriptor, 1, 1> *, const olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, double, const double *, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(92,3) inlined into momentaOnBoundaries.hh(384,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.640 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(384,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(384,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at lbHelpers.h(372,50) inlined into momentaOnBoundaries.hh(384,3)
<Peeled>
LOOP END

LOOP BEGIN at lbHelpers.h(372,50) inlined into momentaOnBoundaries.hh(384,3)
   remark #15399: vectorization support: unroll factor set to 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 6 
   remark #15459: masked indexed (or scatter) stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 53 
   remark #15477: vector loop cost: 36.750 
   remark #15478: estimated potential speedup: 1.410 
   remark #15479: lightweight vector operations: 52 
   remark #15487: type converts: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at lbHelpers.h(372,50) inlined into momentaOnBoundaries.hh(384,3)
<Remainder>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at lbHelpers.h(372,50) inlined into momentaOnBoundaries.hh(384,3)
<Remainder>
LOOP END

LOOP BEGIN at lbHelpers.h(378,50) inlined into momentaOnBoundaries.hh(384,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between fNeq line 381 and fNeq line 384
LOOP END

LOOP BEGIN at lbHelpers.h(391,5) inlined into momentaOnBoundaries.hh(384,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at lbHelpers.h(392,7) inlined into momentaOnBoundaries.hh(384,3)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at lbHelpers.h(394,54) inlined into momentaOnBoundaries.hh(384,3)
      <Peeled>
      LOOP END

      LOOP BEGIN at lbHelpers.h(394,54) inlined into momentaOnBoundaries.hh(384,3)
         remark #15399: vectorization support: unroll factor set to 2
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15458: masked indexed (or gather) loads: 3 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 17 
         remark #15477: vector loop cost: 11.370 
         remark #15478: estimated potential speedup: 1.430 
         remark #15479: lightweight vector operations: 20 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at lbHelpers.h(394,54) inlined into momentaOnBoundaries.hh(384,3)
      <Remainder>
      LOOP END

      LOOP BEGIN at lbHelpers.h(400,54) inlined into momentaOnBoundaries.hh(384,3)
      <Peeled>
      LOOP END

      LOOP BEGIN at lbHelpers.h(400,54) inlined into momentaOnBoundaries.hh(384,3)
         remark #15399: vectorization support: unroll factor set to 2
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15458: masked indexed (or gather) loads: 3 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 21 
         remark #15477: vector loop cost: 12.120 
         remark #15478: estimated potential speedup: 1.650 
         remark #15479: lightweight vector operations: 23 
         remark #15487: type converts: 2 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at lbHelpers.h(400,54) inlined into momentaOnBoundaries.hh(384,3)
      <Remainder>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::VelocityBM<double, olb::descriptors::D2Q9Descriptor, 1, 1>::computeRho(const olb::VelocityBM<double, olb::descriptors::D2Q9Descriptor, 1, 1> *, const olb::Cell<double, olb::descriptors::D2Q9Descriptor> &) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(155,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(158,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::VelocityBM<double, olb::descriptors::D2Q9Descriptor, 1, 1>::computeU(const olb::VelocityBM<double, olb::descriptors::D2Q9Descriptor, 1, 1> *, const olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(201,3) inlined into momentaOnBoundaries.hh(181,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between u_ line 202 and this line 202
LOOP END
===========================================================================

Begin optimization report for: olb::VelocityBM<double, olb::descriptors::D2Q9Descriptor, 1, 1>::computeJ(const olb::VelocityBM<double, olb::descriptors::D2Q9Descriptor, 1, 1> *, const olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(191,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between j_ line 192 and this line 192
LOOP END
===========================================================================

Begin optimization report for: olb::VelocityBM<double, olb::descriptors::D2Q9Descriptor, 1, 1>::defineU(olb::VelocityBM<double, olb::descriptors::D2Q9Descriptor, 1, 1> *, olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries.hh(218,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u_ line 227
LOOP END
===========================================================================

Begin optimization report for: olb::PressureBM<double, olb::descriptors::D2Q9Descriptor, 0, -1>::computeU(const olb::PressureBM<double, olb::descriptors::D2Q9Descriptor, 0, -1> *, const olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(287,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between u_ line 288 and this line 288
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(294,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(297,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(299,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(299,48)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(304,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(304,48)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::PressureBM<double, olb::descriptors::D2Q9Descriptor, 0, -1>::computeJ(const olb::PressureBM<double, olb::descriptors::D2Q9Descriptor, 0, -1> *, const olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(320,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 8 
   remark #15477: vector loop cost: 5.000 
   remark #15478: estimated potential speedup: 0.880 
   remark #15479: lightweight vector operations: 3 
   remark #15480: medium-overhead vector operations: 1 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::PressureBM<double, olb::descriptors::D2Q9Descriptor, 0, -1>::defineU(olb::PressureBM<double, olb::descriptors::D2Q9Descriptor, 0, -1> *, olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(345,3)
   remark #15423: loop was not vectorized: has only one iteration
LOOP END
===========================================================================

Begin optimization report for: olb::PressureBM<double, olb::descriptors::D2Q9Descriptor, 0, 1>::computeU(const olb::PressureBM<double, olb::descriptors::D2Q9Descriptor, 0, 1> *, const olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(287,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between u_ line 288 and this line 288
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(294,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(297,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(299,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(299,48)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(304,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(304,48)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::PressureBM<double, olb::descriptors::D2Q9Descriptor, 0, 1>::computeJ(const olb::PressureBM<double, olb::descriptors::D2Q9Descriptor, 0, 1> *, const olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(320,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 8 
   remark #15477: vector loop cost: 5.000 
   remark #15478: estimated potential speedup: 0.880 
   remark #15479: lightweight vector operations: 3 
   remark #15480: medium-overhead vector operations: 1 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::PressureBM<double, olb::descriptors::D2Q9Descriptor, 0, 1>::defineU(olb::PressureBM<double, olb::descriptors::D2Q9Descriptor, 0, 1> *, olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(345,3)
   remark #15423: loop was not vectorized: has only one iteration
LOOP END
===========================================================================

Begin optimization report for: olb::PressureBM<double, olb::descriptors::D2Q9Descriptor, 1, -1>::computeU(const olb::PressureBM<double, olb::descriptors::D2Q9Descriptor, 1, -1> *, const olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(287,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between u_ line 288 and this line 288
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(294,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(297,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(299,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(299,48)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(304,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(304,48)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::PressureBM<double, olb::descriptors::D2Q9Descriptor, 1, -1>::computeJ(const olb::PressureBM<double, olb::descriptors::D2Q9Descriptor, 1, -1> *, const olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(320,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 8 
   remark #15477: vector loop cost: 5.000 
   remark #15478: estimated potential speedup: 0.880 
   remark #15479: lightweight vector operations: 3 
   remark #15480: medium-overhead vector operations: 1 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::PressureBM<double, olb::descriptors::D2Q9Descriptor, 1, -1>::defineU(olb::PressureBM<double, olb::descriptors::D2Q9Descriptor, 1, -1> *, olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(345,3)
   remark #15423: loop was not vectorized: has only one iteration
LOOP END
===========================================================================

Begin optimization report for: olb::PressureBM<double, olb::descriptors::D2Q9Descriptor, 1, 1>::computeU(const olb::PressureBM<double, olb::descriptors::D2Q9Descriptor, 1, 1> *, const olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(287,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between u_ line 288 and this line 288
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(294,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(297,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(299,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(299,48)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(304,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(304,48)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::PressureBM<double, olb::descriptors::D2Q9Descriptor, 1, 1>::computeJ(const olb::PressureBM<double, olb::descriptors::D2Q9Descriptor, 1, 1> *, const olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(320,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 8 
   remark #15477: vector loop cost: 5.000 
   remark #15478: estimated potential speedup: 0.880 
   remark #15479: lightweight vector operations: 3 
   remark #15480: medium-overhead vector operations: 1 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::PressureBM<double, olb::descriptors::D2Q9Descriptor, 1, 1>::defineU(olb::PressureBM<double, olb::descriptors::D2Q9Descriptor, 1, 1> *, olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(345,3)
   remark #15423: loop was not vectorized: has only one iteration
LOOP END
===========================================================================

Begin optimization report for: olb::FixedVelocityBM<double, olb::descriptors::D2Q9Descriptor>::computeU(const olb::FixedVelocityBM<double, olb::descriptors::D2Q9Descriptor> *, const olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(397,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between u line 398 and this line 398
LOOP END
===========================================================================

Begin optimization report for: olb::FixedVelocityBM<double, olb::descriptors::D2Q9Descriptor>::computeJ(const olb::FixedVelocityBM<double, olb::descriptors::D2Q9Descriptor> *, const olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(406,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between j line 407 and this line 407
LOOP END
===========================================================================

Begin optimization report for: olb::FixedVelocityBM<double, olb::descriptors::D2Q9Descriptor>::defineU(olb::FixedVelocityBM<double, olb::descriptors::D2Q9Descriptor> *, olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(449,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 450 and u line 450
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, -1, -1>::computeRho(const olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, -1, -1> *, const olb::Cell<double, olb::descriptors::D2Q9Descriptor> &) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries2D.hh(55,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries2D.hh(55,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries2D.hh(55,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries2D.hh(55,20)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries2D.hh(55,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries2D.hh(55,20)
<Remainder>
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries2D.hh(55,48)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries2D.hh(55,48)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries2D.hh(55,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries2D.hh(55,48)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries2D.hh(55,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries2D.hh(55,48)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, -1, -1>::computeU(const olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, -1, -1> *, const olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(201,3) inlined into momentaOnBoundaries2D.hh(64,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between u line 202 and this line 202
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, -1, -1>::computeJ(const olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, -1, -1> *, const olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries2D.hh(75,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 8 
   remark #15477: vector loop cost: 5.000 
   remark #15478: estimated potential speedup: 0.880 
   remark #15479: lightweight vector operations: 3 
   remark #15480: medium-overhead vector operations: 1 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, -1, -1>::defineU(olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, -1, -1> *, olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries2D.hh(100,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries2D.hh(101,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, -1, -1>::defineAllMomenta(olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, -1, -1> *, olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, double, const double *, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries2D.hh(120,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries2D.hh(121,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, -1, -1>::computeStress(const olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, -1, -1> *, const olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, double, const double *, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(145,3) inlined into momentaOnBoundaries2D.hh(134,19)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria

   LOOP BEGIN at ../../src/core/util.h(147,5) inlined into momentaOnBoundaries2D.hh(134,19)
      remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
   LOOP END
LOOP END

LOOP BEGIN at ../../src/core/util.h(92,3) inlined into momentaOnBoundaries2D.hh(139,14)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.640 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, -1, 1>::computeRho(const olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, -1, 1> *, const olb::Cell<double, olb::descriptors::D2Q9Descriptor> &) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries2D.hh(55,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries2D.hh(55,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries2D.hh(55,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries2D.hh(55,20)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries2D.hh(55,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries2D.hh(55,20)
<Remainder>
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries2D.hh(55,48)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries2D.hh(55,48)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries2D.hh(55,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries2D.hh(55,48)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries2D.hh(55,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries2D.hh(55,48)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, -1, 1>::computeU(const olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, -1, 1> *, const olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(201,3) inlined into momentaOnBoundaries2D.hh(64,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between u line 202 and this line 202
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, -1, 1>::computeJ(const olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, -1, 1> *, const olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries2D.hh(75,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 8 
   remark #15477: vector loop cost: 5.000 
   remark #15478: estimated potential speedup: 0.880 
   remark #15479: lightweight vector operations: 3 
   remark #15480: medium-overhead vector operations: 1 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, -1, 1>::defineU(olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, -1, 1> *, olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries2D.hh(100,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries2D.hh(101,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, -1, 1>::defineAllMomenta(olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, -1, 1> *, olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, double, const double *, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries2D.hh(120,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries2D.hh(121,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, -1, 1>::computeStress(const olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, -1, 1> *, const olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, double, const double *, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(145,3) inlined into momentaOnBoundaries2D.hh(134,19)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria

   LOOP BEGIN at ../../src/core/util.h(147,5) inlined into momentaOnBoundaries2D.hh(134,19)
      remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
   LOOP END
LOOP END

LOOP BEGIN at ../../src/core/util.h(92,3) inlined into momentaOnBoundaries2D.hh(139,14)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.640 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, 1, -1>::computeRho(const olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, 1, -1> *, const olb::Cell<double, olb::descriptors::D2Q9Descriptor> &) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries2D.hh(55,20)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries2D.hh(55,20)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries2D.hh(55,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries2D.hh(55,20)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries2D.hh(55,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries2D.hh(55,20)
<Remainder>
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries2D.hh(55,48)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries2D.hh(55,48)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries2D.hh(55,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries2D.hh(55,48)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries2D.hh(55,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries2D.hh(55,48)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, 1, -1>::computeU(const olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, 1, -1> *, const olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(201,3) inlined into momentaOnBoundaries2D.hh(64,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between u line 202 and this line 202
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, 1, -1>::computeJ(const olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, 1, -1> *, const olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries2D.hh(75,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 8 
   remark #15477: vector loop cost: 5.000 
   remark #15478: estimated potential speedup: 0.880 
   remark #15479: lightweight vector operations: 3 
   remark #15480: medium-overhead vector operations: 1 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, 1, -1>::defineU(olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, 1, -1> *, olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries2D.hh(100,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries2D.hh(101,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, 1, -1>::defineAllMomenta(olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, 1, -1> *, olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, double, const double *, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries2D.hh(120,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries2D.hh(121,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, 1, -1>::computeStress(const olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, 1, -1> *, const olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, double, const double *, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(145,3) inlined into momentaOnBoundaries2D.hh(134,19)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria

   LOOP BEGIN at ../../src/core/util.h(147,5) inlined into momentaOnBoundaries2D.hh(134,19)
      remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
   LOOP END
LOOP END

LOOP BEGIN at ../../src/core/util.h(92,3) inlined into momentaOnBoundaries2D.hh(139,14)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.640 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, 1, 1>::computeRho(const olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, 1, 1> *, const olb::Cell<double, olb::descriptors::D2Q9Descriptor> &) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries2D.hh(55,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries2D.hh(55,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries2D.hh(55,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries2D.hh(55,20)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries2D.hh(55,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries2D.hh(55,20)
<Remainder>
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries2D.hh(55,48)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries2D.hh(55,48)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries2D.hh(55,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries2D.hh(55,48)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries2D.hh(55,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries2D.hh(55,48)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, 1, 1>::computeU(const olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, 1, 1> *, const olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(201,3) inlined into momentaOnBoundaries2D.hh(64,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between u line 202 and this line 202
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, 1, 1>::computeJ(const olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, 1, 1> *, const olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries2D.hh(75,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 8 
   remark #15477: vector loop cost: 5.000 
   remark #15478: estimated potential speedup: 0.880 
   remark #15479: lightweight vector operations: 3 
   remark #15480: medium-overhead vector operations: 1 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, 1, 1>::defineU(olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, 1, 1> *, olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries2D.hh(100,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries2D.hh(101,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, 1, 1>::defineAllMomenta(olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, 1, 1> *, olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, double, const double *, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries2D.hh(120,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries2D.hh(121,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, 1, 1>::computeStress(const olb::InnerCornerVelBM2D<double, olb::descriptors::D2Q9Descriptor, 1, 1> *, const olb::Cell<double, olb::descriptors::D2Q9Descriptor> &, double, const double *, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(145,3) inlined into momentaOnBoundaries2D.hh(134,19)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria

   LOOP BEGIN at ../../src/core/util.h(147,5) inlined into momentaOnBoundaries2D.hh(134,19)
      remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
   LOOP END
LOOP END

LOOP BEGIN at ../../src/core/util.h(92,3) inlined into momentaOnBoundaries2D.hh(139,14)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.640 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::~BoundaryConditionInstantiator2D(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(103,59)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at boundaryInstantiator2D.h(106,57)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::~BoundaryConditionInstantiator2D(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(103,59) inlined into boundaryInstantiator2D.h(102,63)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at boundaryInstantiator2D.h(106,57) inlined into boundaryInstantiator2D.h(102,63)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addVelocityBoundary0N(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(118,5) inlined into boundaryInstantiator2D.h(341,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(341,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator2D.h(117,3) inlined into boundaryInstantiator2D.h(341,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addVelocityBoundary0P(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(118,5) inlined into boundaryInstantiator2D.h(347,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(347,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator2D.h(117,3) inlined into boundaryInstantiator2D.h(347,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addVelocityBoundary1N(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(118,5) inlined into boundaryInstantiator2D.h(353,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(353,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator2D.h(117,3) inlined into boundaryInstantiator2D.h(353,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addVelocityBoundary1P(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(118,5) inlined into boundaryInstantiator2D.h(359,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(359,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator2D.h(117,3) inlined into boundaryInstantiator2D.h(359,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addPressureBoundary0N(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(149,5) inlined into boundaryInstantiator2D.h(365,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator2D.h(365,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator2D.h(148,3) inlined into boundaryInstantiator2D.h(365,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addPressureBoundary0P(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(149,5) inlined into boundaryInstantiator2D.h(371,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator2D.h(371,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator2D.h(148,3) inlined into boundaryInstantiator2D.h(371,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addPressureBoundary1N(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(149,5) inlined into boundaryInstantiator2D.h(377,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator2D.h(377,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator2D.h(148,3) inlined into boundaryInstantiator2D.h(377,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addPressureBoundary1P(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(149,5) inlined into boundaryInstantiator2D.h(383,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator2D.h(383,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator2D.h(148,3) inlined into boundaryInstantiator2D.h(383,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addInternalVelocityCornerNN(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(413,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(413,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addInternalVelocityCornerNP(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(419,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(419,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addInternalVelocityCornerPN(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(425,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(425,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addInternalVelocityCornerPP(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(431,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(431,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addVelocityBoundary(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, olb::BlockGeometryStatistics2D *, int, int, int, int, double, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(231,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator2D.h(230,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addVelocityBoundary<0, 1>(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(118,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(120,9)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator2D.h(117,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addVelocityBoundary<0, -1>(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(118,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(120,9)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator2D.h(117,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addVelocityBoundary<1, 1>(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(118,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(120,9)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator2D.h(117,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addVelocityBoundary<1, -1>(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(118,5)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(120,9)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator2D.h(117,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addInternalVelocityCorner<1, 1>(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(204,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(204,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addInternalVelocityCorner<1, -1>(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(204,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(204,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addInternalVelocityCorner<-1, 1>(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(204,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(204,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addInternalVelocityCorner<-1, -1>(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(204,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator2D.h(204,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addPressureBoundary(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::RegularizedBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, olb::BlockGeometryStatistics2D *, int, int, int, int, double, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator2D.h(310,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator2D.h(309,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================
