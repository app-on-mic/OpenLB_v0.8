
Begin optimization report for: olb::MRTdynamics<double, olb::descriptors::MRTD2Q9Descriptor>::collide(olb::MRTdynamics<double, olb::descriptors::MRTD2Q9Descriptor> *, olb::Cell<double, olb::descriptors::MRTD2Q9Descriptor> &, olb::LatticeStatistics<double> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(92,3) inlined into ../../src/complexDynamics/mrtDynamics.hh(99,12)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 8 
   remark #15477: vector loop cost: 3.500 
   remark #15478: estimated potential speedup: 0.610 
   remark #15479: lightweight vector operations: 6 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::MRTdynamics<double, olb::descriptors::MRTD2Q9Descriptor>::staticCollide(olb::MRTdynamics<double, olb::descriptors::MRTD2Q9Descriptor> *, olb::Cell<double, olb::descriptors::MRTD2Q9Descriptor> &, const double *, olb::LatticeStatistics<double> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(92,3) inlined into ../../src/complexDynamics/mrtDynamics.hh(116,12)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.640 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::SmagorinskyMRTdynamics<double, olb::descriptors::MRTD2Q9Descriptor>::SmagorinskyMRTdynamics(olb::SmagorinskyMRTdynamics<double, olb::descriptors::MRTD2Q9Descriptor> *, double, olb::Momenta<double, olb::descriptors::MRTD2Q9Descriptor> &, double, double, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(50,3) inlined into smagorinskyMRTdynamics.hh(55,36)
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15467: unmasked aligned streaming stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 0.750 
   remark #15478: estimated potential speedup: 3.600 
   remark #15479: lightweight vector operations: 3 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(54,3) inlined into smagorinskyMRTdynamics.hh(55,36)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15459: masked indexed (or scatter) stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.710 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(58,3) inlined into smagorinskyMRTdynamics.hh(55,36)
<Distributed chunk1>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15462: unmasked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 3.000 
   remark #15478: estimated potential speedup: 1.280 
   remark #15479: lightweight vector operations: 3 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---

   LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(60,5) inlined into smagorinskyMRTdynamics.hh(55,36)
   <Distributed chunk1>
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15467: unmasked aligned streaming stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 1.500 
      remark #15478: estimated potential speedup: 1.380 
      remark #15479: lightweight vector operations: 2 
      remark #15480: medium-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(60,5) inlined into smagorinskyMRTdynamics.hh(55,36)
   <Distributed chunk1>
   LOOP END

   LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(60,5) inlined into smagorinskyMRTdynamics.hh(55,36)
   <Distributed chunk1>
   LOOP END

   LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(60,5) inlined into smagorinskyMRTdynamics.hh(55,36)
   <Distributed chunk1>
   LOOP END

   LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(60,5) inlined into smagorinskyMRTdynamics.hh(55,36)
   <Distributed chunk1>
   LOOP END

   LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(60,5) inlined into smagorinskyMRTdynamics.hh(55,36)
   <Distributed chunk1>
   LOOP END

   LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(60,5) inlined into smagorinskyMRTdynamics.hh(55,36)
   <Distributed chunk1>
   LOOP END

   LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(60,5) inlined into smagorinskyMRTdynamics.hh(55,36)
   <Distributed chunk1>
   LOOP END

   LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(60,5) inlined into smagorinskyMRTdynamics.hh(55,36)
   <Distributed chunk1>
   LOOP END
LOOP END

LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(50,3) inlined into smagorinskyMRTdynamics.hh(55,36)
<Remainder>
LOOP END

LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(58,3) inlined into smagorinskyMRTdynamics.hh(55,36)
<Distributed chunk2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(63,7) inlined into smagorinskyMRTdynamics.hh(55,36)
   <Distributed chunk2>
      remark #15301: PARTIAL LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15456: masked unaligned unit stride loads: 1 
      remark #15457: masked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 21 
      remark #15477: vector loop cost: 10.250 
      remark #15478: estimated potential speedup: 1.530 
      remark #15479: lightweight vector operations: 21 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(63,7) inlined into smagorinskyMRTdynamics.hh(55,36)
   <Remainder, Distributed chunk2>
   LOOP END
LOOP END

LOOP BEGIN at smagorinskyMRTdynamics.hh(61,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15467: unmasked aligned streaming stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 0.750 
   remark #15478: estimated potential speedup: 3.600 
   remark #15479: lightweight vector operations: 3 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at smagorinskyMRTdynamics.hh(64,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15459: masked indexed (or scatter) stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.710 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at smagorinskyMRTdynamics.hh(67,3)
<Distributed chunk1>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15462: unmasked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 3.000 
   remark #15478: estimated potential speedup: 1.280 
   remark #15479: lightweight vector operations: 3 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---

   LOOP BEGIN at smagorinskyMRTdynamics.hh(68,5)
   <Distributed chunk1>
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15467: unmasked aligned streaming stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 1.500 
      remark #15478: estimated potential speedup: 1.380 
      remark #15479: lightweight vector operations: 2 
      remark #15480: medium-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at smagorinskyMRTdynamics.hh(68,5)
   <Distributed chunk1>
   LOOP END

   LOOP BEGIN at smagorinskyMRTdynamics.hh(68,5)
   <Distributed chunk1>
   LOOP END

   LOOP BEGIN at smagorinskyMRTdynamics.hh(68,5)
   <Distributed chunk1>
   LOOP END

   LOOP BEGIN at smagorinskyMRTdynamics.hh(68,5)
   <Distributed chunk1>
   LOOP END

   LOOP BEGIN at smagorinskyMRTdynamics.hh(68,5)
   <Distributed chunk1>
   LOOP END

   LOOP BEGIN at smagorinskyMRTdynamics.hh(68,5)
   <Distributed chunk1>
   LOOP END

   LOOP BEGIN at smagorinskyMRTdynamics.hh(68,5)
   <Distributed chunk1>
   LOOP END

   LOOP BEGIN at smagorinskyMRTdynamics.hh(68,5)
   <Distributed chunk1>
   LOOP END
LOOP END

LOOP BEGIN at smagorinskyMRTdynamics.hh(61,3)
<Remainder>
LOOP END

LOOP BEGIN at smagorinskyMRTdynamics.hh(67,3)
<Distributed chunk2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at smagorinskyMRTdynamics.hh(70,6)
   <Distributed chunk2>
      remark #15301: PARTIAL LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15456: masked unaligned unit stride loads: 1 
      remark #15457: masked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 21 
      remark #15477: vector loop cost: 10.250 
      remark #15478: estimated potential speedup: 1.530 
      remark #15479: lightweight vector operations: 21 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at smagorinskyMRTdynamics.hh(70,6)
   <Remainder, Distributed chunk2>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::SmagorinskyMRTdynamics<double, olb::descriptors::MRTD2Q9Descriptor>::SmagorinskyMRTdynamics(olb::SmagorinskyMRTdynamics<double, olb::descriptors::MRTD2Q9Descriptor> *const, double, olb::Momenta<double, olb::descriptors::MRTD2Q9Descriptor> &, double, double, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(50,3) inlined into smagorinskyMRTdynamics.hh(53,36)
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15467: unmasked aligned streaming stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 0.750 
   remark #15478: estimated potential speedup: 3.600 
   remark #15479: lightweight vector operations: 3 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(54,3) inlined into smagorinskyMRTdynamics.hh(53,36)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15459: masked indexed (or scatter) stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.710 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(58,3) inlined into smagorinskyMRTdynamics.hh(53,36)
<Distributed chunk1>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15462: unmasked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 3.000 
   remark #15478: estimated potential speedup: 1.280 
   remark #15479: lightweight vector operations: 3 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---

   LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(60,5) inlined into smagorinskyMRTdynamics.hh(53,36)
   <Distributed chunk1>
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15467: unmasked aligned streaming stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 1.500 
      remark #15478: estimated potential speedup: 1.380 
      remark #15479: lightweight vector operations: 2 
      remark #15480: medium-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(60,5) inlined into smagorinskyMRTdynamics.hh(53,36)
   <Distributed chunk1>
   LOOP END

   LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(60,5) inlined into smagorinskyMRTdynamics.hh(53,36)
   <Distributed chunk1>
   LOOP END

   LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(60,5) inlined into smagorinskyMRTdynamics.hh(53,36)
   <Distributed chunk1>
   LOOP END

   LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(60,5) inlined into smagorinskyMRTdynamics.hh(53,36)
   <Distributed chunk1>
   LOOP END

   LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(60,5) inlined into smagorinskyMRTdynamics.hh(53,36)
   <Distributed chunk1>
   LOOP END

   LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(60,5) inlined into smagorinskyMRTdynamics.hh(53,36)
   <Distributed chunk1>
   LOOP END

   LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(60,5) inlined into smagorinskyMRTdynamics.hh(53,36)
   <Distributed chunk1>
   LOOP END

   LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(60,5) inlined into smagorinskyMRTdynamics.hh(53,36)
   <Distributed chunk1>
   LOOP END
LOOP END

LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(50,3) inlined into smagorinskyMRTdynamics.hh(53,36)
<Remainder>
LOOP END

LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(58,3) inlined into smagorinskyMRTdynamics.hh(53,36)
<Distributed chunk2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(63,7) inlined into smagorinskyMRTdynamics.hh(53,36)
   <Distributed chunk2>
      remark #15301: PARTIAL LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15456: masked unaligned unit stride loads: 1 
      remark #15457: masked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 21 
      remark #15477: vector loop cost: 10.250 
      remark #15478: estimated potential speedup: 1.530 
      remark #15479: lightweight vector operations: 21 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(63,7) inlined into smagorinskyMRTdynamics.hh(53,36)
   <Remainder, Distributed chunk2>
   LOOP END
LOOP END

LOOP BEGIN at smagorinskyMRTdynamics.hh(61,3) inlined into smagorinskyMRTdynamics.hh(53,36)
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15467: unmasked aligned streaming stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 0.750 
   remark #15478: estimated potential speedup: 3.600 
   remark #15479: lightweight vector operations: 3 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at smagorinskyMRTdynamics.hh(64,3) inlined into smagorinskyMRTdynamics.hh(53,36)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15459: masked indexed (or scatter) stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.710 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at smagorinskyMRTdynamics.hh(67,3) inlined into smagorinskyMRTdynamics.hh(53,36)
<Distributed chunk1>
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15462: unmasked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 3.000 
   remark #15478: estimated potential speedup: 1.280 
   remark #15479: lightweight vector operations: 3 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---

   LOOP BEGIN at smagorinskyMRTdynamics.hh(68,5) inlined into smagorinskyMRTdynamics.hh(53,36)
   <Distributed chunk1>
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15467: unmasked aligned streaming stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 1.500 
      remark #15478: estimated potential speedup: 1.380 
      remark #15479: lightweight vector operations: 2 
      remark #15480: medium-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at smagorinskyMRTdynamics.hh(68,5) inlined into smagorinskyMRTdynamics.hh(53,36)
   <Distributed chunk1>
   LOOP END

   LOOP BEGIN at smagorinskyMRTdynamics.hh(68,5) inlined into smagorinskyMRTdynamics.hh(53,36)
   <Distributed chunk1>
   LOOP END

   LOOP BEGIN at smagorinskyMRTdynamics.hh(68,5) inlined into smagorinskyMRTdynamics.hh(53,36)
   <Distributed chunk1>
   LOOP END

   LOOP BEGIN at smagorinskyMRTdynamics.hh(68,5) inlined into smagorinskyMRTdynamics.hh(53,36)
   <Distributed chunk1>
   LOOP END

   LOOP BEGIN at smagorinskyMRTdynamics.hh(68,5) inlined into smagorinskyMRTdynamics.hh(53,36)
   <Distributed chunk1>
   LOOP END

   LOOP BEGIN at smagorinskyMRTdynamics.hh(68,5) inlined into smagorinskyMRTdynamics.hh(53,36)
   <Distributed chunk1>
   LOOP END

   LOOP BEGIN at smagorinskyMRTdynamics.hh(68,5) inlined into smagorinskyMRTdynamics.hh(53,36)
   <Distributed chunk1>
   LOOP END

   LOOP BEGIN at smagorinskyMRTdynamics.hh(68,5) inlined into smagorinskyMRTdynamics.hh(53,36)
   <Distributed chunk1>
   LOOP END
LOOP END

LOOP BEGIN at smagorinskyMRTdynamics.hh(61,3) inlined into smagorinskyMRTdynamics.hh(53,36)
<Remainder>
LOOP END

LOOP BEGIN at smagorinskyMRTdynamics.hh(67,3) inlined into smagorinskyMRTdynamics.hh(53,36)
<Distributed chunk2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at smagorinskyMRTdynamics.hh(70,6) inlined into smagorinskyMRTdynamics.hh(53,36)
   <Distributed chunk2>
      remark #15301: PARTIAL LOOP WAS VECTORIZED
      remark #15448: unmasked aligned unit stride loads: 1 
      remark #15450: unmasked unaligned unit stride loads: 1 
      remark #15456: masked unaligned unit stride loads: 1 
      remark #15457: masked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 21 
      remark #15477: vector loop cost: 10.250 
      remark #15478: estimated potential speedup: 1.530 
      remark #15479: lightweight vector operations: 21 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at smagorinskyMRTdynamics.hh(70,6) inlined into smagorinskyMRTdynamics.hh(53,36)
   <Remainder, Distributed chunk2>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::SmagorinskyMRTdynamics<double, olb::descriptors::MRTD2Q9Descriptor>::collide(olb::SmagorinskyMRTdynamics<double, olb::descriptors::MRTD2Q9Descriptor> *, olb::Cell<double, olb::descriptors::MRTD2Q9Descriptor> &, olb::LatticeStatistics<double> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at smagorinskyMRTdynamics.hh(88,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15460: masked strided loads: 1 
   remark #15462: unmasked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 11 
   remark #15477: vector loop cost: 10.000 
   remark #15478: estimated potential speedup: 1.060 
   remark #15479: lightweight vector operations: 4 
   remark #15481: heavy-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---

   LOOP BEGIN at smagorinskyMRTdynamics.hh(89,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15458: masked indexed (or gather) loads: 1 
      remark #15459: masked indexed (or scatter) stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 11 
      remark #15477: vector loop cost: 8.500 
      remark #15478: estimated potential speedup: 0.880 
      remark #15479: lightweight vector operations: 4 
      remark #15480: medium-overhead vector operations: 1 
      remark #15481: heavy-overhead vector operations: 2 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at smagorinskyMRTdynamics.hh(89,5)
   LOOP END

   LOOP BEGIN at smagorinskyMRTdynamics.hh(89,5)
   LOOP END

   LOOP BEGIN at smagorinskyMRTdynamics.hh(89,5)
   LOOP END

   LOOP BEGIN at smagorinskyMRTdynamics.hh(89,5)
   LOOP END

   LOOP BEGIN at smagorinskyMRTdynamics.hh(89,5)
   LOOP END

   LOOP BEGIN at smagorinskyMRTdynamics.hh(89,5)
   LOOP END

   LOOP BEGIN at smagorinskyMRTdynamics.hh(89,5)
   LOOP END

   LOOP BEGIN at smagorinskyMRTdynamics.hh(89,5)
   LOOP END
LOOP END

LOOP BEGIN at ../../src/core/util.h(92,3) inlined into smagorinskyMRTdynamics.hh(94,12)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 8 
   remark #15477: vector loop cost: 3.500 
   remark #15478: estimated potential speedup: 0.610 
   remark #15479: lightweight vector operations: 6 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::SmagorinskyMRTdynamics<double, olb::descriptors::MRTD2Q9Descriptor>::staticCollide(olb::SmagorinskyMRTdynamics<double, olb::descriptors::MRTD2Q9Descriptor> *, olb::Cell<double, olb::descriptors::MRTD2Q9Descriptor> &, const double *, olb::LatticeStatistics<double> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at smagorinskyMRTdynamics.hh(110,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15460: masked strided loads: 1 
   remark #15462: unmasked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 11 
   remark #15477: vector loop cost: 10.000 
   remark #15478: estimated potential speedup: 1.060 
   remark #15479: lightweight vector operations: 4 
   remark #15481: heavy-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---

   LOOP BEGIN at smagorinskyMRTdynamics.hh(111,5)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15458: masked indexed (or gather) loads: 1 
      remark #15459: masked indexed (or scatter) stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 11 
      remark #15477: vector loop cost: 8.500 
      remark #15478: estimated potential speedup: 0.880 
      remark #15479: lightweight vector operations: 4 
      remark #15480: medium-overhead vector operations: 1 
      remark #15481: heavy-overhead vector operations: 2 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at smagorinskyMRTdynamics.hh(111,5)
   LOOP END

   LOOP BEGIN at smagorinskyMRTdynamics.hh(111,5)
   LOOP END

   LOOP BEGIN at smagorinskyMRTdynamics.hh(111,5)
   LOOP END

   LOOP BEGIN at smagorinskyMRTdynamics.hh(111,5)
   LOOP END

   LOOP BEGIN at smagorinskyMRTdynamics.hh(111,5)
   LOOP END

   LOOP BEGIN at smagorinskyMRTdynamics.hh(111,5)
   LOOP END

   LOOP BEGIN at smagorinskyMRTdynamics.hh(111,5)
   LOOP END

   LOOP BEGIN at smagorinskyMRTdynamics.hh(111,5)
   LOOP END
LOOP END

LOOP BEGIN at ../../src/core/util.h(92,3) inlined into smagorinskyMRTdynamics.hh(116,12)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.640 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::MRTdynamics<double, olb::descriptors::MRTD3Q19Descriptor>::collide(olb::MRTdynamics<double, olb::descriptors::MRTD3Q19Descriptor> *, olb::Cell<double, olb::descriptors::MRTD3Q19Descriptor> &, olb::LatticeStatistics<double> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(92,3) inlined into ../../src/complexDynamics/mrtDynamics.hh(99,12)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 8 
   remark #15477: vector loop cost: 3.500 
   remark #15478: estimated potential speedup: 0.700 
   remark #15479: lightweight vector operations: 6 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::MRTdynamics<double, olb::descriptors::MRTD3Q19Descriptor>::staticCollide(olb::MRTdynamics<double, olb::descriptors::MRTD3Q19Descriptor> *, olb::Cell<double, olb::descriptors::MRTD3Q19Descriptor> &, const double *, olb::LatticeStatistics<double> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(92,3) inlined into ../../src/complexDynamics/mrtDynamics.hh(116,12)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.730 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::SmagorinskyMRTdynamics<double, olb::descriptors::MRTD3Q19Descriptor>::SmagorinskyMRTdynamics(olb::SmagorinskyMRTdynamics<double, olb::descriptors::MRTD3Q19Descriptor> *, double, olb::Momenta<double, olb::descriptors::MRTD3Q19Descriptor> &, double, double, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(50,3) inlined into smagorinskyMRTdynamics.hh(55,36)
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15467: unmasked aligned streaming stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 0.750 
   remark #15478: estimated potential speedup: 3.160 
   remark #15479: lightweight vector operations: 3 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(54,3) inlined into smagorinskyMRTdynamics.hh(55,36)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15459: masked indexed (or scatter) stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.890 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(50,3) inlined into smagorinskyMRTdynamics.hh(55,36)
<Remainder>
LOOP END

LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(58,3) inlined into smagorinskyMRTdynamics.hh(55,36)
<Distributed chunk1>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(60,5) inlined into smagorinskyMRTdynamics.hh(55,36)
   <Peeled, Distributed chunk1>
   LOOP END

   LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(60,5) inlined into smagorinskyMRTdynamics.hh(55,36)
   <Distributed chunk1>
      remark #15301: PARTIAL LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15467: unmasked aligned streaming stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 0.750 
      remark #15478: estimated potential speedup: 2.230 
      remark #15479: lightweight vector operations: 3 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(60,5) inlined into smagorinskyMRTdynamics.hh(55,36)
   <Remainder, Distributed chunk1>
   LOOP END
LOOP END

LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(58,3) inlined into smagorinskyMRTdynamics.hh(55,36)
<Distributed chunk2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(63,7) inlined into smagorinskyMRTdynamics.hh(55,36)
   <Peeled, Distributed chunk2>
   LOOP END

   LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(63,7) inlined into smagorinskyMRTdynamics.hh(55,36)
   <Distributed chunk2>
      remark #15399: vectorization support: unroll factor set to 2
      remark #15301: PARTIAL LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15454: masked aligned unit stride loads: 1 
      remark #15455: masked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 21 
      remark #15477: vector loop cost: 8.620 
      remark #15478: estimated potential speedup: 1.690 
      remark #15479: lightweight vector operations: 21 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(63,7) inlined into smagorinskyMRTdynamics.hh(55,36)
   <Remainder, Distributed chunk2>
   LOOP END
LOOP END

LOOP BEGIN at smagorinskyMRTdynamics.hh(61,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15467: unmasked aligned streaming stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 0.750 
   remark #15478: estimated potential speedup: 3.160 
   remark #15479: lightweight vector operations: 3 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at smagorinskyMRTdynamics.hh(64,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15459: masked indexed (or scatter) stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.890 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at smagorinskyMRTdynamics.hh(61,3)
<Remainder>
LOOP END

LOOP BEGIN at smagorinskyMRTdynamics.hh(67,3)
<Distributed chunk1>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at smagorinskyMRTdynamics.hh(68,5)
   <Peeled, Distributed chunk1>
   LOOP END

   LOOP BEGIN at smagorinskyMRTdynamics.hh(68,5)
   <Distributed chunk1>
      remark #15301: PARTIAL LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15467: unmasked aligned streaming stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 0.750 
      remark #15478: estimated potential speedup: 2.230 
      remark #15479: lightweight vector operations: 3 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at smagorinskyMRTdynamics.hh(68,5)
   <Remainder, Distributed chunk1>
   LOOP END
LOOP END

LOOP BEGIN at smagorinskyMRTdynamics.hh(67,3)
<Distributed chunk2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at smagorinskyMRTdynamics.hh(70,6)
   <Peeled, Distributed chunk2>
   LOOP END

   LOOP BEGIN at smagorinskyMRTdynamics.hh(70,6)
   <Distributed chunk2>
      remark #15399: vectorization support: unroll factor set to 2
      remark #15301: PARTIAL LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15454: masked aligned unit stride loads: 1 
      remark #15455: masked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 21 
      remark #15477: vector loop cost: 8.620 
      remark #15478: estimated potential speedup: 1.690 
      remark #15479: lightweight vector operations: 21 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at smagorinskyMRTdynamics.hh(70,6)
   <Remainder, Distributed chunk2>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::SmagorinskyMRTdynamics<double, olb::descriptors::MRTD3Q19Descriptor>::SmagorinskyMRTdynamics(olb::SmagorinskyMRTdynamics<double, olb::descriptors::MRTD3Q19Descriptor> *const, double, olb::Momenta<double, olb::descriptors::MRTD3Q19Descriptor> &, double, double, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(50,3) inlined into smagorinskyMRTdynamics.hh(53,36)
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15467: unmasked aligned streaming stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 0.750 
   remark #15478: estimated potential speedup: 3.160 
   remark #15479: lightweight vector operations: 3 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(54,3) inlined into smagorinskyMRTdynamics.hh(53,36)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15459: masked indexed (or scatter) stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.890 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(50,3) inlined into smagorinskyMRTdynamics.hh(53,36)
<Remainder>
LOOP END

LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(58,3) inlined into smagorinskyMRTdynamics.hh(53,36)
<Distributed chunk1>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(60,5) inlined into smagorinskyMRTdynamics.hh(53,36)
   <Peeled, Distributed chunk1>
   LOOP END

   LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(60,5) inlined into smagorinskyMRTdynamics.hh(53,36)
   <Distributed chunk1>
      remark #15301: PARTIAL LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15467: unmasked aligned streaming stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 0.750 
      remark #15478: estimated potential speedup: 2.230 
      remark #15479: lightweight vector operations: 3 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(60,5) inlined into smagorinskyMRTdynamics.hh(53,36)
   <Remainder, Distributed chunk1>
   LOOP END
LOOP END

LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(58,3) inlined into smagorinskyMRTdynamics.hh(53,36)
<Distributed chunk2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(63,7) inlined into smagorinskyMRTdynamics.hh(53,36)
   <Peeled, Distributed chunk2>
   LOOP END

   LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(63,7) inlined into smagorinskyMRTdynamics.hh(53,36)
   <Distributed chunk2>
      remark #15399: vectorization support: unroll factor set to 2
      remark #15301: PARTIAL LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15454: masked aligned unit stride loads: 1 
      remark #15455: masked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 21 
      remark #15477: vector loop cost: 8.620 
      remark #15478: estimated potential speedup: 1.690 
      remark #15479: lightweight vector operations: 21 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at ../../src/complexDynamics/mrtDynamics.hh(63,7) inlined into smagorinskyMRTdynamics.hh(53,36)
   <Remainder, Distributed chunk2>
   LOOP END
LOOP END

LOOP BEGIN at smagorinskyMRTdynamics.hh(61,3) inlined into smagorinskyMRTdynamics.hh(53,36)
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15467: unmasked aligned streaming stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 0.750 
   remark #15478: estimated potential speedup: 3.160 
   remark #15479: lightweight vector operations: 3 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at smagorinskyMRTdynamics.hh(64,3) inlined into smagorinskyMRTdynamics.hh(53,36)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15459: masked indexed (or scatter) stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 5 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.890 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at smagorinskyMRTdynamics.hh(61,3) inlined into smagorinskyMRTdynamics.hh(53,36)
<Remainder>
LOOP END

LOOP BEGIN at smagorinskyMRTdynamics.hh(67,3) inlined into smagorinskyMRTdynamics.hh(53,36)
<Distributed chunk1>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at smagorinskyMRTdynamics.hh(68,5) inlined into smagorinskyMRTdynamics.hh(53,36)
   <Peeled, Distributed chunk1>
   LOOP END

   LOOP BEGIN at smagorinskyMRTdynamics.hh(68,5) inlined into smagorinskyMRTdynamics.hh(53,36)
   <Distributed chunk1>
      remark #15301: PARTIAL LOOP WAS VECTORIZED
      remark #15449: unmasked aligned unit stride stores: 1 
      remark #15467: unmasked aligned streaming stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 0.750 
      remark #15478: estimated potential speedup: 2.230 
      remark #15479: lightweight vector operations: 3 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at smagorinskyMRTdynamics.hh(68,5) inlined into smagorinskyMRTdynamics.hh(53,36)
   <Remainder, Distributed chunk1>
   LOOP END
LOOP END

LOOP BEGIN at smagorinskyMRTdynamics.hh(67,3) inlined into smagorinskyMRTdynamics.hh(53,36)
<Distributed chunk2>
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at smagorinskyMRTdynamics.hh(70,6) inlined into smagorinskyMRTdynamics.hh(53,36)
   <Peeled, Distributed chunk2>
   LOOP END

   LOOP BEGIN at smagorinskyMRTdynamics.hh(70,6) inlined into smagorinskyMRTdynamics.hh(53,36)
   <Distributed chunk2>
      remark #15399: vectorization support: unroll factor set to 2
      remark #15301: PARTIAL LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15454: masked aligned unit stride loads: 1 
      remark #15455: masked aligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 21 
      remark #15477: vector loop cost: 8.620 
      remark #15478: estimated potential speedup: 1.690 
      remark #15479: lightweight vector operations: 21 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at smagorinskyMRTdynamics.hh(70,6) inlined into smagorinskyMRTdynamics.hh(53,36)
   <Remainder, Distributed chunk2>
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::SmagorinskyMRTdynamics<double, olb::descriptors::MRTD3Q19Descriptor>::collide(olb::SmagorinskyMRTdynamics<double, olb::descriptors::MRTD3Q19Descriptor> *, olb::Cell<double, olb::descriptors::MRTD3Q19Descriptor> &, olb::LatticeStatistics<double> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at smagorinskyMRTdynamics.hh(88,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at smagorinskyMRTdynamics.hh(89,5)
      remark #15300: LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15458: masked indexed (or gather) loads: 1 
      remark #15459: masked indexed (or scatter) stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 11 
      remark #15477: vector loop cost: 8.500 
      remark #15478: estimated potential speedup: 1.030 
      remark #15479: lightweight vector operations: 4 
      remark #15480: medium-overhead vector operations: 1 
      remark #15481: heavy-overhead vector operations: 2 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at smagorinskyMRTdynamics.hh(89,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../../src/core/util.h(92,3) inlined into smagorinskyMRTdynamics.hh(94,12)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 8 
   remark #15477: vector loop cost: 3.500 
   remark #15478: estimated potential speedup: 0.700 
   remark #15479: lightweight vector operations: 6 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::SmagorinskyMRTdynamics<double, olb::descriptors::MRTD3Q19Descriptor>::staticCollide(olb::SmagorinskyMRTdynamics<double, olb::descriptors::MRTD3Q19Descriptor> *, olb::Cell<double, olb::descriptors::MRTD3Q19Descriptor> &, const double *, olb::LatticeStatistics<double> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at smagorinskyMRTdynamics.hh(110,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at smagorinskyMRTdynamics.hh(111,5)
      remark #15300: LOOP WAS VECTORIZED
      remark #15450: unmasked unaligned unit stride loads: 2 
      remark #15458: masked indexed (or gather) loads: 1 
      remark #15459: masked indexed (or scatter) stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 11 
      remark #15477: vector loop cost: 8.500 
      remark #15478: estimated potential speedup: 1.030 
      remark #15479: lightweight vector operations: 4 
      remark #15480: medium-overhead vector operations: 1 
      remark #15481: heavy-overhead vector operations: 2 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at smagorinskyMRTdynamics.hh(111,5)
   <Remainder>
   LOOP END
LOOP END

LOOP BEGIN at ../../src/core/util.h(92,3) inlined into smagorinskyMRTdynamics.hh(116,12)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.730 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================
