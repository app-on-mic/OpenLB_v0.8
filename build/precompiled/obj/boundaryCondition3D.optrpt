
Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::~BoundaryConditionInstantiator3D(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(144,55)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at boundaryInstantiator3D.h(147,53)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::~BoundaryConditionInstantiator3D(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(144,55) inlined into boundaryInstantiator3D.h(143,61)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at boundaryInstantiator3D.h(147,53) inlined into boundaryInstantiator3D.h(143,61)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::~BoundaryConditionInstantiator3D(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(144,55) inlined into boundaryInstantiator3D.h(143,61)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at boundaryInstantiator3D.h(147,53) inlined into boundaryInstantiator3D.h(143,61)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addVelocityBoundary0N(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(161,7) inlined into boundaryInstantiator3D.h(727,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(727,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(159,3) inlined into boundaryInstantiator3D.h(727,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(160,5) inlined into boundaryInstantiator3D.h(727,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addVelocityBoundary0P(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(161,7) inlined into boundaryInstantiator3D.h(734,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(734,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(159,3) inlined into boundaryInstantiator3D.h(734,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(160,5) inlined into boundaryInstantiator3D.h(734,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addVelocityBoundary1N(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(161,7) inlined into boundaryInstantiator3D.h(741,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(741,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(159,3) inlined into boundaryInstantiator3D.h(741,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(160,5) inlined into boundaryInstantiator3D.h(741,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addVelocityBoundary1P(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(161,7) inlined into boundaryInstantiator3D.h(748,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(748,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(159,3) inlined into boundaryInstantiator3D.h(748,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(160,5) inlined into boundaryInstantiator3D.h(748,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addVelocityBoundary2N(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(161,7) inlined into boundaryInstantiator3D.h(755,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(755,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(159,3) inlined into boundaryInstantiator3D.h(755,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(160,5) inlined into boundaryInstantiator3D.h(755,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addVelocityBoundary2P(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(161,7) inlined into boundaryInstantiator3D.h(762,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(762,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(159,3) inlined into boundaryInstantiator3D.h(762,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(160,5) inlined into boundaryInstantiator3D.h(762,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addPressureBoundary0N(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(192,7) inlined into boundaryInstantiator3D.h(769,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator3D.h(769,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(190,3) inlined into boundaryInstantiator3D.h(769,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(191,5) inlined into boundaryInstantiator3D.h(769,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addPressureBoundary0P(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(192,7) inlined into boundaryInstantiator3D.h(776,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator3D.h(776,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(190,3) inlined into boundaryInstantiator3D.h(776,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(191,5) inlined into boundaryInstantiator3D.h(776,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addPressureBoundary1N(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(192,7) inlined into boundaryInstantiator3D.h(783,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator3D.h(783,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(190,3) inlined into boundaryInstantiator3D.h(783,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(191,5) inlined into boundaryInstantiator3D.h(783,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addPressureBoundary1P(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(192,7) inlined into boundaryInstantiator3D.h(790,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator3D.h(790,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(190,3) inlined into boundaryInstantiator3D.h(790,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(191,5) inlined into boundaryInstantiator3D.h(790,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addPressureBoundary2N(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(192,7) inlined into boundaryInstantiator3D.h(797,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator3D.h(797,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(190,3) inlined into boundaryInstantiator3D.h(797,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(191,5) inlined into boundaryInstantiator3D.h(797,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addPressureBoundary2P(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(192,7) inlined into boundaryInstantiator3D.h(804,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator3D.h(804,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(190,3) inlined into boundaryInstantiator3D.h(804,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(191,5) inlined into boundaryInstantiator3D.h(804,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge0NN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7) inlined into boundaryInstantiator3D.h(812,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3) inlined into boundaryInstantiator3D.h(812,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5) inlined into boundaryInstantiator3D.h(812,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge0NP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7) inlined into boundaryInstantiator3D.h(819,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3) inlined into boundaryInstantiator3D.h(819,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5) inlined into boundaryInstantiator3D.h(819,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge0PN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7) inlined into boundaryInstantiator3D.h(826,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3) inlined into boundaryInstantiator3D.h(826,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5) inlined into boundaryInstantiator3D.h(826,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge0PP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7) inlined into boundaryInstantiator3D.h(833,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3) inlined into boundaryInstantiator3D.h(833,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5) inlined into boundaryInstantiator3D.h(833,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge1NN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7) inlined into boundaryInstantiator3D.h(840,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3) inlined into boundaryInstantiator3D.h(840,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5) inlined into boundaryInstantiator3D.h(840,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge1NP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7) inlined into boundaryInstantiator3D.h(847,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3) inlined into boundaryInstantiator3D.h(847,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5) inlined into boundaryInstantiator3D.h(847,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge1PN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7) inlined into boundaryInstantiator3D.h(854,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3) inlined into boundaryInstantiator3D.h(854,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5) inlined into boundaryInstantiator3D.h(854,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge1PP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7) inlined into boundaryInstantiator3D.h(861,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3) inlined into boundaryInstantiator3D.h(861,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5) inlined into boundaryInstantiator3D.h(861,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge2NN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7) inlined into boundaryInstantiator3D.h(868,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3) inlined into boundaryInstantiator3D.h(868,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5) inlined into boundaryInstantiator3D.h(868,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge2NP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7) inlined into boundaryInstantiator3D.h(875,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3) inlined into boundaryInstantiator3D.h(875,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5) inlined into boundaryInstantiator3D.h(875,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge2PN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7) inlined into boundaryInstantiator3D.h(882,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3) inlined into boundaryInstantiator3D.h(882,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5) inlined into boundaryInstantiator3D.h(882,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge2PP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7) inlined into boundaryInstantiator3D.h(889,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3) inlined into boundaryInstantiator3D.h(889,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5) inlined into boundaryInstantiator3D.h(889,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge0NN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7) inlined into boundaryInstantiator3D.h(898,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(898,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(898,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3) inlined into boundaryInstantiator3D.h(898,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5) inlined into boundaryInstantiator3D.h(898,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge0NP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7) inlined into boundaryInstantiator3D.h(905,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(905,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(905,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3) inlined into boundaryInstantiator3D.h(905,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5) inlined into boundaryInstantiator3D.h(905,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge0PN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7) inlined into boundaryInstantiator3D.h(912,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(912,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(912,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3) inlined into boundaryInstantiator3D.h(912,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5) inlined into boundaryInstantiator3D.h(912,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge0PP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7) inlined into boundaryInstantiator3D.h(919,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(919,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(919,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3) inlined into boundaryInstantiator3D.h(919,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5) inlined into boundaryInstantiator3D.h(919,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge1NN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7) inlined into boundaryInstantiator3D.h(926,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(926,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(926,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3) inlined into boundaryInstantiator3D.h(926,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5) inlined into boundaryInstantiator3D.h(926,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge1NP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7) inlined into boundaryInstantiator3D.h(933,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(933,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(933,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3) inlined into boundaryInstantiator3D.h(933,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5) inlined into boundaryInstantiator3D.h(933,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge1PN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7) inlined into boundaryInstantiator3D.h(940,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(940,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(940,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3) inlined into boundaryInstantiator3D.h(940,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5) inlined into boundaryInstantiator3D.h(940,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge1PP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7) inlined into boundaryInstantiator3D.h(947,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(947,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(947,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3) inlined into boundaryInstantiator3D.h(947,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5) inlined into boundaryInstantiator3D.h(947,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge2NN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7) inlined into boundaryInstantiator3D.h(954,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(954,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(954,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3) inlined into boundaryInstantiator3D.h(954,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5) inlined into boundaryInstantiator3D.h(954,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge2NP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7) inlined into boundaryInstantiator3D.h(961,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(961,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(961,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3) inlined into boundaryInstantiator3D.h(961,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5) inlined into boundaryInstantiator3D.h(961,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge2PN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7) inlined into boundaryInstantiator3D.h(968,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(968,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(968,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3) inlined into boundaryInstantiator3D.h(968,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5) inlined into boundaryInstantiator3D.h(968,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge2PP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7) inlined into boundaryInstantiator3D.h(975,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(975,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(975,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3) inlined into boundaryInstantiator3D.h(975,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5) inlined into boundaryInstantiator3D.h(975,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityCornerNNN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1040,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1040,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1040,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityCornerNNP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1047,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1047,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1047,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityCornerNPN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1054,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1054,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1054,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityCornerNPP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1061,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1061,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1061,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityCornerPNN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1068,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1068,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1068,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityCornerPNP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1075,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1075,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1075,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityCornerPPN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1082,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1082,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1082,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityCornerPPP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1089,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1089,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1089,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addVelocityBoundary(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, olb::BlockGeometryStatistics3D *, int, int, int, int, int, int, double, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(344,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(342,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(343,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addVelocityBoundary<0, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(161,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(164,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(159,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(160,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addVelocityBoundary<0, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(161,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(164,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(159,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(160,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addVelocityBoundary<1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(161,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(164,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(159,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(160,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addVelocityBoundary<1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(161,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(164,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(159,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(160,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addVelocityBoundary<2, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(161,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(164,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(159,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(160,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addVelocityBoundary<2, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(161,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(164,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(159,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(160,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityCorner<1, 1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityCorner<1, 1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityCorner<1, -1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityCorner<-1, 1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityCorner<-1, -1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityCorner<-1, 1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityCorner<-1, -1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge<0, 1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge<0, -1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge<0, 1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge<0, -1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge<1, 1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge<1, 1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge<1, -1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge<1, -1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge<2, 1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge<2, -1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge<2, 1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge<2, -1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge<0, 1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge<0, -1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge<0, 1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge<0, -1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge<1, 1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge<1, 1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge<1, -1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge<1, -1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge<2, 1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge<2, -1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge<2, 1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge<2, -1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::vector<int>(std::vector<int, std::allocator<int>> *, int, int, const std::vector<int, std::allocator<int>>::allocator_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(757,7) inlined into /usr/include/c++/4.4.7/bits/stl_vector.h(303,4)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(757,7) inlined into /usr/include/c++/4.4.7/bits/stl_vector.h(303,4)
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15467: unmasked aligned streaming stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 0.750 
   remark #15478: estimated potential speedup: 2.460 
   remark #15479: lightweight vector operations: 3 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(757,7) inlined into /usr/include/c++/4.4.7/bits/stl_vector.h(303,4)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addPressureBoundary(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, olb::BlockGeometryStatistics3D *, int, int, int, int, int, int, double, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(663,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(661,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(662,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addPressureBoundary<0, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(192,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator3D.h(195,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(190,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(191,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addPressureBoundary<0, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(192,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator3D.h(195,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(190,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(191,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addPressureBoundary<1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(192,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator3D.h(195,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(190,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(191,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addPressureBoundary<1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(192,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator3D.h(195,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(190,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(191,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addPressureBoundary<2, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(192,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator3D.h(195,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(190,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(191,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addPressureBoundary<2, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::RLBdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(192,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator3D.h(195,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(190,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(191,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::~BoundaryConditionInstantiator3D(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(144,55)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at boundaryInstantiator3D.h(147,53)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::~BoundaryConditionInstantiator3D(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(144,55) inlined into boundaryInstantiator3D.h(143,61)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at boundaryInstantiator3D.h(147,53) inlined into boundaryInstantiator3D.h(143,61)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::~BoundaryConditionInstantiator3D(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(144,55) inlined into boundaryInstantiator3D.h(143,61)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at boundaryInstantiator3D.h(147,53) inlined into boundaryInstantiator3D.h(143,61)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addVelocityBoundary0N(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(161,7) inlined into boundaryInstantiator3D.h(727,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(727,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(159,3) inlined into boundaryInstantiator3D.h(727,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(160,5) inlined into boundaryInstantiator3D.h(727,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addVelocityBoundary0P(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(161,7) inlined into boundaryInstantiator3D.h(734,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(734,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(159,3) inlined into boundaryInstantiator3D.h(734,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(160,5) inlined into boundaryInstantiator3D.h(734,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addVelocityBoundary1N(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(161,7) inlined into boundaryInstantiator3D.h(741,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(741,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(159,3) inlined into boundaryInstantiator3D.h(741,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(160,5) inlined into boundaryInstantiator3D.h(741,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addVelocityBoundary1P(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(161,7) inlined into boundaryInstantiator3D.h(748,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(748,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(159,3) inlined into boundaryInstantiator3D.h(748,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(160,5) inlined into boundaryInstantiator3D.h(748,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addVelocityBoundary2N(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(161,7) inlined into boundaryInstantiator3D.h(755,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(755,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(159,3) inlined into boundaryInstantiator3D.h(755,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(160,5) inlined into boundaryInstantiator3D.h(755,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addVelocityBoundary2P(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(161,7) inlined into boundaryInstantiator3D.h(762,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(762,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(159,3) inlined into boundaryInstantiator3D.h(762,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(160,5) inlined into boundaryInstantiator3D.h(762,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addPressureBoundary0N(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(192,7) inlined into boundaryInstantiator3D.h(769,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator3D.h(769,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(190,3) inlined into boundaryInstantiator3D.h(769,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(191,5) inlined into boundaryInstantiator3D.h(769,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addPressureBoundary0P(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(192,7) inlined into boundaryInstantiator3D.h(776,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator3D.h(776,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(190,3) inlined into boundaryInstantiator3D.h(776,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(191,5) inlined into boundaryInstantiator3D.h(776,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addPressureBoundary1N(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(192,7) inlined into boundaryInstantiator3D.h(783,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator3D.h(783,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(190,3) inlined into boundaryInstantiator3D.h(783,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(191,5) inlined into boundaryInstantiator3D.h(783,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addPressureBoundary1P(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(192,7) inlined into boundaryInstantiator3D.h(790,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator3D.h(790,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(190,3) inlined into boundaryInstantiator3D.h(790,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(191,5) inlined into boundaryInstantiator3D.h(790,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addPressureBoundary2N(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(192,7) inlined into boundaryInstantiator3D.h(797,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator3D.h(797,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(190,3) inlined into boundaryInstantiator3D.h(797,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(191,5) inlined into boundaryInstantiator3D.h(797,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addPressureBoundary2P(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(192,7) inlined into boundaryInstantiator3D.h(804,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator3D.h(804,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(190,3) inlined into boundaryInstantiator3D.h(804,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(191,5) inlined into boundaryInstantiator3D.h(804,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge0NN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7) inlined into boundaryInstantiator3D.h(812,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3) inlined into boundaryInstantiator3D.h(812,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5) inlined into boundaryInstantiator3D.h(812,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge0NP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7) inlined into boundaryInstantiator3D.h(819,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3) inlined into boundaryInstantiator3D.h(819,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5) inlined into boundaryInstantiator3D.h(819,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge0PN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7) inlined into boundaryInstantiator3D.h(826,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3) inlined into boundaryInstantiator3D.h(826,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5) inlined into boundaryInstantiator3D.h(826,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge0PP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7) inlined into boundaryInstantiator3D.h(833,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3) inlined into boundaryInstantiator3D.h(833,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5) inlined into boundaryInstantiator3D.h(833,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge1NN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7) inlined into boundaryInstantiator3D.h(840,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3) inlined into boundaryInstantiator3D.h(840,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5) inlined into boundaryInstantiator3D.h(840,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge1NP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7) inlined into boundaryInstantiator3D.h(847,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3) inlined into boundaryInstantiator3D.h(847,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5) inlined into boundaryInstantiator3D.h(847,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge1PN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7) inlined into boundaryInstantiator3D.h(854,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3) inlined into boundaryInstantiator3D.h(854,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5) inlined into boundaryInstantiator3D.h(854,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge1PP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7) inlined into boundaryInstantiator3D.h(861,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3) inlined into boundaryInstantiator3D.h(861,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5) inlined into boundaryInstantiator3D.h(861,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge2NN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7) inlined into boundaryInstantiator3D.h(868,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3) inlined into boundaryInstantiator3D.h(868,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5) inlined into boundaryInstantiator3D.h(868,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge2NP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7) inlined into boundaryInstantiator3D.h(875,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3) inlined into boundaryInstantiator3D.h(875,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5) inlined into boundaryInstantiator3D.h(875,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge2PN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7) inlined into boundaryInstantiator3D.h(882,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3) inlined into boundaryInstantiator3D.h(882,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5) inlined into boundaryInstantiator3D.h(882,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge2PP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7) inlined into boundaryInstantiator3D.h(889,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3) inlined into boundaryInstantiator3D.h(889,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5) inlined into boundaryInstantiator3D.h(889,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge0NN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7) inlined into boundaryInstantiator3D.h(898,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(898,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(898,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3) inlined into boundaryInstantiator3D.h(898,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5) inlined into boundaryInstantiator3D.h(898,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge0NP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7) inlined into boundaryInstantiator3D.h(905,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(905,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(905,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3) inlined into boundaryInstantiator3D.h(905,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5) inlined into boundaryInstantiator3D.h(905,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge0PN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7) inlined into boundaryInstantiator3D.h(912,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(912,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(912,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3) inlined into boundaryInstantiator3D.h(912,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5) inlined into boundaryInstantiator3D.h(912,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge0PP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7) inlined into boundaryInstantiator3D.h(919,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(919,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(919,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3) inlined into boundaryInstantiator3D.h(919,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5) inlined into boundaryInstantiator3D.h(919,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge1NN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7) inlined into boundaryInstantiator3D.h(926,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(926,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(926,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3) inlined into boundaryInstantiator3D.h(926,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5) inlined into boundaryInstantiator3D.h(926,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge1NP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7) inlined into boundaryInstantiator3D.h(933,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(933,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(933,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3) inlined into boundaryInstantiator3D.h(933,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5) inlined into boundaryInstantiator3D.h(933,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge1PN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7) inlined into boundaryInstantiator3D.h(940,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(940,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(940,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3) inlined into boundaryInstantiator3D.h(940,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5) inlined into boundaryInstantiator3D.h(940,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge1PP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7) inlined into boundaryInstantiator3D.h(947,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(947,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(947,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3) inlined into boundaryInstantiator3D.h(947,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5) inlined into boundaryInstantiator3D.h(947,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge2NN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7) inlined into boundaryInstantiator3D.h(954,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(954,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(954,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3) inlined into boundaryInstantiator3D.h(954,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5) inlined into boundaryInstantiator3D.h(954,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge2NP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7) inlined into boundaryInstantiator3D.h(961,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(961,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(961,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3) inlined into boundaryInstantiator3D.h(961,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5) inlined into boundaryInstantiator3D.h(961,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge2PN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7) inlined into boundaryInstantiator3D.h(968,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(968,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(968,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3) inlined into boundaryInstantiator3D.h(968,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5) inlined into boundaryInstantiator3D.h(968,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge2PP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7) inlined into boundaryInstantiator3D.h(975,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(975,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(975,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3) inlined into boundaryInstantiator3D.h(975,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5) inlined into boundaryInstantiator3D.h(975,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityCornerNNN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1040,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1040,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1040,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityCornerNNP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1047,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1047,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1047,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityCornerNPN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1054,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1054,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1054,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityCornerNPP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1061,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1061,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1061,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityCornerPNN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1068,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1068,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1068,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityCornerPNP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1075,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1075,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1075,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityCornerPPN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1082,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1082,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1082,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityCornerPPP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1089,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1089,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1089,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addVelocityBoundary(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, olb::BlockGeometryStatistics3D *, int, int, int, int, int, int, double, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(344,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(342,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(343,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addVelocityBoundary<0, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(161,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(164,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(159,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(160,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addVelocityBoundary<0, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(161,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(164,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(159,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(160,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addVelocityBoundary<1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(161,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(164,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(159,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(160,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addVelocityBoundary<1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(161,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(164,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(159,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(160,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addVelocityBoundary<2, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(161,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(164,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(159,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(160,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addVelocityBoundary<2, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(161,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(164,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(159,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(160,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityCorner<1, 1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityCorner<1, 1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityCorner<1, -1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityCorner<-1, 1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityCorner<-1, -1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityCorner<-1, 1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityCorner<-1, -1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge<0, 1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge<0, -1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge<0, 1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge<0, -1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge<1, 1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge<1, 1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge<1, -1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge<1, -1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge<2, 1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge<2, -1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge<2, 1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge<2, -1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge<0, 1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge<0, -1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge<0, 1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge<0, -1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge<1, 1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge<1, 1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge<1, -1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge<1, -1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge<2, 1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge<2, -1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge<2, 1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge<2, -1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addPressureBoundary(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, olb::BlockGeometryStatistics3D *, int, int, int, int, int, int, double, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(663,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(661,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(662,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addPressureBoundary<0, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(192,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator3D.h(195,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(190,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(191,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addPressureBoundary<0, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(192,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator3D.h(195,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(190,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(191,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addPressureBoundary<1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(192,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator3D.h(195,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(190,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(191,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addPressureBoundary<1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(192,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator3D.h(195,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(190,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(191,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addPressureBoundary<2, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(192,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator3D.h(195,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(190,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(191,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addPressureBoundary<2, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::InterpolationBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(192,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator3D.h(195,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(190,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(191,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::RegularizedBM<double, olb::descriptors::D3Q19Descriptor, 0, -1>::computeStress(const olb::RegularizedBM<double, olb::descriptors::D3Q19Descriptor, 0, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double, const double *, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(92,3) inlined into momentaOnBoundaries.hh(384,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.730 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(384,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(384,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at lbHelpers.h(372,50) inlined into momentaOnBoundaries.hh(384,3)
<Peeled>
LOOP END

LOOP BEGIN at lbHelpers.h(372,50) inlined into momentaOnBoundaries.hh(384,3)
   remark #15399: vectorization support: unroll factor set to 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 7 
   remark #15459: masked indexed (or scatter) stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 60 
   remark #15477: vector loop cost: 42.370 
   remark #15478: estimated potential speedup: 1.380 
   remark #15479: lightweight vector operations: 66 
   remark #15487: type converts: 3 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at lbHelpers.h(372,50) inlined into momentaOnBoundaries.hh(384,3)
<Remainder>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at lbHelpers.h(372,50) inlined into momentaOnBoundaries.hh(384,3)
<Remainder>
LOOP END

LOOP BEGIN at lbHelpers.h(378,50) inlined into momentaOnBoundaries.hh(384,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between fNeq line 381 and fNeq line 384
LOOP END

LOOP BEGIN at lbHelpers.h(391,5) inlined into momentaOnBoundaries.hh(384,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at lbHelpers.h(392,7) inlined into momentaOnBoundaries.hh(384,3)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at lbHelpers.h(394,54) inlined into momentaOnBoundaries.hh(384,3)
      <Peeled>
      LOOP END

      LOOP BEGIN at lbHelpers.h(394,54) inlined into momentaOnBoundaries.hh(384,3)
         remark #15399: vectorization support: unroll factor set to 2
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15458: masked indexed (or gather) loads: 3 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 17 
         remark #15477: vector loop cost: 12.370 
         remark #15478: estimated potential speedup: 1.330 
         remark #15479: lightweight vector operations: 24 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at lbHelpers.h(394,54) inlined into momentaOnBoundaries.hh(384,3)
      <Remainder>
      LOOP END

      LOOP BEGIN at lbHelpers.h(400,54) inlined into momentaOnBoundaries.hh(384,3)
      <Peeled>
      LOOP END

      LOOP BEGIN at lbHelpers.h(400,54) inlined into momentaOnBoundaries.hh(384,3)
         remark #15399: vectorization support: unroll factor set to 2
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15458: masked indexed (or gather) loads: 3 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 21 
         remark #15477: vector loop cost: 13.120 
         remark #15478: estimated potential speedup: 1.530 
         remark #15479: lightweight vector operations: 27 
         remark #15487: type converts: 2 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at lbHelpers.h(400,54) inlined into momentaOnBoundaries.hh(384,3)
      <Remainder>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 0, -1>::computeRho(const olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 0, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(155,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(158,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 0, -1>::computeU(const olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 0, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(201,3) inlined into momentaOnBoundaries.hh(181,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between u_ line 202 and this line 202
LOOP END
===========================================================================

Begin optimization report for: olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 0, -1>::computeJ(const olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 0, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(191,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between j_ line 192 and this line 192
LOOP END
===========================================================================

Begin optimization report for: olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 0, -1>::defineU(olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 0, -1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries.hh(218,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u_ line 227
LOOP END
===========================================================================

Begin optimization report for: olb::RegularizedBM<double, olb::descriptors::D3Q19Descriptor, 0, 1>::computeStress(const olb::RegularizedBM<double, olb::descriptors::D3Q19Descriptor, 0, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double, const double *, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(92,3) inlined into momentaOnBoundaries.hh(384,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.730 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(384,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(384,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at lbHelpers.h(372,50) inlined into momentaOnBoundaries.hh(384,3)
<Peeled>
LOOP END

LOOP BEGIN at lbHelpers.h(372,50) inlined into momentaOnBoundaries.hh(384,3)
   remark #15399: vectorization support: unroll factor set to 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 7 
   remark #15459: masked indexed (or scatter) stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 60 
   remark #15477: vector loop cost: 42.370 
   remark #15478: estimated potential speedup: 1.380 
   remark #15479: lightweight vector operations: 66 
   remark #15487: type converts: 3 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at lbHelpers.h(372,50) inlined into momentaOnBoundaries.hh(384,3)
<Remainder>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at lbHelpers.h(372,50) inlined into momentaOnBoundaries.hh(384,3)
<Remainder>
LOOP END

LOOP BEGIN at lbHelpers.h(378,50) inlined into momentaOnBoundaries.hh(384,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between fNeq line 381 and fNeq line 384
LOOP END

LOOP BEGIN at lbHelpers.h(391,5) inlined into momentaOnBoundaries.hh(384,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at lbHelpers.h(392,7) inlined into momentaOnBoundaries.hh(384,3)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at lbHelpers.h(394,54) inlined into momentaOnBoundaries.hh(384,3)
      <Peeled>
      LOOP END

      LOOP BEGIN at lbHelpers.h(394,54) inlined into momentaOnBoundaries.hh(384,3)
         remark #15399: vectorization support: unroll factor set to 2
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15458: masked indexed (or gather) loads: 3 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 17 
         remark #15477: vector loop cost: 12.370 
         remark #15478: estimated potential speedup: 1.330 
         remark #15479: lightweight vector operations: 24 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at lbHelpers.h(394,54) inlined into momentaOnBoundaries.hh(384,3)
      <Remainder>
      LOOP END

      LOOP BEGIN at lbHelpers.h(400,54) inlined into momentaOnBoundaries.hh(384,3)
      <Peeled>
      LOOP END

      LOOP BEGIN at lbHelpers.h(400,54) inlined into momentaOnBoundaries.hh(384,3)
         remark #15399: vectorization support: unroll factor set to 2
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15458: masked indexed (or gather) loads: 3 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 21 
         remark #15477: vector loop cost: 13.120 
         remark #15478: estimated potential speedup: 1.530 
         remark #15479: lightweight vector operations: 27 
         remark #15487: type converts: 2 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at lbHelpers.h(400,54) inlined into momentaOnBoundaries.hh(384,3)
      <Remainder>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 0, 1>::computeRho(const olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 0, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(155,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(158,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 0, 1>::computeU(const olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 0, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(201,3) inlined into momentaOnBoundaries.hh(181,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between u_ line 202 and this line 202
LOOP END
===========================================================================

Begin optimization report for: olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 0, 1>::computeJ(const olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 0, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(191,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between j_ line 192 and this line 192
LOOP END
===========================================================================

Begin optimization report for: olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 0, 1>::defineU(olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 0, 1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries.hh(218,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u_ line 227
LOOP END
===========================================================================

Begin optimization report for: olb::RegularizedBM<double, olb::descriptors::D3Q19Descriptor, 1, -1>::computeStress(const olb::RegularizedBM<double, olb::descriptors::D3Q19Descriptor, 1, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double, const double *, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(92,3) inlined into momentaOnBoundaries.hh(384,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.730 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(384,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(384,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at lbHelpers.h(372,50) inlined into momentaOnBoundaries.hh(384,3)
<Peeled>
LOOP END

LOOP BEGIN at lbHelpers.h(372,50) inlined into momentaOnBoundaries.hh(384,3)
   remark #15399: vectorization support: unroll factor set to 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 7 
   remark #15459: masked indexed (or scatter) stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 60 
   remark #15477: vector loop cost: 42.370 
   remark #15478: estimated potential speedup: 1.380 
   remark #15479: lightweight vector operations: 66 
   remark #15487: type converts: 3 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at lbHelpers.h(372,50) inlined into momentaOnBoundaries.hh(384,3)
<Remainder>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at lbHelpers.h(372,50) inlined into momentaOnBoundaries.hh(384,3)
<Remainder>
LOOP END

LOOP BEGIN at lbHelpers.h(378,50) inlined into momentaOnBoundaries.hh(384,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between fNeq line 381 and fNeq line 384
LOOP END

LOOP BEGIN at lbHelpers.h(391,5) inlined into momentaOnBoundaries.hh(384,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at lbHelpers.h(392,7) inlined into momentaOnBoundaries.hh(384,3)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at lbHelpers.h(394,54) inlined into momentaOnBoundaries.hh(384,3)
      <Peeled>
      LOOP END

      LOOP BEGIN at lbHelpers.h(394,54) inlined into momentaOnBoundaries.hh(384,3)
         remark #15399: vectorization support: unroll factor set to 2
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15458: masked indexed (or gather) loads: 3 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 17 
         remark #15477: vector loop cost: 12.370 
         remark #15478: estimated potential speedup: 1.330 
         remark #15479: lightweight vector operations: 24 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at lbHelpers.h(394,54) inlined into momentaOnBoundaries.hh(384,3)
      <Remainder>
      LOOP END

      LOOP BEGIN at lbHelpers.h(400,54) inlined into momentaOnBoundaries.hh(384,3)
      <Peeled>
      LOOP END

      LOOP BEGIN at lbHelpers.h(400,54) inlined into momentaOnBoundaries.hh(384,3)
         remark #15399: vectorization support: unroll factor set to 2
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15458: masked indexed (or gather) loads: 3 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 21 
         remark #15477: vector loop cost: 13.120 
         remark #15478: estimated potential speedup: 1.530 
         remark #15479: lightweight vector operations: 27 
         remark #15487: type converts: 2 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at lbHelpers.h(400,54) inlined into momentaOnBoundaries.hh(384,3)
      <Remainder>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 1, -1>::computeRho(const olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 1, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(155,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(158,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 1, -1>::computeU(const olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 1, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(201,3) inlined into momentaOnBoundaries.hh(181,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between u_ line 202 and this line 202
LOOP END
===========================================================================

Begin optimization report for: olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 1, -1>::computeJ(const olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 1, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(191,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between j_ line 192 and this line 192
LOOP END
===========================================================================

Begin optimization report for: olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 1, -1>::defineU(olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 1, -1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries.hh(218,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u_ line 227
LOOP END
===========================================================================

Begin optimization report for: olb::RegularizedBM<double, olb::descriptors::D3Q19Descriptor, 1, 1>::computeStress(const olb::RegularizedBM<double, olb::descriptors::D3Q19Descriptor, 1, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double, const double *, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(92,3) inlined into momentaOnBoundaries.hh(384,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.730 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(384,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(384,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at lbHelpers.h(372,50) inlined into momentaOnBoundaries.hh(384,3)
<Peeled>
LOOP END

LOOP BEGIN at lbHelpers.h(372,50) inlined into momentaOnBoundaries.hh(384,3)
   remark #15399: vectorization support: unroll factor set to 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 7 
   remark #15459: masked indexed (or scatter) stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 60 
   remark #15477: vector loop cost: 42.370 
   remark #15478: estimated potential speedup: 1.380 
   remark #15479: lightweight vector operations: 66 
   remark #15487: type converts: 3 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at lbHelpers.h(372,50) inlined into momentaOnBoundaries.hh(384,3)
<Remainder>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at lbHelpers.h(372,50) inlined into momentaOnBoundaries.hh(384,3)
<Remainder>
LOOP END

LOOP BEGIN at lbHelpers.h(378,50) inlined into momentaOnBoundaries.hh(384,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between fNeq line 381 and fNeq line 384
LOOP END

LOOP BEGIN at lbHelpers.h(391,5) inlined into momentaOnBoundaries.hh(384,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at lbHelpers.h(392,7) inlined into momentaOnBoundaries.hh(384,3)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at lbHelpers.h(394,54) inlined into momentaOnBoundaries.hh(384,3)
      <Peeled>
      LOOP END

      LOOP BEGIN at lbHelpers.h(394,54) inlined into momentaOnBoundaries.hh(384,3)
         remark #15399: vectorization support: unroll factor set to 2
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15458: masked indexed (or gather) loads: 3 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 17 
         remark #15477: vector loop cost: 12.370 
         remark #15478: estimated potential speedup: 1.330 
         remark #15479: lightweight vector operations: 24 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at lbHelpers.h(394,54) inlined into momentaOnBoundaries.hh(384,3)
      <Remainder>
      LOOP END

      LOOP BEGIN at lbHelpers.h(400,54) inlined into momentaOnBoundaries.hh(384,3)
      <Peeled>
      LOOP END

      LOOP BEGIN at lbHelpers.h(400,54) inlined into momentaOnBoundaries.hh(384,3)
         remark #15399: vectorization support: unroll factor set to 2
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15458: masked indexed (or gather) loads: 3 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 21 
         remark #15477: vector loop cost: 13.120 
         remark #15478: estimated potential speedup: 1.530 
         remark #15479: lightweight vector operations: 27 
         remark #15487: type converts: 2 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at lbHelpers.h(400,54) inlined into momentaOnBoundaries.hh(384,3)
      <Remainder>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 1, 1>::computeRho(const olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 1, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(155,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(158,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 1, 1>::computeU(const olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 1, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(201,3) inlined into momentaOnBoundaries.hh(181,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between u_ line 202 and this line 202
LOOP END
===========================================================================

Begin optimization report for: olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 1, 1>::computeJ(const olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 1, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(191,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between j_ line 192 and this line 192
LOOP END
===========================================================================

Begin optimization report for: olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 1, 1>::defineU(olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 1, 1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries.hh(218,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u_ line 227
LOOP END
===========================================================================

Begin optimization report for: olb::RegularizedBM<double, olb::descriptors::D3Q19Descriptor, 2, -1>::computeStress(const olb::RegularizedBM<double, olb::descriptors::D3Q19Descriptor, 2, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double, const double *, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(92,3) inlined into momentaOnBoundaries.hh(384,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.730 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(384,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(384,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at lbHelpers.h(372,50) inlined into momentaOnBoundaries.hh(384,3)
<Peeled>
LOOP END

LOOP BEGIN at lbHelpers.h(372,50) inlined into momentaOnBoundaries.hh(384,3)
   remark #15399: vectorization support: unroll factor set to 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 7 
   remark #15459: masked indexed (or scatter) stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 60 
   remark #15477: vector loop cost: 42.370 
   remark #15478: estimated potential speedup: 1.380 
   remark #15479: lightweight vector operations: 66 
   remark #15487: type converts: 3 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at lbHelpers.h(372,50) inlined into momentaOnBoundaries.hh(384,3)
<Remainder>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at lbHelpers.h(372,50) inlined into momentaOnBoundaries.hh(384,3)
<Remainder>
LOOP END

LOOP BEGIN at lbHelpers.h(378,50) inlined into momentaOnBoundaries.hh(384,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between fNeq line 381 and fNeq line 384
LOOP END

LOOP BEGIN at lbHelpers.h(391,5) inlined into momentaOnBoundaries.hh(384,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at lbHelpers.h(392,7) inlined into momentaOnBoundaries.hh(384,3)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at lbHelpers.h(394,54) inlined into momentaOnBoundaries.hh(384,3)
      <Peeled>
      LOOP END

      LOOP BEGIN at lbHelpers.h(394,54) inlined into momentaOnBoundaries.hh(384,3)
         remark #15399: vectorization support: unroll factor set to 2
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15458: masked indexed (or gather) loads: 3 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 17 
         remark #15477: vector loop cost: 12.370 
         remark #15478: estimated potential speedup: 1.330 
         remark #15479: lightweight vector operations: 24 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at lbHelpers.h(394,54) inlined into momentaOnBoundaries.hh(384,3)
      <Remainder>
      LOOP END

      LOOP BEGIN at lbHelpers.h(400,54) inlined into momentaOnBoundaries.hh(384,3)
      <Peeled>
      LOOP END

      LOOP BEGIN at lbHelpers.h(400,54) inlined into momentaOnBoundaries.hh(384,3)
         remark #15399: vectorization support: unroll factor set to 2
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15458: masked indexed (or gather) loads: 3 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 21 
         remark #15477: vector loop cost: 13.120 
         remark #15478: estimated potential speedup: 1.530 
         remark #15479: lightweight vector operations: 27 
         remark #15487: type converts: 2 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at lbHelpers.h(400,54) inlined into momentaOnBoundaries.hh(384,3)
      <Remainder>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 2, -1>::computeRho(const olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 2, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(155,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(158,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 2, -1>::computeU(const olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 2, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(201,3) inlined into momentaOnBoundaries.hh(181,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between u_ line 202 and this line 202
LOOP END
===========================================================================

Begin optimization report for: olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 2, -1>::computeJ(const olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 2, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(191,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between j_ line 192 and this line 192
LOOP END
===========================================================================

Begin optimization report for: olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 2, -1>::defineU(olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 2, -1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries.hh(218,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u_ line 227
LOOP END
===========================================================================

Begin optimization report for: olb::RegularizedBM<double, olb::descriptors::D3Q19Descriptor, 2, 1>::computeStress(const olb::RegularizedBM<double, olb::descriptors::D3Q19Descriptor, 2, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double, const double *, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(92,3) inlined into momentaOnBoundaries.hh(384,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.730 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(384,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(384,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at lbHelpers.h(372,50) inlined into momentaOnBoundaries.hh(384,3)
<Peeled>
LOOP END

LOOP BEGIN at lbHelpers.h(372,50) inlined into momentaOnBoundaries.hh(384,3)
   remark #15399: vectorization support: unroll factor set to 2
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 7 
   remark #15459: masked indexed (or scatter) stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 60 
   remark #15477: vector loop cost: 42.370 
   remark #15478: estimated potential speedup: 1.380 
   remark #15479: lightweight vector operations: 66 
   remark #15487: type converts: 3 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at lbHelpers.h(372,50) inlined into momentaOnBoundaries.hh(384,3)
<Remainder>
   remark #15301: REMAINDER LOOP WAS VECTORIZED
LOOP END

LOOP BEGIN at lbHelpers.h(372,50) inlined into momentaOnBoundaries.hh(384,3)
<Remainder>
LOOP END

LOOP BEGIN at lbHelpers.h(378,50) inlined into momentaOnBoundaries.hh(384,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed OUTPUT dependence between fNeq line 381 and fNeq line 384
LOOP END

LOOP BEGIN at lbHelpers.h(391,5) inlined into momentaOnBoundaries.hh(384,3)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at lbHelpers.h(392,7) inlined into momentaOnBoundaries.hh(384,3)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at lbHelpers.h(394,54) inlined into momentaOnBoundaries.hh(384,3)
      <Peeled>
      LOOP END

      LOOP BEGIN at lbHelpers.h(394,54) inlined into momentaOnBoundaries.hh(384,3)
         remark #15399: vectorization support: unroll factor set to 2
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15458: masked indexed (or gather) loads: 3 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 17 
         remark #15477: vector loop cost: 12.370 
         remark #15478: estimated potential speedup: 1.330 
         remark #15479: lightweight vector operations: 24 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at lbHelpers.h(394,54) inlined into momentaOnBoundaries.hh(384,3)
      <Remainder>
      LOOP END

      LOOP BEGIN at lbHelpers.h(400,54) inlined into momentaOnBoundaries.hh(384,3)
      <Peeled>
      LOOP END

      LOOP BEGIN at lbHelpers.h(400,54) inlined into momentaOnBoundaries.hh(384,3)
         remark #15399: vectorization support: unroll factor set to 2
         remark #15300: LOOP WAS VECTORIZED
         remark #15442: entire loop may be executed in remainder
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15458: masked indexed (or gather) loads: 3 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 21 
         remark #15477: vector loop cost: 13.120 
         remark #15478: estimated potential speedup: 1.530 
         remark #15479: lightweight vector operations: 27 
         remark #15487: type converts: 2 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at lbHelpers.h(400,54) inlined into momentaOnBoundaries.hh(384,3)
      <Remainder>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 2, 1>::computeRho(const olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 2, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(155,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(158,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 2, 1>::computeU(const olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 2, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(201,3) inlined into momentaOnBoundaries.hh(181,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between u_ line 202 and this line 202
LOOP END
===========================================================================

Begin optimization report for: olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 2, 1>::computeJ(const olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 2, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(191,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between j_ line 192 and this line 192
LOOP END
===========================================================================

Begin optimization report for: olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 2, 1>::defineU(olb::VelocityBM<double, olb::descriptors::D3Q19Descriptor, 2, 1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries.hh(218,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u_ line 227
LOOP END
===========================================================================

Begin optimization report for: olb::PressureBM<double, olb::descriptors::D3Q19Descriptor, 0, -1>::computeU(const olb::PressureBM<double, olb::descriptors::D3Q19Descriptor, 0, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(287,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between u_ line 288 and this line 288
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(294,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(297,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(299,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(299,48)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(304,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(304,48)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::PressureBM<double, olb::descriptors::D3Q19Descriptor, 0, -1>::computeJ(const olb::PressureBM<double, olb::descriptors::D3Q19Descriptor, 0, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(320,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 8 
   remark #15477: vector loop cost: 5.000 
   remark #15478: estimated potential speedup: 0.920 
   remark #15479: lightweight vector operations: 3 
   remark #15480: medium-overhead vector operations: 1 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::PressureBM<double, olb::descriptors::D3Q19Descriptor, 0, -1>::defineU(olb::PressureBM<double, olb::descriptors::D3Q19Descriptor, 0, -1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(345,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 347 and u_ line 347
LOOP END
===========================================================================

Begin optimization report for: olb::PressureBM<double, olb::descriptors::D3Q19Descriptor, 0, 1>::computeU(const olb::PressureBM<double, olb::descriptors::D3Q19Descriptor, 0, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(287,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between u_ line 288 and this line 288
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(294,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(297,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(299,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(299,48)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(304,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(304,48)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::PressureBM<double, olb::descriptors::D3Q19Descriptor, 0, 1>::computeJ(const olb::PressureBM<double, olb::descriptors::D3Q19Descriptor, 0, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(320,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 8 
   remark #15477: vector loop cost: 5.000 
   remark #15478: estimated potential speedup: 0.920 
   remark #15479: lightweight vector operations: 3 
   remark #15480: medium-overhead vector operations: 1 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::PressureBM<double, olb::descriptors::D3Q19Descriptor, 0, 1>::defineU(olb::PressureBM<double, olb::descriptors::D3Q19Descriptor, 0, 1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(345,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 347 and u_ line 347
LOOP END
===========================================================================

Begin optimization report for: olb::PressureBM<double, olb::descriptors::D3Q19Descriptor, 1, -1>::computeU(const olb::PressureBM<double, olb::descriptors::D3Q19Descriptor, 1, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(287,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between u_ line 288 and this line 288
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(294,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(297,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(299,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(299,48)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(304,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(304,48)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::PressureBM<double, olb::descriptors::D3Q19Descriptor, 1, -1>::computeJ(const olb::PressureBM<double, olb::descriptors::D3Q19Descriptor, 1, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(320,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 8 
   remark #15477: vector loop cost: 5.000 
   remark #15478: estimated potential speedup: 0.920 
   remark #15479: lightweight vector operations: 3 
   remark #15480: medium-overhead vector operations: 1 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::PressureBM<double, olb::descriptors::D3Q19Descriptor, 1, -1>::defineU(olb::PressureBM<double, olb::descriptors::D3Q19Descriptor, 1, -1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(345,3)
   remark #15423: loop was not vectorized: has only one iteration
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(345,3)
   remark #15423: loop was not vectorized: has only one iteration
LOOP END
===========================================================================

Begin optimization report for: olb::PressureBM<double, olb::descriptors::D3Q19Descriptor, 1, 1>::computeU(const olb::PressureBM<double, olb::descriptors::D3Q19Descriptor, 1, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(287,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between u_ line 288 and this line 288
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(294,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(297,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(299,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(299,48)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(304,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(304,48)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::PressureBM<double, olb::descriptors::D3Q19Descriptor, 1, 1>::computeJ(const olb::PressureBM<double, olb::descriptors::D3Q19Descriptor, 1, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(320,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 8 
   remark #15477: vector loop cost: 5.000 
   remark #15478: estimated potential speedup: 0.920 
   remark #15479: lightweight vector operations: 3 
   remark #15480: medium-overhead vector operations: 1 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::PressureBM<double, olb::descriptors::D3Q19Descriptor, 1, 1>::defineU(olb::PressureBM<double, olb::descriptors::D3Q19Descriptor, 1, 1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(345,3)
   remark #15423: loop was not vectorized: has only one iteration
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(345,3)
   remark #15423: loop was not vectorized: has only one iteration
LOOP END
===========================================================================

Begin optimization report for: olb::PressureBM<double, olb::descriptors::D3Q19Descriptor, 2, -1>::computeU(const olb::PressureBM<double, olb::descriptors::D3Q19Descriptor, 2, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(287,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between u_ line 288 and this line 288
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(294,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(297,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(299,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(299,48)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(304,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(304,48)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::PressureBM<double, olb::descriptors::D3Q19Descriptor, 2, -1>::computeJ(const olb::PressureBM<double, olb::descriptors::D3Q19Descriptor, 2, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(320,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 8 
   remark #15477: vector loop cost: 5.000 
   remark #15478: estimated potential speedup: 0.920 
   remark #15479: lightweight vector operations: 3 
   remark #15480: medium-overhead vector operations: 1 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::PressureBM<double, olb::descriptors::D3Q19Descriptor, 2, -1>::defineU(olb::PressureBM<double, olb::descriptors::D3Q19Descriptor, 2, -1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(345,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 347 and u_ line 347
LOOP END
===========================================================================

Begin optimization report for: olb::PressureBM<double, olb::descriptors::D3Q19Descriptor, 2, 1>::computeU(const olb::PressureBM<double, olb::descriptors::D3Q19Descriptor, 2, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(287,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between u_ line 288 and this line 288
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(294,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries.hh(297,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(299,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(299,48)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(304,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(304,48)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::PressureBM<double, olb::descriptors::D3Q19Descriptor, 2, 1>::computeJ(const olb::PressureBM<double, olb::descriptors::D3Q19Descriptor, 2, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(320,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 8 
   remark #15477: vector loop cost: 5.000 
   remark #15478: estimated potential speedup: 0.920 
   remark #15479: lightweight vector operations: 3 
   remark #15480: medium-overhead vector operations: 1 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::PressureBM<double, olb::descriptors::D3Q19Descriptor, 2, 1>::defineU(olb::PressureBM<double, olb::descriptors::D3Q19Descriptor, 2, 1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(345,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 347 and u_ line 347
LOOP END
===========================================================================

Begin optimization report for: olb::FixedVelocityBM<double, olb::descriptors::D3Q19Descriptor>::computeU(const olb::FixedVelocityBM<double, olb::descriptors::D3Q19Descriptor> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(397,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between u line 398 and this line 398
LOOP END
===========================================================================

Begin optimization report for: olb::FixedVelocityBM<double, olb::descriptors::D3Q19Descriptor>::computeJ(const olb::FixedVelocityBM<double, olb::descriptors::D3Q19Descriptor> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(406,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between j line 407 and this line 407
LOOP END
===========================================================================

Begin optimization report for: olb::FixedVelocityBM<double, olb::descriptors::D3Q19Descriptor>::defineU(olb::FixedVelocityBM<double, olb::descriptors::D3Q19Descriptor> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(449,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 450 and u line 450
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, -1, -1>::computeRho(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, -1, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,20)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,20)
<Remainder>
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,48)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,48)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, -1, -1>::computeU(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, -1, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(201,3) inlined into momentaOnBoundaries3D.hh(65,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between u line 202 and this line 202
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, -1, -1>::computeJ(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, -1, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(191,3) inlined into momentaOnBoundaries3D.hh(74,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between j line 192 and this line 192
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, -1, -1>::defineU(olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, -1, -1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(97,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(98,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, -1, -1>::defineAllMomenta(olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, -1, -1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double, const double *, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(118,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(119,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, -1, -1>::computeStress(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, -1, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double, const double *, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(92,3) inlined into momentaOnBoundaries3D.hh(132,12)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.730 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries3D.hh(135,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between f line 140 and f line 140
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, -1, 1>::computeRho(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, -1, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,20)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,20)
<Remainder>
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,48)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,48)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, -1, 1>::computeU(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, -1, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(201,3) inlined into momentaOnBoundaries3D.hh(65,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between u line 202 and this line 202
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, -1, 1>::computeJ(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, -1, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(191,3) inlined into momentaOnBoundaries3D.hh(74,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between j line 192 and this line 192
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, -1, 1>::defineU(olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, -1, 1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(97,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(98,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, -1, 1>::defineAllMomenta(olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, -1, 1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double, const double *, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(118,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(119,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, -1, 1>::computeStress(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, -1, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double, const double *, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(92,3) inlined into momentaOnBoundaries3D.hh(132,12)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.730 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries3D.hh(135,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between f line 140 and f line 140
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, 1, -1>::computeRho(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, 1, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,20)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,20)
<Remainder>
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,48)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,48)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, 1, -1>::computeU(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, 1, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(201,3) inlined into momentaOnBoundaries3D.hh(65,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between u line 202 and this line 202
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, 1, -1>::computeJ(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, 1, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(191,3) inlined into momentaOnBoundaries3D.hh(74,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between j line 192 and this line 192
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, 1, -1>::defineU(olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, 1, -1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(97,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(98,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, 1, -1>::defineAllMomenta(olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, 1, -1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double, const double *, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(118,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(119,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, 1, -1>::computeStress(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, 1, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double, const double *, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(92,3) inlined into momentaOnBoundaries3D.hh(132,12)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.730 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries3D.hh(135,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between f line 140 and f line 140
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, 1, 1>::computeRho(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, 1, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,20)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,20)
<Remainder>
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,48)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,48)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, 1, 1>::computeU(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, 1, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(201,3) inlined into momentaOnBoundaries3D.hh(65,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between u line 202 and this line 202
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, 1, 1>::computeJ(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, 1, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(191,3) inlined into momentaOnBoundaries3D.hh(74,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between j line 192 and this line 192
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, 1, 1>::defineU(olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, 1, 1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(97,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(98,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, 1, 1>::defineAllMomenta(olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, 1, 1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double, const double *, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(118,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(119,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, 1, 1>::computeStress(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 0, 1, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double, const double *, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(92,3) inlined into momentaOnBoundaries3D.hh(132,12)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.730 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries3D.hh(135,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between f line 140 and f line 140
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, -1>::computeRho(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,20)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,20)
<Remainder>
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,48)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,48)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, -1>::computeU(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(201,3) inlined into momentaOnBoundaries3D.hh(65,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between u line 202 and this line 202
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, -1>::computeJ(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(191,3) inlined into momentaOnBoundaries3D.hh(74,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between j line 192 and this line 192
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, -1>::defineU(olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, -1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(97,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(98,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, -1>::defineAllMomenta(olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, -1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double, const double *, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(118,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(119,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, -1>::computeStress(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double, const double *, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(92,3) inlined into momentaOnBoundaries3D.hh(132,12)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.730 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries3D.hh(135,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between f line 140 and f line 140
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, 1>::computeRho(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,20)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,20)
<Remainder>
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,48)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,48)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, 1>::computeU(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(201,3) inlined into momentaOnBoundaries3D.hh(65,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between u line 202 and this line 202
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, 1>::computeJ(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(191,3) inlined into momentaOnBoundaries3D.hh(74,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between j line 192 and this line 192
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, 1>::defineU(olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, 1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(97,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(98,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, 1>::defineAllMomenta(olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, 1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double, const double *, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(118,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(119,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, 1>::computeStress(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double, const double *, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(92,3) inlined into momentaOnBoundaries3D.hh(132,12)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.730 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries3D.hh(135,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between f line 140 and f line 140
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, -1>::computeRho(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,20)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,20)
<Remainder>
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,48)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,48)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, -1>::computeU(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(201,3) inlined into momentaOnBoundaries3D.hh(65,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between u line 202 and this line 202
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, -1>::computeJ(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(191,3) inlined into momentaOnBoundaries3D.hh(74,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between j line 192 and this line 192
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, -1>::defineU(olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, -1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(97,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(98,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, -1>::defineAllMomenta(olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, -1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double, const double *, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(118,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(119,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, -1>::computeStress(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double, const double *, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(92,3) inlined into momentaOnBoundaries3D.hh(132,12)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.730 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries3D.hh(135,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between f line 140 and f line 140
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, 1>::computeRho(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,20)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,20)
<Remainder>
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,48)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,48)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, 1>::computeU(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(201,3) inlined into momentaOnBoundaries3D.hh(65,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between u line 202 and this line 202
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, 1>::computeJ(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(191,3) inlined into momentaOnBoundaries3D.hh(74,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between j line 192 and this line 192
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, 1>::defineU(olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, 1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(97,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(98,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, 1>::defineAllMomenta(olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, 1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double, const double *, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(118,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(119,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, 1>::computeStress(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double, const double *, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(92,3) inlined into momentaOnBoundaries3D.hh(132,12)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.730 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries3D.hh(135,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between f line 140 and f line 140
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, -1, -1>::computeRho(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, -1, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,20)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,20)
<Remainder>
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,48)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,48)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, -1, -1>::computeU(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, -1, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(201,3) inlined into momentaOnBoundaries3D.hh(65,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between u line 202 and this line 202
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, -1, -1>::computeJ(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, -1, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(191,3) inlined into momentaOnBoundaries3D.hh(74,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between j line 192 and this line 192
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, -1, -1>::defineU(olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, -1, -1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(97,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(98,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, -1, -1>::defineAllMomenta(olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, -1, -1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double, const double *, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(118,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(119,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, -1, -1>::computeStress(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, -1, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double, const double *, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(92,3) inlined into momentaOnBoundaries3D.hh(132,12)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.730 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries3D.hh(135,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between f line 140 and f line 140
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, -1, 1>::computeRho(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, -1, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,20)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,20)
<Remainder>
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,48)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,48)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, -1, 1>::computeU(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, -1, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(201,3) inlined into momentaOnBoundaries3D.hh(65,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between u line 202 and this line 202
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, -1, 1>::computeJ(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, -1, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(191,3) inlined into momentaOnBoundaries3D.hh(74,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between j line 192 and this line 192
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, -1, 1>::defineU(olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, -1, 1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(97,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(98,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, -1, 1>::defineAllMomenta(olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, -1, 1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double, const double *, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(118,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(119,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, -1, 1>::computeStress(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, -1, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double, const double *, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(92,3) inlined into momentaOnBoundaries3D.hh(132,12)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.730 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries3D.hh(135,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between f line 140 and f line 140
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, 1, -1>::computeRho(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, 1, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,20)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,20)
<Remainder>
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,48)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,48)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, 1, -1>::computeU(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, 1, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(201,3) inlined into momentaOnBoundaries3D.hh(65,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between u line 202 and this line 202
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, 1, -1>::computeJ(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, 1, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(191,3) inlined into momentaOnBoundaries3D.hh(74,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between j line 192 and this line 192
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, 1, -1>::defineU(olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, 1, -1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(97,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(98,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, 1, -1>::defineAllMomenta(olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, 1, -1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double, const double *, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(118,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(119,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, 1, -1>::computeStress(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, 1, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double, const double *, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(92,3) inlined into momentaOnBoundaries3D.hh(132,12)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.730 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries3D.hh(135,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between f line 140 and f line 140
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, 1, 1>::computeRho(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, 1, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,20)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,20)
<Remainder>
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(56,48)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,48)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(56,48)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, 1, 1>::computeU(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, 1, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(201,3) inlined into momentaOnBoundaries3D.hh(65,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between u line 202 and this line 202
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, 1, 1>::computeJ(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, 1, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(191,3) inlined into momentaOnBoundaries3D.hh(74,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between j line 192 and this line 192
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, 1, 1>::defineU(olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, 1, 1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(97,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(98,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, 1, 1>::defineAllMomenta(olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, 1, 1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double, const double *, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(118,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(119,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, 1, 1>::computeStress(const olb::InnerEdgeVelBM3D<double, olb::descriptors::D3Q19Descriptor, 2, 1, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double, const double *, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(92,3) inlined into momentaOnBoundaries3D.hh(132,12)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.730 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries3D.hh(135,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between f line 140 and f line 140
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, -1, -1>::computeRho(const olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, -1, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(168,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(168,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(168,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(168,20)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(168,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(168,20)
<Remainder>
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(169,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(169,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(169,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(169,20)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(169,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(169,20)
<Remainder>
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(170,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(170,20)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(170,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(170,20)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(170,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(170,20)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, -1, -1>::computeU(const olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, -1, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(201,3) inlined into momentaOnBoundaries3D.hh(179,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between u line 202 and this line 202
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, -1, -1>::computeJ(const olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, -1, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(191,3) inlined into momentaOnBoundaries3D.hh(188,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between j line 192 and this line 192
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, -1, -1>::defineU(olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, -1, -1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(211,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(212,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(213,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, -1, -1>::defineAllMomenta(olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, -1, -1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double, const double *, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(233,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(234,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(235,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, -1, -1>::computeStress(const olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, -1, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double, const double *, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(145,3) inlined into momentaOnBoundaries3D.hh(248,19)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria

   LOOP BEGIN at ../../src/core/util.h(147,5) inlined into momentaOnBoundaries3D.hh(248,19)
      remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
   LOOP END
LOOP END

LOOP BEGIN at ../../src/core/util.h(92,3) inlined into momentaOnBoundaries3D.hh(253,14)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.730 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, -1, 1>::computeRho(const olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, -1, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(168,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(168,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(168,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(168,20)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(168,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(168,20)
<Remainder>
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(169,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(169,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(169,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(169,20)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(169,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(169,20)
<Remainder>
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(170,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(170,20)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(170,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(170,20)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(170,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(170,20)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, -1, 1>::computeU(const olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, -1, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(201,3) inlined into momentaOnBoundaries3D.hh(179,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between u line 202 and this line 202
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, -1, 1>::computeJ(const olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, -1, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(191,3) inlined into momentaOnBoundaries3D.hh(188,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between j line 192 and this line 192
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, -1, 1>::defineU(olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, -1, 1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(211,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(212,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(213,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, -1, 1>::defineAllMomenta(olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, -1, 1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double, const double *, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(233,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(234,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(235,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, -1, 1>::computeStress(const olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, -1, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double, const double *, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(145,3) inlined into momentaOnBoundaries3D.hh(248,19)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria

   LOOP BEGIN at ../../src/core/util.h(147,5) inlined into momentaOnBoundaries3D.hh(248,19)
      remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
   LOOP END
LOOP END

LOOP BEGIN at ../../src/core/util.h(92,3) inlined into momentaOnBoundaries3D.hh(253,14)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.730 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, 1, -1>::computeRho(const olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, 1, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(168,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(168,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(168,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(168,20)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(168,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(168,20)
<Remainder>
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(169,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(169,20)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(169,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(169,20)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(169,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(169,20)
<Remainder>
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(170,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(170,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(170,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(170,20)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(170,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(170,20)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, 1, -1>::computeU(const olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, 1, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(201,3) inlined into momentaOnBoundaries3D.hh(179,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between u line 202 and this line 202
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, 1, -1>::computeJ(const olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, 1, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(191,3) inlined into momentaOnBoundaries3D.hh(188,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between j line 192 and this line 192
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, 1, -1>::defineU(olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, 1, -1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(211,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(212,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(213,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, 1, -1>::defineAllMomenta(olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, 1, -1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double, const double *, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(233,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(234,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(235,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, 1, -1>::computeStress(const olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, 1, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double, const double *, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(145,3) inlined into momentaOnBoundaries3D.hh(248,19)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria

   LOOP BEGIN at ../../src/core/util.h(147,5) inlined into momentaOnBoundaries3D.hh(248,19)
      remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
   LOOP END
LOOP END

LOOP BEGIN at ../../src/core/util.h(92,3) inlined into momentaOnBoundaries3D.hh(253,14)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.730 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, 1, 1>::computeRho(const olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, 1, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(168,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(168,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(168,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(168,20)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(168,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(168,20)
<Remainder>
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(169,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(169,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(169,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(169,20)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(169,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(169,20)
<Remainder>
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(170,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(170,20)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(170,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(170,20)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(170,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(170,20)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, 1, 1>::computeU(const olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, 1, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(201,3) inlined into momentaOnBoundaries3D.hh(179,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between u line 202 and this line 202
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, 1, 1>::computeJ(const olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, 1, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(191,3) inlined into momentaOnBoundaries3D.hh(188,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between j line 192 and this line 192
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, 1, 1>::defineU(olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, 1, 1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(211,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(212,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(213,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, 1, 1>::defineAllMomenta(olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, 1, 1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double, const double *, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(233,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(234,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(235,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, 1, 1>::computeStress(const olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, -1, 1, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double, const double *, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(145,3) inlined into momentaOnBoundaries3D.hh(248,19)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria

   LOOP BEGIN at ../../src/core/util.h(147,5) inlined into momentaOnBoundaries3D.hh(248,19)
      remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
   LOOP END
LOOP END

LOOP BEGIN at ../../src/core/util.h(92,3) inlined into momentaOnBoundaries3D.hh(253,14)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.730 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, -1>::computeRho(const olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(168,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(168,20)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(168,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(168,20)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(168,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(168,20)
<Remainder>
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(169,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(169,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(169,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(169,20)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(169,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(169,20)
<Remainder>
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(170,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(170,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(170,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(170,20)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(170,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(170,20)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, -1>::computeU(const olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(201,3) inlined into momentaOnBoundaries3D.hh(179,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between u line 202 and this line 202
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, -1>::computeJ(const olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(191,3) inlined into momentaOnBoundaries3D.hh(188,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between j line 192 and this line 192
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, -1>::defineU(olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, -1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(211,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(212,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(213,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, -1>::defineAllMomenta(olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, -1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double, const double *, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(233,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(234,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(235,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, -1>::computeStress(const olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double, const double *, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(145,3) inlined into momentaOnBoundaries3D.hh(248,19)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria

   LOOP BEGIN at ../../src/core/util.h(147,5) inlined into momentaOnBoundaries3D.hh(248,19)
      remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
   LOOP END
LOOP END

LOOP BEGIN at ../../src/core/util.h(92,3) inlined into momentaOnBoundaries3D.hh(253,14)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.730 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, 1>::computeRho(const olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(168,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(168,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(168,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(168,20)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(168,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(168,20)
<Remainder>
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(169,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(169,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(169,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(169,20)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(169,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(169,20)
<Remainder>
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(170,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(170,20)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(170,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(170,20)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(170,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(170,20)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, 1>::computeU(const olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(201,3) inlined into momentaOnBoundaries3D.hh(179,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between u line 202 and this line 202
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, 1>::computeJ(const olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(191,3) inlined into momentaOnBoundaries3D.hh(188,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between j line 192 and this line 192
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, 1>::defineU(olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, 1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(211,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(212,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(213,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, 1>::defineAllMomenta(olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, 1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double, const double *, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(233,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(234,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(235,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, 1>::computeStress(const olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, -1, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double, const double *, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(145,3) inlined into momentaOnBoundaries3D.hh(248,19)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria

   LOOP BEGIN at ../../src/core/util.h(147,5) inlined into momentaOnBoundaries3D.hh(248,19)
      remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
   LOOP END
LOOP END

LOOP BEGIN at ../../src/core/util.h(92,3) inlined into momentaOnBoundaries3D.hh(253,14)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.730 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, -1>::computeRho(const olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(168,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(168,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(168,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(168,20)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(168,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(168,20)
<Remainder>
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(169,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(169,20)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(169,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(169,20)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(169,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(169,20)
<Remainder>
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(170,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(170,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(170,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(170,20)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(170,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(170,20)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, -1>::computeU(const olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(201,3) inlined into momentaOnBoundaries3D.hh(179,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between u line 202 and this line 202
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, -1>::computeJ(const olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(191,3) inlined into momentaOnBoundaries3D.hh(188,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between j line 192 and this line 192
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, -1>::defineU(olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, -1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(211,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(212,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(213,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, -1>::defineAllMomenta(olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, -1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double, const double *, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(233,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(234,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(235,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, -1>::computeStress(const olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, -1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double, const double *, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(145,3) inlined into momentaOnBoundaries3D.hh(248,19)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria

   LOOP BEGIN at ../../src/core/util.h(147,5) inlined into momentaOnBoundaries3D.hh(248,19)
      remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
   LOOP END
LOOP END

LOOP BEGIN at ../../src/core/util.h(92,3) inlined into momentaOnBoundaries3D.hh(253,14)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.730 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, 1>::computeRho(const olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(168,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(168,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(168,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(168,20)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(168,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(168,20)
<Remainder>
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(169,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(169,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(169,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(169,20)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(169,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(169,20)
<Remainder>
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(170,20)
   remark #15521: loop was not vectorized: explicitly compute the iteration count before executing the loop or try using canonical loop form
LOOP END

LOOP BEGIN at ../../src/core/util.h(124,5) inlined into momentaOnBoundaries3D.hh(170,20)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(170,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(160,48) inlined into momentaOnBoundaries3D.hh(170,20)
<Remainder>
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(170,20)
   remark #15300: LOOP WAS VECTORIZED
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15458: masked indexed (or gather) loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 9 
   remark #15477: vector loop cost: 4.250 
   remark #15478: estimated potential speedup: 2.060 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(165,48) inlined into momentaOnBoundaries3D.hh(170,20)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, 1>::computeU(const olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(201,3) inlined into momentaOnBoundaries3D.hh(179,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between u line 202 and this line 202
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, 1>::computeJ(const olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(191,3) inlined into momentaOnBoundaries3D.hh(188,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between j line 192 and this line 192
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, 1>::defineU(olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, 1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(211,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(212,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(213,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, 1>::defineAllMomenta(olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, 1> *, olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double, const double *, const double *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(233,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(234,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(226,3) inlined into momentaOnBoundaries3D.hh(235,12)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
   remark #15346: vector dependence: assumed FLOW dependence between this line 227 and u line 227
LOOP END
===========================================================================

Begin optimization report for: olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, 1>::computeStress(const olb::InnerCornerVelBM3D<double, olb::descriptors::D3Q19Descriptor, 1, 1, 1> *, const olb::Cell<double, olb::descriptors::D3Q19Descriptor> &, double, const double *, double *) const

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/util.h(145,3) inlined into momentaOnBoundaries3D.hh(248,19)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria

   LOOP BEGIN at ../../src/core/util.h(147,5) inlined into momentaOnBoundaries3D.hh(248,19)
      remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
   LOOP END
LOOP END

LOOP BEGIN at ../../src/core/util.h(92,3) inlined into momentaOnBoundaries3D.hh(253,14)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15450: unmasked unaligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 10 
   remark #15477: vector loop cost: 4.500 
   remark #15478: estimated potential speedup: 0.730 
   remark #15479: lightweight vector operations: 5 
   remark #15480: medium-overhead vector operations: 2 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::~BoundaryConditionInstantiator3D(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(144,55)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at boundaryInstantiator3D.h(147,53)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::~BoundaryConditionInstantiator3D(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(144,55) inlined into boundaryInstantiator3D.h(143,61)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at boundaryInstantiator3D.h(147,53) inlined into boundaryInstantiator3D.h(143,61)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addVelocityBoundary0N(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(161,7) inlined into boundaryInstantiator3D.h(727,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(727,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(159,3) inlined into boundaryInstantiator3D.h(727,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(160,5) inlined into boundaryInstantiator3D.h(727,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addVelocityBoundary0P(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(161,7) inlined into boundaryInstantiator3D.h(734,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(734,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(159,3) inlined into boundaryInstantiator3D.h(734,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(160,5) inlined into boundaryInstantiator3D.h(734,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addVelocityBoundary1N(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(161,7) inlined into boundaryInstantiator3D.h(741,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(741,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(159,3) inlined into boundaryInstantiator3D.h(741,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(160,5) inlined into boundaryInstantiator3D.h(741,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addVelocityBoundary1P(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(161,7) inlined into boundaryInstantiator3D.h(748,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(748,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(159,3) inlined into boundaryInstantiator3D.h(748,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(160,5) inlined into boundaryInstantiator3D.h(748,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addVelocityBoundary2N(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(161,7) inlined into boundaryInstantiator3D.h(755,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(755,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(159,3) inlined into boundaryInstantiator3D.h(755,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(160,5) inlined into boundaryInstantiator3D.h(755,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addVelocityBoundary2P(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(161,7) inlined into boundaryInstantiator3D.h(762,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(762,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(159,3) inlined into boundaryInstantiator3D.h(762,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(160,5) inlined into boundaryInstantiator3D.h(762,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addPressureBoundary0N(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(192,7) inlined into boundaryInstantiator3D.h(769,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator3D.h(769,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(190,3) inlined into boundaryInstantiator3D.h(769,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(191,5) inlined into boundaryInstantiator3D.h(769,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addPressureBoundary0P(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(192,7) inlined into boundaryInstantiator3D.h(776,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator3D.h(776,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(190,3) inlined into boundaryInstantiator3D.h(776,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(191,5) inlined into boundaryInstantiator3D.h(776,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addPressureBoundary1N(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(192,7) inlined into boundaryInstantiator3D.h(783,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator3D.h(783,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(190,3) inlined into boundaryInstantiator3D.h(783,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(191,5) inlined into boundaryInstantiator3D.h(783,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addPressureBoundary1P(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(192,7) inlined into boundaryInstantiator3D.h(790,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator3D.h(790,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(190,3) inlined into boundaryInstantiator3D.h(790,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(191,5) inlined into boundaryInstantiator3D.h(790,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addPressureBoundary2N(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(192,7) inlined into boundaryInstantiator3D.h(797,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator3D.h(797,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(190,3) inlined into boundaryInstantiator3D.h(797,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(191,5) inlined into boundaryInstantiator3D.h(797,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addPressureBoundary2P(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(192,7) inlined into boundaryInstantiator3D.h(804,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator3D.h(804,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(190,3) inlined into boundaryInstantiator3D.h(804,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(191,5) inlined into boundaryInstantiator3D.h(804,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge0NN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7) inlined into boundaryInstantiator3D.h(812,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3) inlined into boundaryInstantiator3D.h(812,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5) inlined into boundaryInstantiator3D.h(812,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge0NP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7) inlined into boundaryInstantiator3D.h(819,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3) inlined into boundaryInstantiator3D.h(819,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5) inlined into boundaryInstantiator3D.h(819,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge0PN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7) inlined into boundaryInstantiator3D.h(826,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3) inlined into boundaryInstantiator3D.h(826,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5) inlined into boundaryInstantiator3D.h(826,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge0PP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7) inlined into boundaryInstantiator3D.h(833,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3) inlined into boundaryInstantiator3D.h(833,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5) inlined into boundaryInstantiator3D.h(833,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge1NN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7) inlined into boundaryInstantiator3D.h(840,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3) inlined into boundaryInstantiator3D.h(840,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5) inlined into boundaryInstantiator3D.h(840,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge1NP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7) inlined into boundaryInstantiator3D.h(847,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3) inlined into boundaryInstantiator3D.h(847,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5) inlined into boundaryInstantiator3D.h(847,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge1PN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7) inlined into boundaryInstantiator3D.h(854,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3) inlined into boundaryInstantiator3D.h(854,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5) inlined into boundaryInstantiator3D.h(854,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge1PP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7) inlined into boundaryInstantiator3D.h(861,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3) inlined into boundaryInstantiator3D.h(861,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5) inlined into boundaryInstantiator3D.h(861,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge2NN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7) inlined into boundaryInstantiator3D.h(868,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3) inlined into boundaryInstantiator3D.h(868,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5) inlined into boundaryInstantiator3D.h(868,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge2NP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7) inlined into boundaryInstantiator3D.h(875,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3) inlined into boundaryInstantiator3D.h(875,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5) inlined into boundaryInstantiator3D.h(875,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge2PN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7) inlined into boundaryInstantiator3D.h(882,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3) inlined into boundaryInstantiator3D.h(882,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5) inlined into boundaryInstantiator3D.h(882,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge2PP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7) inlined into boundaryInstantiator3D.h(889,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3) inlined into boundaryInstantiator3D.h(889,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5) inlined into boundaryInstantiator3D.h(889,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge0NN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7) inlined into boundaryInstantiator3D.h(898,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(898,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(898,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3) inlined into boundaryInstantiator3D.h(898,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5) inlined into boundaryInstantiator3D.h(898,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge0NP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7) inlined into boundaryInstantiator3D.h(905,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(905,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(905,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3) inlined into boundaryInstantiator3D.h(905,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5) inlined into boundaryInstantiator3D.h(905,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge0PN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7) inlined into boundaryInstantiator3D.h(912,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(912,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(912,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3) inlined into boundaryInstantiator3D.h(912,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5) inlined into boundaryInstantiator3D.h(912,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge0PP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7) inlined into boundaryInstantiator3D.h(919,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(919,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(919,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3) inlined into boundaryInstantiator3D.h(919,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5) inlined into boundaryInstantiator3D.h(919,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge1NN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7) inlined into boundaryInstantiator3D.h(926,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(926,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(926,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3) inlined into boundaryInstantiator3D.h(926,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5) inlined into boundaryInstantiator3D.h(926,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge1NP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7) inlined into boundaryInstantiator3D.h(933,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(933,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(933,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3) inlined into boundaryInstantiator3D.h(933,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5) inlined into boundaryInstantiator3D.h(933,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge1PN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7) inlined into boundaryInstantiator3D.h(940,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(940,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(940,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3) inlined into boundaryInstantiator3D.h(940,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5) inlined into boundaryInstantiator3D.h(940,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge1PP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7) inlined into boundaryInstantiator3D.h(947,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(947,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(947,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3) inlined into boundaryInstantiator3D.h(947,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5) inlined into boundaryInstantiator3D.h(947,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge2NN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7) inlined into boundaryInstantiator3D.h(954,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(954,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(954,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3) inlined into boundaryInstantiator3D.h(954,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5) inlined into boundaryInstantiator3D.h(954,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge2NP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7) inlined into boundaryInstantiator3D.h(961,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(961,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(961,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3) inlined into boundaryInstantiator3D.h(961,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5) inlined into boundaryInstantiator3D.h(961,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge2PN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7) inlined into boundaryInstantiator3D.h(968,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(968,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(968,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3) inlined into boundaryInstantiator3D.h(968,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5) inlined into boundaryInstantiator3D.h(968,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge2PP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7) inlined into boundaryInstantiator3D.h(975,3)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(975,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(975,3)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3) inlined into boundaryInstantiator3D.h(975,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5) inlined into boundaryInstantiator3D.h(975,3)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityCornerNNN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1040,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1040,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1040,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityCornerNNP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1047,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1047,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1047,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityCornerNPN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1054,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1054,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1054,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityCornerNPP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1061,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1061,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1061,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityCornerPNN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1068,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1068,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1068,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityCornerPNP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1075,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1075,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1075,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityCornerPPN(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1082,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1082,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1082,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityCornerPPP(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1089,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1089,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(1089,3)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addVelocityBoundary(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, olb::BlockGeometryStatistics3D *, int, int, int, int, int, int, double, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(344,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(342,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(343,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addVelocityBoundary<0, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(161,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(164,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(159,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(160,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addVelocityBoundary<0, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(161,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(164,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(159,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(160,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addVelocityBoundary<1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(161,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(164,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(159,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(160,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addVelocityBoundary<1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(161,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(164,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(159,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(160,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addVelocityBoundary<2, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(161,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(164,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(159,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(160,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addVelocityBoundary<2, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(161,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(164,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(159,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(160,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityCorner<1, 1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityCorner<1, 1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityCorner<1, -1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityCorner<-1, 1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityCorner<-1, -1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityCorner<-1, 1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityCorner<-1, -1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(319,5)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15451: unmasked unaligned unit stride stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 4 
   remark #15477: vector loop cost: 2.500 
   remark #15478: estimated potential speedup: 1.000 
   remark #15479: lightweight vector operations: 2 
   remark #15481: heavy-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge<0, 1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge<0, -1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge<0, 1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge<0, -1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge<1, 1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge<1, 1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge<1, -1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge<1, -1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge<2, 1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge<2, -1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge<2, 1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addExternalVelocityEdge<2, -1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(226,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(224,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(225,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge<0, 1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge<0, -1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge<0, 1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge<0, -1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge<1, 1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge<1, 1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge<1, -1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge<1, -1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge<2, 1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge<2, -1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge<2, 1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addInternalVelocityEdge<2, -1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(264,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END

   LOOP BEGIN at momentaOnBoundaries.hh(130,3) inlined into boundaryInstantiator3D.h(267,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(262,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(263,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addPressureBoundary(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, olb::BlockGeometryStatistics3D *, int, int, int, int, int, int, double, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(663,7)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(661,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(662,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addPressureBoundary<0, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(192,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator3D.h(195,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(190,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(191,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addPressureBoundary<0, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(192,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator3D.h(195,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(190,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(191,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addPressureBoundary<1, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(192,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator3D.h(195,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(190,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(191,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addPressureBoundary<1, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(192,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator3D.h(195,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(190,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(191,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addPressureBoundary<2, -1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(192,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator3D.h(195,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(190,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(191,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>>::addPressureBoundary<2, 1>(olb::BoundaryConditionInstantiator3D<double, olb::descriptors::D3Q19Descriptor, olb::RegularizedBoundaryManager3D<double, olb::descriptors::D3Q19Descriptor, olb::BGKdynamics<double, olb::descriptors::D3Q19Descriptor>>> *, int, int, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at boundaryInstantiator3D.h(192,7)
   remark #15541: outer loop was not auto-vectorized: consider using SIMD directive

   LOOP BEGIN at momentaOnBoundaries.hh(248,3) inlined into boundaryInstantiator3D.h(195,11)
      remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
      remark #15451: unmasked unaligned unit stride stores: 1 
      remark #15475: --- begin vector loop cost summary ---
      remark #15476: scalar loop cost: 4 
      remark #15477: vector loop cost: 2.500 
      remark #15478: estimated potential speedup: 1.000 
      remark #15479: lightweight vector operations: 2 
      remark #15481: heavy-overhead vector operations: 1 
      remark #15488: --- end vector loop cost summary ---
   LOOP END
LOOP END


Non-optimizable loops:


LOOP BEGIN at boundaryInstantiator3D.h(190,3)
   remark #15536: loop was not vectorized: inner loop throttling prevents vectorization of this outer loop. Refer to inner loop message for more details.

   LOOP BEGIN at boundaryInstantiator3D.h(191,5)
      remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
   LOOP END
LOOP END
===========================================================================
