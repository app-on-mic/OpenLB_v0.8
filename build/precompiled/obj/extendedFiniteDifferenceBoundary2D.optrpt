
Begin optimization report for: olb::ExtendedStraightFdBoundaryPostProcessor2D<double, olb::descriptors::D2Q9Descriptor, 0, 1>::processSubDomain(olb::ExtendedStraightFdBoundaryPostProcessor2D<double, olb::descriptors::D2Q9Descriptor, 0, 1> *, olb::BlockLattice2D<double, olb::descriptors::D2Q9Descriptor> &, int, int, int, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at extendedFiniteDifferenceBoundary2D.hh(64,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at extendedFiniteDifferenceBoundary2D.hh(65,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at extendedFiniteDifferenceBoundary2D.hh(97,9)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between cDivRhoUU line 117 and cDivRhoUU line 139

         LOOP BEGIN at extendedFiniteDifferenceBoundary2D.hh(99,11)
         LOOP END

         LOOP BEGIN at extendedFiniteDifferenceBoundary2D.hh(113,11)
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15448: unmasked aligned unit stride loads: 3 
            remark #15450: unmasked unaligned unit stride loads: 1 
            remark #15460: masked strided loads: 4 
            remark #15462: unmasked indexed (or gather) loads: 1 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 137 
            remark #15477: vector loop cost: 95.000 
            remark #15478: estimated potential speedup: 0.920 
            remark #15479: lightweight vector operations: 94 
            remark #15481: heavy-overhead vector operations: 1 
            remark #15487: type converts: 2 
            remark #15488: --- end vector loop cost summary ---

            LOOP BEGIN at extendedFiniteDifferenceBoundary2D.hh(115,13)
               remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
               remark #15448: unmasked aligned unit stride loads: 6 
               remark #15449: unmasked aligned unit stride stores: 1 
               remark #15450: unmasked unaligned unit stride loads: 1 
               remark #15467: unmasked aligned streaming stores: 1 
               remark #15475: --- begin vector loop cost summary ---
               remark #15476: scalar loop cost: 137 
               remark #15477: vector loop cost: 69.500 
               remark #15478: estimated potential speedup: 1.680 
               remark #15479: lightweight vector operations: 73 
               remark #15480: medium-overhead vector operations: 1 
               remark #15487: type converts: 2 
               remark #15488: --- end vector loop cost summary ---
            LOOP END

            LOOP BEGIN at extendedFiniteDifferenceBoundary2D.hh(134,13)
            LOOP END

            LOOP BEGIN at extendedFiniteDifferenceBoundary2D.hh(115,13)
            LOOP END
         LOOP END

         LOOP BEGIN at extendedFiniteDifferenceBoundary2D.hh(133,11)
         LOOP END
      LOOP END

      LOOP BEGIN at ../../src/core/util.h(92,3) inlined into extendedFiniteDifferenceBoundary2D.hh(70,18)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 8 
         remark #15477: vector loop cost: 3.500 
         remark #15478: estimated potential speedup: 0.610 
         remark #15479: lightweight vector operations: 6 
         remark #15480: medium-overhead vector operations: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../../src/core/finiteDifference2D.h(66,5) inlined into extendedFiniteDifferenceBoundary2D.hh(73,9)
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 3 
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15467: unmasked aligned streaming stores: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 17 
         remark #15477: vector loop cost: 7.000 
         remark #15478: estimated potential speedup: 1.700 
         remark #15479: lightweight vector operations: 13 
         remark #15480: medium-overhead vector operations: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../../src/core/finiteDifference2D.h(112,5) inlined into extendedFiniteDifferenceBoundary2D.hh(74,9)
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 2 
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15467: unmasked aligned streaming stores: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 9 
         remark #15477: vector loop cost: 3.500 
         remark #15478: estimated potential speedup: 1.380 
         remark #15479: lightweight vector operations: 6 
         remark #15480: medium-overhead vector operations: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::ExtendedStraightFdBoundaryPostProcessor2D<double, olb::descriptors::D2Q9Descriptor, 0, -1>::processSubDomain(olb::ExtendedStraightFdBoundaryPostProcessor2D<double, olb::descriptors::D2Q9Descriptor, 0, -1> *, olb::BlockLattice2D<double, olb::descriptors::D2Q9Descriptor> &, int, int, int, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at extendedFiniteDifferenceBoundary2D.hh(64,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at extendedFiniteDifferenceBoundary2D.hh(65,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at extendedFiniteDifferenceBoundary2D.hh(97,9)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between cDivRhoUU line 117 and cDivRhoUU line 139

         LOOP BEGIN at extendedFiniteDifferenceBoundary2D.hh(99,11)
         LOOP END

         LOOP BEGIN at extendedFiniteDifferenceBoundary2D.hh(113,11)
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15448: unmasked aligned unit stride loads: 3 
            remark #15450: unmasked unaligned unit stride loads: 1 
            remark #15460: masked strided loads: 4 
            remark #15462: unmasked indexed (or gather) loads: 1 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 137 
            remark #15477: vector loop cost: 95.000 
            remark #15478: estimated potential speedup: 0.920 
            remark #15479: lightweight vector operations: 94 
            remark #15481: heavy-overhead vector operations: 1 
            remark #15487: type converts: 2 
            remark #15488: --- end vector loop cost summary ---

            LOOP BEGIN at extendedFiniteDifferenceBoundary2D.hh(115,13)
               remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
               remark #15448: unmasked aligned unit stride loads: 6 
               remark #15449: unmasked aligned unit stride stores: 1 
               remark #15450: unmasked unaligned unit stride loads: 1 
               remark #15467: unmasked aligned streaming stores: 1 
               remark #15475: --- begin vector loop cost summary ---
               remark #15476: scalar loop cost: 137 
               remark #15477: vector loop cost: 69.500 
               remark #15478: estimated potential speedup: 1.680 
               remark #15479: lightweight vector operations: 73 
               remark #15480: medium-overhead vector operations: 1 
               remark #15487: type converts: 2 
               remark #15488: --- end vector loop cost summary ---
            LOOP END

            LOOP BEGIN at extendedFiniteDifferenceBoundary2D.hh(134,13)
            LOOP END

            LOOP BEGIN at extendedFiniteDifferenceBoundary2D.hh(115,13)
            LOOP END
         LOOP END

         LOOP BEGIN at extendedFiniteDifferenceBoundary2D.hh(133,11)
         LOOP END
      LOOP END

      LOOP BEGIN at ../../src/core/util.h(92,3) inlined into extendedFiniteDifferenceBoundary2D.hh(70,18)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 8 
         remark #15477: vector loop cost: 3.500 
         remark #15478: estimated potential speedup: 0.610 
         remark #15479: lightweight vector operations: 6 
         remark #15480: medium-overhead vector operations: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../../src/core/finiteDifference2D.h(66,5) inlined into extendedFiniteDifferenceBoundary2D.hh(73,9)
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 3 
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15467: unmasked aligned streaming stores: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 16 
         remark #15477: vector loop cost: 6.500 
         remark #15478: estimated potential speedup: 1.680 
         remark #15479: lightweight vector operations: 12 
         remark #15480: medium-overhead vector operations: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../../src/core/finiteDifference2D.h(112,5) inlined into extendedFiniteDifferenceBoundary2D.hh(74,9)
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 2 
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15467: unmasked aligned streaming stores: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 9 
         remark #15477: vector loop cost: 3.500 
         remark #15478: estimated potential speedup: 1.380 
         remark #15479: lightweight vector operations: 6 
         remark #15480: medium-overhead vector operations: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::ExtendedStraightFdBoundaryPostProcessor2D<double, olb::descriptors::D2Q9Descriptor, 1, 1>::processSubDomain(olb::ExtendedStraightFdBoundaryPostProcessor2D<double, olb::descriptors::D2Q9Descriptor, 1, 1> *, olb::BlockLattice2D<double, olb::descriptors::D2Q9Descriptor> &, int, int, int, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at extendedFiniteDifferenceBoundary2D.hh(64,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at extendedFiniteDifferenceBoundary2D.hh(65,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at extendedFiniteDifferenceBoundary2D.hh(97,9)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between cDivRhoUU line 117 and cDivRhoUU line 139

         LOOP BEGIN at extendedFiniteDifferenceBoundary2D.hh(99,11)
         LOOP END

         LOOP BEGIN at extendedFiniteDifferenceBoundary2D.hh(113,11)
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15448: unmasked aligned unit stride loads: 3 
            remark #15450: unmasked unaligned unit stride loads: 1 
            remark #15460: masked strided loads: 4 
            remark #15462: unmasked indexed (or gather) loads: 1 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 137 
            remark #15477: vector loop cost: 95.000 
            remark #15478: estimated potential speedup: 0.920 
            remark #15479: lightweight vector operations: 94 
            remark #15481: heavy-overhead vector operations: 1 
            remark #15487: type converts: 2 
            remark #15488: --- end vector loop cost summary ---

            LOOP BEGIN at extendedFiniteDifferenceBoundary2D.hh(115,13)
               remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
               remark #15448: unmasked aligned unit stride loads: 6 
               remark #15449: unmasked aligned unit stride stores: 1 
               remark #15450: unmasked unaligned unit stride loads: 1 
               remark #15467: unmasked aligned streaming stores: 1 
               remark #15475: --- begin vector loop cost summary ---
               remark #15476: scalar loop cost: 137 
               remark #15477: vector loop cost: 69.500 
               remark #15478: estimated potential speedup: 1.680 
               remark #15479: lightweight vector operations: 73 
               remark #15480: medium-overhead vector operations: 1 
               remark #15487: type converts: 2 
               remark #15488: --- end vector loop cost summary ---
            LOOP END

            LOOP BEGIN at extendedFiniteDifferenceBoundary2D.hh(134,13)
            LOOP END

            LOOP BEGIN at extendedFiniteDifferenceBoundary2D.hh(115,13)
            LOOP END
         LOOP END

         LOOP BEGIN at extendedFiniteDifferenceBoundary2D.hh(133,11)
         LOOP END
      LOOP END

      LOOP BEGIN at ../../src/core/util.h(92,3) inlined into extendedFiniteDifferenceBoundary2D.hh(70,18)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 8 
         remark #15477: vector loop cost: 3.500 
         remark #15478: estimated potential speedup: 0.610 
         remark #15479: lightweight vector operations: 6 
         remark #15480: medium-overhead vector operations: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../../src/core/finiteDifference2D.h(112,5) inlined into extendedFiniteDifferenceBoundary2D.hh(73,9)
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 2 
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15467: unmasked aligned streaming stores: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 9 
         remark #15477: vector loop cost: 3.500 
         remark #15478: estimated potential speedup: 2.570 
         remark #15479: lightweight vector operations: 6 
         remark #15480: medium-overhead vector operations: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../../src/core/finiteDifference2D.h(66,5) inlined into extendedFiniteDifferenceBoundary2D.hh(74,9)
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 3 
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15467: unmasked aligned streaming stores: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 17 
         remark #15477: vector loop cost: 7.000 
         remark #15478: estimated potential speedup: 1.700 
         remark #15479: lightweight vector operations: 13 
         remark #15480: medium-overhead vector operations: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::ExtendedStraightFdBoundaryPostProcessor2D<double, olb::descriptors::D2Q9Descriptor, 1, -1>::processSubDomain(olb::ExtendedStraightFdBoundaryPostProcessor2D<double, olb::descriptors::D2Q9Descriptor, 1, -1> *, olb::BlockLattice2D<double, olb::descriptors::D2Q9Descriptor> &, int, int, int, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at extendedFiniteDifferenceBoundary2D.hh(64,5)
   remark #15542: loop was not vectorized: inner loop was already vectorized

   LOOP BEGIN at extendedFiniteDifferenceBoundary2D.hh(65,7)
      remark #15542: loop was not vectorized: inner loop was already vectorized

      LOOP BEGIN at extendedFiniteDifferenceBoundary2D.hh(97,9)
         remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
         remark #15346: vector dependence: assumed FLOW dependence between cDivRhoUU line 117 and cDivRhoUU line 139

         LOOP BEGIN at extendedFiniteDifferenceBoundary2D.hh(99,11)
         LOOP END

         LOOP BEGIN at extendedFiniteDifferenceBoundary2D.hh(113,11)
            remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
            remark #15448: unmasked aligned unit stride loads: 3 
            remark #15450: unmasked unaligned unit stride loads: 1 
            remark #15460: masked strided loads: 4 
            remark #15462: unmasked indexed (or gather) loads: 1 
            remark #15475: --- begin vector loop cost summary ---
            remark #15476: scalar loop cost: 137 
            remark #15477: vector loop cost: 95.000 
            remark #15478: estimated potential speedup: 0.920 
            remark #15479: lightweight vector operations: 94 
            remark #15481: heavy-overhead vector operations: 1 
            remark #15487: type converts: 2 
            remark #15488: --- end vector loop cost summary ---

            LOOP BEGIN at extendedFiniteDifferenceBoundary2D.hh(115,13)
               remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
               remark #15448: unmasked aligned unit stride loads: 6 
               remark #15449: unmasked aligned unit stride stores: 1 
               remark #15450: unmasked unaligned unit stride loads: 1 
               remark #15467: unmasked aligned streaming stores: 1 
               remark #15475: --- begin vector loop cost summary ---
               remark #15476: scalar loop cost: 137 
               remark #15477: vector loop cost: 69.500 
               remark #15478: estimated potential speedup: 1.680 
               remark #15479: lightweight vector operations: 73 
               remark #15480: medium-overhead vector operations: 1 
               remark #15487: type converts: 2 
               remark #15488: --- end vector loop cost summary ---
            LOOP END

            LOOP BEGIN at extendedFiniteDifferenceBoundary2D.hh(134,13)
            LOOP END

            LOOP BEGIN at extendedFiniteDifferenceBoundary2D.hh(115,13)
            LOOP END
         LOOP END

         LOOP BEGIN at extendedFiniteDifferenceBoundary2D.hh(133,11)
         LOOP END
      LOOP END

      LOOP BEGIN at ../../src/core/util.h(92,3) inlined into extendedFiniteDifferenceBoundary2D.hh(70,18)
         remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
         remark #15448: unmasked aligned unit stride loads: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 8 
         remark #15477: vector loop cost: 3.500 
         remark #15478: estimated potential speedup: 0.610 
         remark #15479: lightweight vector operations: 6 
         remark #15480: medium-overhead vector operations: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../../src/core/finiteDifference2D.h(112,5) inlined into extendedFiniteDifferenceBoundary2D.hh(73,9)
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 2 
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15467: unmasked aligned streaming stores: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 9 
         remark #15477: vector loop cost: 3.500 
         remark #15478: estimated potential speedup: 2.570 
         remark #15479: lightweight vector operations: 6 
         remark #15480: medium-overhead vector operations: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../../src/core/finiteDifference2D.h(66,5) inlined into extendedFiniteDifferenceBoundary2D.hh(74,9)
         remark #15300: LOOP WAS VECTORIZED
         remark #15448: unmasked aligned unit stride loads: 3 
         remark #15449: unmasked aligned unit stride stores: 1 
         remark #15467: unmasked aligned streaming stores: 1 
         remark #15475: --- begin vector loop cost summary ---
         remark #15476: scalar loop cost: 16 
         remark #15477: vector loop cost: 6.500 
         remark #15478: estimated potential speedup: 1.680 
         remark #15479: lightweight vector operations: 12 
         remark #15480: medium-overhead vector operations: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::ExtendedFdBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::~BoundaryConditionInstantiator2D(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::ExtendedFdBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/boundaryInstantiator2D.h(103,59)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at ../../src/core/boundaryInstantiator2D.h(106,57)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::ExtendedFdBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::~BoundaryConditionInstantiator2D(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::ExtendedFdBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/boundaryInstantiator2D.h(103,59) inlined into ../../src/core/boundaryInstantiator2D.h(102,63)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at ../../src/core/boundaryInstantiator2D.h(106,57) inlined into ../../src/core/boundaryInstantiator2D.h(102,63)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::ExtendedFdBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::~BoundaryConditionInstantiator2D(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::ExtendedFdBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *const)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/boundaryInstantiator2D.h(103,59) inlined into ../../src/core/boundaryInstantiator2D.h(102,63)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END

LOOP BEGIN at ../../src/core/boundaryInstantiator2D.h(106,57) inlined into ../../src/core/boundaryInstantiator2D.h(102,63)
   remark #15523: loop was not vectorized: cannot compute loop iteration count before executing the loop.
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::ExtendedFdBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addVelocityBoundary0N(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::ExtendedFdBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/boundaryInstantiator2D.h(118,5) inlined into ../../src/core/boundaryInstantiator2D.h(341,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../../src/core/boundaryInstantiator2D.h(117,3) inlined into ../../src/core/boundaryInstantiator2D.h(341,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::ExtendedFdBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addVelocityBoundary0P(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::ExtendedFdBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/boundaryInstantiator2D.h(118,5) inlined into ../../src/core/boundaryInstantiator2D.h(347,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../../src/core/boundaryInstantiator2D.h(117,3) inlined into ../../src/core/boundaryInstantiator2D.h(347,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::ExtendedFdBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addVelocityBoundary1N(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::ExtendedFdBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/boundaryInstantiator2D.h(118,5) inlined into ../../src/core/boundaryInstantiator2D.h(353,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../../src/core/boundaryInstantiator2D.h(117,3) inlined into ../../src/core/boundaryInstantiator2D.h(353,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::ExtendedFdBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addVelocityBoundary1P(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::ExtendedFdBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/boundaryInstantiator2D.h(118,5) inlined into ../../src/core/boundaryInstantiator2D.h(359,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../../src/core/boundaryInstantiator2D.h(117,3) inlined into ../../src/core/boundaryInstantiator2D.h(359,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::ExtendedFdBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addPressureBoundary0N(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::ExtendedFdBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/boundaryInstantiator2D.h(149,5) inlined into ../../src/core/boundaryInstantiator2D.h(365,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../../src/core/boundaryInstantiator2D.h(148,3) inlined into ../../src/core/boundaryInstantiator2D.h(365,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::ExtendedFdBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addPressureBoundary0P(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::ExtendedFdBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/boundaryInstantiator2D.h(149,5) inlined into ../../src/core/boundaryInstantiator2D.h(371,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../../src/core/boundaryInstantiator2D.h(148,3) inlined into ../../src/core/boundaryInstantiator2D.h(371,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::ExtendedFdBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addPressureBoundary1N(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::ExtendedFdBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/boundaryInstantiator2D.h(149,5) inlined into ../../src/core/boundaryInstantiator2D.h(377,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../../src/core/boundaryInstantiator2D.h(148,3) inlined into ../../src/core/boundaryInstantiator2D.h(377,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::ExtendedFdBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addPressureBoundary1P(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::ExtendedFdBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/boundaryInstantiator2D.h(149,5) inlined into ../../src/core/boundaryInstantiator2D.h(383,3)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../../src/core/boundaryInstantiator2D.h(148,3) inlined into ../../src/core/boundaryInstantiator2D.h(383,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::ExtendedFdBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addVelocityBoundary(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::ExtendedFdBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, olb::BlockGeometryStatistics2D *, int, int, int, int, double, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/boundaryInstantiator2D.h(231,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../../src/core/boundaryInstantiator2D.h(230,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::ExtendedFdBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addVelocityBoundary<0, 1>(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::ExtendedFdBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/boundaryInstantiator2D.h(118,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../../src/core/boundaryInstantiator2D.h(117,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::ExtendedFdBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addVelocityBoundary<0, -1>(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::ExtendedFdBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/boundaryInstantiator2D.h(118,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../../src/core/boundaryInstantiator2D.h(117,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::ExtendedFdBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addVelocityBoundary<1, 1>(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::ExtendedFdBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/boundaryInstantiator2D.h(118,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../../src/core/boundaryInstantiator2D.h(117,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::ExtendedFdBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addVelocityBoundary<1, -1>(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::ExtendedFdBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, int, int, int, int, double)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/boundaryInstantiator2D.h(118,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../../src/core/boundaryInstantiator2D.h(117,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: std::vector<int, std::allocator<int>>::vector<int>(std::vector<int, std::allocator<int>> *, int, int, const std::vector<int, std::allocator<int>>::allocator_type &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(757,7) inlined into /usr/include/c++/4.4.7/bits/stl_vector.h(303,4)
<Peeled>
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(757,7) inlined into /usr/include/c++/4.4.7/bits/stl_vector.h(303,4)
   remark #15300: LOOP WAS VECTORIZED
   remark #15442: entire loop may be executed in remainder
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15467: unmasked aligned streaming stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 2 
   remark #15477: vector loop cost: 0.750 
   remark #15478: estimated potential speedup: 2.460 
   remark #15479: lightweight vector operations: 3 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at /usr/include/c++/4.4.7/bits/stl_algobase.h(757,7) inlined into /usr/include/c++/4.4.7/bits/stl_vector.h(303,4)
<Remainder>
LOOP END
===========================================================================

Begin optimization report for: olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::ExtendedFdBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>>::addPressureBoundary(olb::BoundaryConditionInstantiator2D<double, olb::descriptors::D2Q9Descriptor, olb::ExtendedFdBoundaryManager2D<double, olb::descriptors::D2Q9Descriptor, olb::BGKdynamics<double, olb::descriptors::D2Q9Descriptor>>> *, olb::BlockGeometryStatistics2D *, int, int, int, int, double, int)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/boundaryInstantiator2D.h(310,5)
   remark #15520: loop was not vectorized: loop with early exits cannot be vectorized unless it meets search loop idiom criteria
LOOP END


Non-optimizable loops:


LOOP BEGIN at ../../src/core/boundaryInstantiator2D.h(309,3)
   remark #15341: loop was not vectorized: nonstandard loop is not a vectorization candidate
LOOP END
===========================================================================

Begin optimization report for: olb::OuterVelocityCornerProcessor2D<double, olb::descriptors::D2Q9Descriptor, -1, -1>::process(olb::OuterVelocityCornerProcessor2D<double, olb::descriptors::D2Q9Descriptor, -1, -1> *, olb::BlockLattice2D<double, olb::descriptors::D2Q9Descriptor> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/finiteDifference2D.h(66,5) inlined into ../../src/core/boundaryPostProcessors2D.hh(163,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 3 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15467: unmasked aligned streaming stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 16 
   remark #15477: vector loop cost: 6.500 
   remark #15478: estimated potential speedup: 2.460 
   remark #15479: lightweight vector operations: 12 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/finiteDifference2D.h(66,5) inlined into ../../src/core/boundaryPostProcessors2D.hh(164,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 3 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15467: unmasked aligned streaming stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 16 
   remark #15477: vector loop cost: 6.500 
   remark #15478: estimated potential speedup: 1.680 
   remark #15479: lightweight vector operations: 12 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/util.h(92,3) inlined into ../../src/core/boundaryPostProcessors2D.hh(185,12)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 8 
   remark #15477: vector loop cost: 3.500 
   remark #15478: estimated potential speedup: 0.610 
   remark #15479: lightweight vector operations: 6 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/boundaryPostProcessors2D.hh(186,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details

   LOOP BEGIN at ../../src/core/firstOrderLbHelpers.h(66,5) inlined into ../../src/core/boundaryPostProcessors2D.hh(189,7)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between iPi line 75 and iPi line 67

      LOOP BEGIN at ../../src/core/firstOrderLbHelpers.h(67,7) inlined into ../../src/core/boundaryPostProcessors2D.hh(189,7)
         remark #15315: loop was not vectorized: low trip count
         remark #15450: unmasked unaligned unit stride loads: 2 
         remark #15475: --- begin vector loop cost summary ---
         remark #15479: lightweight vector operations: 35 
         remark #15480: medium-overhead vector operations: 1 
         remark #15481: heavy-overhead vector operations: 1 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../../src/core/firstOrderLbHelpers.h(67,7) inlined into ../../src/core/boundaryPostProcessors2D.hh(189,7)
      <Remainder>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::OuterVelocityCornerProcessor2D<double, olb::descriptors::D2Q9Descriptor, -1, 1>::process(olb::OuterVelocityCornerProcessor2D<double, olb::descriptors::D2Q9Descriptor, -1, 1> *, olb::BlockLattice2D<double, olb::descriptors::D2Q9Descriptor> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/finiteDifference2D.h(66,5) inlined into ../../src/core/boundaryPostProcessors2D.hh(163,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 3 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15467: unmasked aligned streaming stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 16 
   remark #15477: vector loop cost: 6.500 
   remark #15478: estimated potential speedup: 2.460 
   remark #15479: lightweight vector operations: 12 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/finiteDifference2D.h(66,5) inlined into ../../src/core/boundaryPostProcessors2D.hh(164,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 3 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15467: unmasked aligned streaming stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 17 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 1.700 
   remark #15479: lightweight vector operations: 13 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/util.h(92,3) inlined into ../../src/core/boundaryPostProcessors2D.hh(185,12)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 8 
   remark #15477: vector loop cost: 3.500 
   remark #15478: estimated potential speedup: 0.610 
   remark #15479: lightweight vector operations: 6 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/boundaryPostProcessors2D.hh(186,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details

   LOOP BEGIN at ../../src/core/firstOrderLbHelpers.h(66,5) inlined into ../../src/core/boundaryPostProcessors2D.hh(189,7)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between iPi line 75 and iPi line 67

      LOOP BEGIN at ../../src/core/firstOrderLbHelpers.h(67,7) inlined into ../../src/core/boundaryPostProcessors2D.hh(189,7)
         remark #15315: loop was not vectorized: low trip count
         remark #15450: unmasked unaligned unit stride loads: 2 
         remark #15475: --- begin vector loop cost summary ---
         remark #15479: lightweight vector operations: 35 
         remark #15480: medium-overhead vector operations: 1 
         remark #15481: heavy-overhead vector operations: 1 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../../src/core/firstOrderLbHelpers.h(67,7) inlined into ../../src/core/boundaryPostProcessors2D.hh(189,7)
      <Remainder>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::OuterVelocityCornerProcessor2D<double, olb::descriptors::D2Q9Descriptor, 1, -1>::process(olb::OuterVelocityCornerProcessor2D<double, olb::descriptors::D2Q9Descriptor, 1, -1> *, olb::BlockLattice2D<double, olb::descriptors::D2Q9Descriptor> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/finiteDifference2D.h(66,5) inlined into ../../src/core/boundaryPostProcessors2D.hh(163,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 3 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15467: unmasked aligned streaming stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 17 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 2.420 
   remark #15479: lightweight vector operations: 13 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/finiteDifference2D.h(66,5) inlined into ../../src/core/boundaryPostProcessors2D.hh(164,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 3 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15467: unmasked aligned streaming stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 16 
   remark #15477: vector loop cost: 6.500 
   remark #15478: estimated potential speedup: 1.680 
   remark #15479: lightweight vector operations: 12 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/util.h(92,3) inlined into ../../src/core/boundaryPostProcessors2D.hh(185,12)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 8 
   remark #15477: vector loop cost: 3.500 
   remark #15478: estimated potential speedup: 0.610 
   remark #15479: lightweight vector operations: 6 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/boundaryPostProcessors2D.hh(186,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details

   LOOP BEGIN at ../../src/core/firstOrderLbHelpers.h(66,5) inlined into ../../src/core/boundaryPostProcessors2D.hh(189,7)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between iPi line 75 and iPi line 67

      LOOP BEGIN at ../../src/core/firstOrderLbHelpers.h(67,7) inlined into ../../src/core/boundaryPostProcessors2D.hh(189,7)
         remark #15315: loop was not vectorized: low trip count
         remark #15450: unmasked unaligned unit stride loads: 2 
         remark #15475: --- begin vector loop cost summary ---
         remark #15479: lightweight vector operations: 35 
         remark #15480: medium-overhead vector operations: 1 
         remark #15481: heavy-overhead vector operations: 1 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../../src/core/firstOrderLbHelpers.h(67,7) inlined into ../../src/core/boundaryPostProcessors2D.hh(189,7)
      <Remainder>
      LOOP END
   LOOP END
LOOP END
===========================================================================

Begin optimization report for: olb::OuterVelocityCornerProcessor2D<double, olb::descriptors::D2Q9Descriptor, 1, 1>::process(olb::OuterVelocityCornerProcessor2D<double, olb::descriptors::D2Q9Descriptor, 1, 1> *, olb::BlockLattice2D<double, olb::descriptors::D2Q9Descriptor> &)

    Report from: Vector optimizations [vec]


LOOP BEGIN at ../../src/core/finiteDifference2D.h(66,5) inlined into ../../src/core/boundaryPostProcessors2D.hh(163,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 3 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15467: unmasked aligned streaming stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 17 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 2.420 
   remark #15479: lightweight vector operations: 13 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/finiteDifference2D.h(66,5) inlined into ../../src/core/boundaryPostProcessors2D.hh(164,3)
   remark #15300: LOOP WAS VECTORIZED
   remark #15448: unmasked aligned unit stride loads: 3 
   remark #15449: unmasked aligned unit stride stores: 1 
   remark #15467: unmasked aligned streaming stores: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 17 
   remark #15477: vector loop cost: 7.000 
   remark #15478: estimated potential speedup: 1.700 
   remark #15479: lightweight vector operations: 13 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/util.h(92,3) inlined into ../../src/core/boundaryPostProcessors2D.hh(185,12)
   remark #15335: loop was not vectorized: vectorization possible but seems inefficient. Use vector always directive or -vec-threshold0 to override 
   remark #15448: unmasked aligned unit stride loads: 1 
   remark #15475: --- begin vector loop cost summary ---
   remark #15476: scalar loop cost: 8 
   remark #15477: vector loop cost: 3.500 
   remark #15478: estimated potential speedup: 0.610 
   remark #15479: lightweight vector operations: 6 
   remark #15480: medium-overhead vector operations: 1 
   remark #15488: --- end vector loop cost summary ---
LOOP END

LOOP BEGIN at ../../src/core/boundaryPostProcessors2D.hh(186,3)
   remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details

   LOOP BEGIN at ../../src/core/firstOrderLbHelpers.h(66,5) inlined into ../../src/core/boundaryPostProcessors2D.hh(189,7)
      remark #15344: loop was not vectorized: vector dependence prevents vectorization. First dependence is shown below. Use level 5 report for details
      remark #15346: vector dependence: assumed FLOW dependence between iPi line 75 and iPi line 67

      LOOP BEGIN at ../../src/core/firstOrderLbHelpers.h(67,7) inlined into ../../src/core/boundaryPostProcessors2D.hh(189,7)
         remark #15315: loop was not vectorized: low trip count
         remark #15450: unmasked unaligned unit stride loads: 2 
         remark #15475: --- begin vector loop cost summary ---
         remark #15479: lightweight vector operations: 35 
         remark #15480: medium-overhead vector operations: 1 
         remark #15481: heavy-overhead vector operations: 1 
         remark #15487: type converts: 1 
         remark #15488: --- end vector loop cost summary ---
      LOOP END

      LOOP BEGIN at ../../src/core/firstOrderLbHelpers.h(67,7) inlined into ../../src/core/boundaryPostProcessors2D.hh(189,7)
      <Remainder>
      LOOP END
   LOOP END
LOOP END
===========================================================================
